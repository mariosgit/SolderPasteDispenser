{"mappings":"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","sources":["node_modules/canvas-coords/dist/index.js","src/device.ts","src/deviceMarlin.ts","node_modules/kd-tree-javascript/kdTree-min.js","src/pcb.ts","src/index.ts"],"sourcesContent":["(function () {var a={};function g(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function c(t,e){for(var o=0;o<e.length;o++){var s=e[o];s.enumerable=s.enumerable||!1,s.configurable=!0,\"value\"in s&&(s.writable=!0),Object.defineProperty(t,s.key,s)}}function h(t,e,o){return e&&c(t.prototype,e),o&&c(t,o),t}var i=function(){function t(e,o){var s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"gray\",i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:\"16px Monospace\",r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,n=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;g(this,t),this.x=r,this.y=n,this.ctx=e,this.canvas=o,this.color=s,this.font=i,this.setPos=this.setPos.bind(this)}return h(t,[{key:\"track\",value:function(){var t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],e=this.canvas;return t?e.addEventListener(\"mousemove\",this.setPos):e.removeEventListener(\"mousemove\",this.setPos),this}},{key:\"setPos\",value:function(t){var e=this.canvas.getBoundingClientRect();return this.x=Math.floor(t.clientX-e.left),this.y=Math.floor(t.clientY-e.top),this}},{key:\"draw\",value:function(){var t=this.x,e=this.y,o=this.canvas,s=this.ctx,i=this.font,r=this.color,n=\"X: \".concat(t,\", Y: \").concat(e);s.save(),s.fillStyle=r,s.font=i;var a=t<o.width/2?20:-s.measureText(n).width-20,v=e<o.height/2?25:-18;return s.fillText(n,this.x+a,this.y+v),s.restore(),this}}]),t}();function d(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function f(t,e){for(var i=0;i<e.length;i++){var s=e[i];s.enumerable=s.enumerable||!1,s.configurable=!0,\"value\"in s&&(s.writable=!0),Object.defineProperty(t,s.key,s)}}function e(t,e,i){return e&&f(t.prototype,e),i&&f(t,i),t}var b=function(){function t(e,i,s,r,l,n){d(this,t),this.color=e,this.lineWidth=i,this.startX=s,this.startY=r,this.endX=l,this.endY=n}return e(t,[{key:\"draw\",value:function(t){var e=this.color,i=this.lineWidth,s=this.startX,r=this.startY,l=this.endX,n=this.endY;t.save(),t.beginPath(),t.strokeStyle=e,t.lineWidth=i,t.moveTo(s,r),t.lineTo(l,n),t.stroke(),t.restore()}}]),t}(),j=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"gray\",i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.3,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:10,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:\"DarkGray\",n=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.5,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:\"16px Monospace\";d(this,t),this.color=e,this.lineWidth=i,this.step=s,this.boldNth=r,this.boldColor=l,this.boldWidth=n,this.font=o,this.lines=null}return e(t,[{key:\"createLines\",value:function(t){for(var e=this.color,i=this.lineWidth,s=this.step,r=this.boldNth,l=this.boldColor,n=this.boldWidth,o=[],a=r*s,h=0;h<t.width;h+=s){var v=h%a==0;o.push(v?new b(l,n,h,0,h,t.height):new b(e,i,h,0,h,t.height))}for(var $=0;$<t.height;$+=s){var d=$%a==0;o.push(d?new b(l,n,0,$,t.width,$):new b(e,i,0,$,t.width,$))}this.lines=o}},{key:\"drawText\",value:function(t,e){var i=this.step,s=this.boldNth,r=this.boldColor,l=this.font;t.save(),t.font=l,t.fillStyle=r,t.fillText(\"0\",1,15);for(var n=i*s;n<e.width;n+=i*s)t.fillText(n,n,15);for(var o=i*s;o<e.height;o+=i*s)t.fillText(o,0,o+15);t.restore()}},{key:\"draw\",value:function(t,e){this.lines||this.createLines(e),this.lines.forEach(function(e){return e.draw(t)}),this.drawText(t,e)}}]),t}();a.Mouse=i,a.Grid=j;if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=a}else if(typeof define===\"function\"&&define.amd){define(function(){return a})}})();","// todo:\r\n//   move out serial ? Or look for a serial readline implementation ???\r\n// bugs:\r\n//   disconnect - Failed to execute 'close' on 'SerialPort': Cannot cancel a locked stream\r\n\r\n/**\r\n * Device: abstracts access to machine.\r\n * It \"simplifies\" serial port access. At the moment it only ollows \"write and response\" style communication.\r\n * The serial port is opened, then a reader loop is startet, which pushes each new line into the inputQueue.\r\n * Function serialWriteWait is used to issue commands and wait for the device to aknowledge.\r\n */\r\n\r\nexport class Device {\r\n    deviceCheck: HTMLButtonElement | null;\r\n    deviceConnect: HTMLButtonElement | null;\r\n    deviceDisconnect: HTMLButtonElement | null;\r\n    deviceDosome: HTMLButtonElement | null;\r\n    deviceInput: HTMLInputElement | null;\r\n    deviceInputForm: HTMLFormElement | null;\r\n    deviceInfo: HTMLDivElement | null;\r\n    deviceLog: HTMLDivElement | null;\r\n    deviceSerial: HTMLDivElement | null;\r\n    ports: any;\r\n    port: any;\r\n    textDecoder: TextDecoderStream;\r\n    reader: ReadableStreamDefaultReader<string>;\r\n    inputLast: string = '';\r\n\r\n    protected inputQueue: string[] = [];\r\n\r\n    constructor() {\r\n        this.deviceCheck = <HTMLButtonElement | null>document.getElementById(\"deviceCheck\");\r\n        this.deviceConnect = <HTMLButtonElement | null>document.getElementById(\"deviceConnect\");\r\n        this.deviceDisconnect = <HTMLButtonElement | null>document.getElementById(\"deviceDisconnect\");\r\n        this.deviceDosome = <HTMLButtonElement | null>document.getElementById(\"deviceDosome\");\r\n        this.deviceInput = <HTMLInputElement | null>document.getElementById(\"deviceInput\");\r\n        this.deviceInputForm = <HTMLFormElement | null>document.getElementById(\"deviceInputForm\");\r\n        this.deviceInfo = <HTMLDivElement | null>document.getElementById(\"deviceInfo\");\r\n        this.deviceLog = <HTMLDivElement | null>document.getElementById(\"deviceLog\");\r\n        this.deviceSerial = <HTMLDivElement | null>document.getElementById(\"deviceSerial\");\r\n        this.port = null;\r\n        this.textDecoder = new TextDecoderStream();\r\n        if (this.deviceCheck && this.deviceConnect && this.deviceDisconnect && this.deviceDosome && this.deviceInput && this.deviceInputForm) {\r\n            this.deviceCheck.onclick = this.serialCheck.bind(this);\r\n            this.deviceConnect.onclick = this.serialConnect.bind(this);\r\n            this.deviceDisconnect.onclick = this.serialDisconnect.bind(this);\r\n            // this.deviceDosome.onclick = this.serialDosome.bind(this);\r\n            // this.deviceInput.onchange = this.serialInputChange.bind(this);\r\n            this.deviceInputForm.onsubmit = this.serialInputForm.bind(this);\r\n        }\r\n        this.serialCheck();\r\n    }\r\n\r\n\r\n    /**\r\n     * Overwrite this in derived class to get notification when some device was connected.\r\n     */\r\n    protected onSerialConnected() {\r\n        console.log('Device: onSerialConnected')\r\n    }\r\n    /**\r\n     * Overwrite this in derived class to get notification when some device was disconnected.\r\n     */\r\n    protected onSerialDisconnected() {\r\n        console.log('Device: onSerialDisconnected')\r\n    }\r\n\r\n    /**\r\n     * Opens a dialog where user can select a device to connect.\r\n     */\r\n    public async serialConnect() {\r\n        // opens dialog where user can select a device\r\n        const port = await navigator.serial.requestPort();\r\n        this.serialPortOpen(port);\r\n    }\r\n\r\n    public async serialConnectDevice(vid: number, pid: number) {\r\n        for (let port of this.ports) {\r\n            console.log(`serialConnectDevice: serial available, ports: `, port.getInfo());\r\n            const { usbProductId, usbVendorId } = port.getInfo();\r\n            if (usbProductId == pid && usbVendorId == vid) {\r\n                this.serialPortOpen(port);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Disconnect from device\r\n     */\r\n    public async serialDisconnect() {\r\n        if (this.port) {\r\n            // this.reader.releaseLock(); // does'nt do it :(\r\n            this.port.close().then(() => {\r\n                this.port = null;\r\n                console.log('port closed');\r\n            }).catch((error) => {\r\n                console.warn(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  Wait until some response or timeout, returns response or 'timeout' or might fail with 'busy' or 'disconnected'\r\n     */\r\n    public async serialWriteWait(value: string, timeout: number = 10000): Promise<string> {\r\n        // clean serial input\r\n        this.inputQueue = [];\r\n        return new Promise<string>(async (resolve, reject) => {\r\n            if (this.port) {\r\n                try {\r\n                    this.serialWrite(value);\r\n                    // wait until some response or timeout\r\n                    let available = false;\r\n                    const timestep = 10;\r\n                    let maxtime = timeout;\r\n                    while (!available) {\r\n                        available = await this.serialAvail(timestep);\r\n                        maxtime = maxtime - timestep;\r\n                        if (maxtime <= 0)\r\n                            break;\r\n                    }\r\n                    console.log(`serialWriteWait avail:${available} time:${timeout - maxtime}`);\r\n\r\n                    console.log(`serialWriteWait check: ${this.inputQueue.length}`);\r\n                    if (this.inputQueue.length > 0) {\r\n                        const inp = <string>this.inputQueue.pop();\r\n                        // console.log(`serialWriteWait resolve: ${inp}`);\r\n                        resolve(inp);\r\n                    } else {\r\n                        // console.log(`serialWriteWait reject: `);\r\n                        reject('timeout');\r\n                    }\r\n                } catch (err) {\r\n                    console.warn(err);\r\n                    reject('busy');\r\n                }\r\n            } else {\r\n                console.warn(this.port);\r\n                reject('disconnected');\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * Helper function to write anything to the device.\r\n     * @param event\r\n     */\r\n    public serialInputForm(event: InputEvent) { // fires when return is entered\r\n        if (this.deviceInput) {\r\n            event.preventDefault(); // form will do strange things !\r\n            // console.log(event);\r\n            this.serialInputChange(event);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Helper function to write anything to the device.\r\n     * @param event\r\n     */\r\n    public async serialInputChange(event: InputEvent) { // fires when return is entered\r\n        if (this.deviceInput) {\r\n            if (this.port) {\r\n                let text = this.deviceInput.value;\r\n                if (text.length > 0) {\r\n                    this.serialWrite(text);\r\n                }\r\n            } else {\r\n                console.warn('serialInputChange - no port open');\r\n            }\r\n        }\r\n    }\r\n\r\n    /* ***************** private stuff **************************** */\r\n\r\n    private async serialCheck() {\r\n        let result = false;\r\n        if (\"serial\" in navigator) {\r\n            this.updatePorts();\r\n            navigator.serial.addEventListener(\"connect\", (event) => {\r\n                // TODO: Automatically open event.target or warn user a port is available.\r\n                console.log('serialCheck:connect', event);\r\n                this.updatePorts();\r\n            });\r\n            navigator.serial.addEventListener(\"disconnect\", (event) => {\r\n                // TODO: Remove |event.target| from the UI.\r\n                // If the serial port was opened, a stream error would be observed as well.\r\n                console.log('serialCheck:disconnect', event);\r\n            });\r\n            result = true;\r\n        } else {\r\n            console.warn('No serial API available, try another browser');\r\n            this.serialError(\"This browser does not support the serial port. Connection to device impossible! Use Chrome!\");\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private updatePorts() {\r\n        // lists all recently used ports, could just open one then.\r\n        navigator.serial.getPorts().then((ports) => {\r\n            this.ports = ports;\r\n            let html = '';//devices:<br>';\r\n            for (let port of ports) {\r\n                console.log(`serial available, ports: `, port.getInfo());\r\n                const { usbProductId, usbVendorId } = port.getInfo();\r\n                console.log(`updatePorts port pid:${usbProductId} vid:${usbVendorId}`);\r\n                html += `<div class=\"w3-container\"><i class=\"fa-solid fa-microchip\"></i> pid:${usbProductId} vid:${usbVendorId} <button class=\"w3-btn w3-light-grey w3-tiny\" id=\"${usbVendorId}-${usbProductId}\"><i class=\"fa fa-plug\"></i> connect </button></div>`;\r\n            }\r\n            if (this.deviceInfo) {\r\n                this.deviceInfo.innerHTML = html;\r\n                const btns = this.deviceInfo.getElementsByTagName('button');\r\n                for (const btn of btns) {\r\n                    btn.onclick = () => { const ids = btn.id.split('-'); console.log(ids); this.serialConnectDevice(parseInt(ids[0]), parseInt(ids[1])) };\r\n                }\r\n            }\r\n            if (this.deviceConnect && this.ports.length == 0) {\r\n                this.deviceConnect.className.replace('w3-hide', 'w3-show');\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Opens a givven port. Can be used after queriing ports with updatePorts.\r\n     * @param port\r\n     */\r\n    private async serialPortOpen(port: any) {\r\n        port.onconnect = () => {\r\n            console.log(`CONNECTED`);\r\n            // this.onSerialConnected(); // signal derived class // tut nix :(\r\n        };\r\n        port.ondisconnect = () => {\r\n            console.log(`DISCONNECTED`);\r\n            this.onSerialDisconnected();\r\n        };\r\n        await port.open({ baudRate: 250000 }).then((val) => {\r\n            this.port = port;\r\n            if (this.deviceLog) {\r\n                this.deviceLog.innerHTML = \"connected<br>\";\r\n            }\r\n            console.log('port opened ? ', this.port);\r\n            this.onSerialConnected();\r\n\r\n            setTimeout(this.serialRead.bind(this), 0); // start read loop\r\n        }).catch((error) => {\r\n            console.warn(error);\r\n            this.serialError(error.toString());\r\n        });\r\n    }\r\n\r\n    protected serialError(error: string) {\r\n        console.warn('serialError', error);\r\n        if (this.deviceLog) {\r\n            this.deviceLog.innerHTML += `<span class=\"w3-red\">${error}</span>`\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internal, starts the read line loop.\r\n     */\r\n    private async serialRead() {\r\n        if (this.port) {\r\n            const readableStreamClosed = this.port.readable.pipeTo(this.textDecoder.writable);\r\n            this.reader = this.textDecoder.readable.getReader();\r\n            // Listen to data coming from the serial device.\r\n            setTimeout(this.serialReadon.bind(this), 1); // will loop there\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internal, handles the read line loop.\r\n     */\r\n    private async serialReadon() {\r\n        try {\r\n            const { value, done } = await this.reader.read();\r\n            if (done) {\r\n                // Allow the serial port to be closed later. // Does not happen !\r\n                this.reader.releaseLock();\r\n                console.log('serialRead - done');\r\n            } else {\r\n                let pushedStuff = false;\r\n                // value is a string.\r\n                if (value.indexOf('\\n') != -1) {\r\n                    const values = value.split('\\n');\r\n                    // console.log(values);\r\n                    if (values.length <= 1) {\r\n                        console.error('Assertion failed ', values);\r\n                    }; // there is a \\n in it !\r\n                    for (let i = 0; i < values.length - 1; i++) {\r\n                        this.inputLast += values[i];\r\n                        this.inputQueue.push(this.inputLast);\r\n                        this.serialLog(this.inputLast, true);\r\n                        this.inputLast = '';\r\n                        pushedStuff = true;\r\n                    }\r\n                    this.inputLast = values[values.length - 1];\r\n                    // console.log(`serialReadon last: \"${this.inputLast}\"`);\r\n                } else {\r\n                    // no \\n\r\n                    this.inputLast += value;\r\n                    // console.log(`serialReadon last: \"${this.inputLast}\"`);\r\n                }\r\n\r\n                if (pushedStuff) {\r\n                    setTimeout(this.serialCallback.bind(this), 5);\r\n                }\r\n                setTimeout(this.serialReadon.bind(this), 1); // will loop there\r\n            }\r\n        } catch (error) {\r\n            console.warn(error);\r\n            this.serialError(error.toString());\r\n        }\r\n    }\r\n\r\n    private serialCallback() {\r\n        // const elem = document.getElementById('deviceLog');\r\n        // if (elem) {\r\n        //     let latest = this.inputQueue.pop();\r\n        //     while (latest) {\r\n        //         elem.innerHTML += `${latest}<br>`;\r\n        //         latest = this.inputQueue.pop();\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    private async serialWrite(value: string) {\r\n        this.serialLog(value, false);\r\n\r\n        // write...\r\n        let utf8Encode = new TextEncoder();\r\n        const writer = this.port.writable.getWriter();\r\n        await writer.write(utf8Encode.encode(`${value}\\n`));\r\n        writer.releaseLock();\r\n    }\r\n\r\n    /**\r\n     * Waits until data was read or timeout\r\n     * @param timeout\r\n     * @returns\r\n     */\r\n    private serialAvail(timeout: number = 10): Promise<boolean> {\r\n        return new Promise<boolean>((resolve) => {\r\n            if (this.inputQueue.length > 0) {\r\n                resolve(true);\r\n            } else {\r\n                setTimeout(() => {\r\n                    resolve(false);\r\n                }, timeout);\r\n            }\r\n        });\r\n    }\r\n\r\n    private serialLog(text: string, incomming: boolean) {\r\n        if (this.deviceSerial) {\r\n            while(this.deviceSerial.childElementCount > 20) {\r\n                let ch = this.deviceSerial.firstChild;\r\n                if(ch) {\r\n                    this.deviceSerial.removeChild(ch);\r\n                }\r\n            }\r\n            if (incomming) {\r\n                this.deviceSerial.innerHTML += `<div><i class=\"fa-solid fa-arrow-right-to-bracket\"></i> ${text}</div>`\r\n            } else {\r\n                this.deviceSerial.innerHTML += `<div><i class=\"fa-solid fa-arrow-up-right-from-square\"></i> ${text}</div>`;\r\n            }\r\n        }\r\n    }\r\n}","/**\r\n * Marlin: Device specific implementation.\r\n*/\r\n\r\nimport { Device } from \"./device\";\r\n\r\nenum Status {\r\n    Undefined = 1,\r\n    Ready,\r\n    Busy,\r\n    NC\r\n}\r\n\r\nexport class Marlin extends Device {\r\n    marlinDiv: HTMLElement | null;\r\n    marlinDivStatus: HTMLElement | null;\r\n    marlinDivPosition: HTMLElement | null;\r\n    marlinDivCommands: HTMLElement | null;\r\n    constructor() {\r\n        super();\r\n        this.marlinDiv = document.getElementById(\"Marlin\");\r\n        this.initHtml();\r\n    }\r\n    protected onSerialConnected() {\r\n        console.log('Marlin: onSerialConnected');\r\n        // read over first messages\r\n        // setTimeout(() => {\r\n        //     while(this.inputQueue.length > 0) {\r\n        //         if (this.marlinDivPosition) {\r\n        //             this.marlinDivPosition.innerHTML += `${this.inputQueue.pop()}`;\r\n        //         }\r\n        //     }\r\n        this.setStatus(Status.Ready)\r\n        if (this.marlinDivStatus && this.marlinDivCommands) {\r\n            this.setStatus(Status.Ready);\r\n            this.marlinDivCommands.className = this.marlinDivCommands.className.replace('w3-hide', 'w3-show');\r\n        }\r\n        // }, 1000);\r\n\r\n        // wait 3sec, run commands 'cold extrude','relative positioning','report position'\r\n        setTimeout(() => {\r\n            this.onBtnCold().then(() => {\r\n                this.onBtnRel().then(() => {\r\n                    this.onBtnPos().then(() => {\r\n                        console.log('Marlin: onSerialConnected init sequence finished');\r\n                    });\r\n                });\r\n            });\r\n        }, 3000);\r\n    }\r\n    protected onSerialDisconnected() {\r\n        console.log('Marlin: onSerialDisconnected');\r\n        if (this.marlinDivStatus && this.marlinDivCommands) {\r\n            this.setStatus(Status.NC);\r\n            this.marlinDivCommands.className = this.marlinDivCommands.className.replace('w3-show', 'w3-hide');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Inherited from Device, adds Status message updates.\r\n     * @param value\r\n     * @param timeout\r\n     * @returns\r\n     */\r\n    public async serialWriteWait(value: string, timeout: number = 10000): Promise<string> {\r\n        return new Promise<string>(async (resolve, reject) => {\r\n            this.setStatus(Status.Busy);\r\n            super.serialWriteWait(value, timeout).then((result) => {\r\n                resolve(result);\r\n            }).catch((reason) => {\r\n                reject(reason);\r\n            }).finally(() => {\r\n                this.setStatus(Status.Ready);\r\n            });\r\n        });\r\n    }\r\n\r\n    private setStatus(status: Status) {\r\n        let html = `unknown status ${status}`;\r\n        switch (status) {\r\n            case Status.Ready:\r\n                html = 'Status: <i class=\"fa-solid fa-plug\"></i> ready'; break;\r\n            case Status.Busy:\r\n                html = 'Status: <i class=\"fa-solid fa-plug-circle-bolt\"></i> busy'; break;\r\n            case Status.NC:\r\n                html = 'Status: <i class=\"fa-solid fa-plug-circle-xmark\"></i> not connected'; break;\r\n        }\r\n        if (this.marlinDivStatus) {\r\n            this.marlinDivStatus.innerHTML = html;\r\n        }\r\n    }\r\n\r\n    onBtnHome(): Promise<void> {\r\n        return new Promise<void>((resolve) => {\r\n            this.serialWriteWait('G28').then((value) => {\r\n                console.log(value);\r\n            }).catch((reason) => {\r\n                console.warn(reason)\r\n            }).finally(() => {\r\n                resolve();\r\n            });\r\n        });\r\n\r\n        //// timeout too small for this command, see what happens\r\n        // this.serialWriteWait('G28', 100).then((value) => {\r\n        //     console.log(value);\r\n        // }).catch((reason) => {\r\n        //     console.warn(reason);\r\n        //     // try again (default timeout is 10sec)\r\n        //     this.serialWriteWait('G28').then((value) => {\r\n        //         console.log(value);\r\n        //         this.onBtnPos();\r\n        //     }).catch((reason) => { console.warn(reason) });\r\n        // });\r\n    };\r\n    onBtnPos(): Promise<void> {\r\n        return new Promise<void>((resolve) => {\r\n            this.serialWriteWait('M114').then((value) => {\r\n                console.log(value);\r\n                if (this.marlinDivPosition) {\r\n                    this.marlinDivPosition.innerText = value;\r\n                }\r\n            }).catch((reason) => {\r\n                console.warn(reason);\r\n            }).finally(() => {\r\n                resolve();\r\n            });\r\n        });\r\n    };\r\n    onBtnAbs() {\r\n        return new Promise<void>((resolve) => {\r\n            this.serialWriteWait('G90').then((value) => {\r\n                console.log(value);\r\n            }).catch((reason) => {\r\n                console.warn(reason);\r\n            }).finally(() => {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n    onBtnRel() {\r\n        return new Promise<void>((resolve) => {\r\n            this.serialWriteWait('G91').then((value) => {\r\n                console.log(value);\r\n            }).catch((reason) => {\r\n                console.warn(reason);\r\n            }).finally(() => {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n    onBtnCold() {\r\n        return new Promise<void>((resolve) => {\r\n            this.serialWriteWait('M302 S0').then((value) => {\r\n                console.log(value);\r\n            }).catch((reason) => {\r\n                console.warn(reason);\r\n            }).finally(() => {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    onBtnXP() {\r\n        this.serialWriteWait('G0 X10').then((value) => { this.onBtnPos(); });\r\n    };\r\n    onBtnXM() {\r\n        this.serialWriteWait('G0 X-10').then((value) => { this.onBtnPos(); });\r\n    };\r\n    onBtnYP() {\r\n        this.serialWriteWait('G0 Y10').then((value) => { this.onBtnPos(); });\r\n    };\r\n    onBtnYM() {\r\n        this.serialWriteWait('G0 Y-10').then((value) => { this.onBtnPos(); });\r\n    };\r\n    onBtnZP() {\r\n        this.serialWriteWait('G0 Z10').then((value) => { this.onBtnPos(); });\r\n    };\r\n    onBtnZM() {\r\n        this.serialWriteWait('G0 Z-10').then((value) => { this.onBtnPos(); });\r\n    };\r\n    onBtnEP() {\r\n        this.serialWriteWait('G0 E10').then((value) => { this.onBtnPos(); });\r\n    };\r\n    onBtnEM() {\r\n        this.serialWriteWait('G0 E-10').then((value) => { this.onBtnPos(); });\r\n    };\r\n\r\n    private initHtml() {\r\n        if (this.marlinDiv) {\r\n            this.marlinDiv.innerHTML = `\r\n            <div id=\"marlinStatus\"></div>\r\n            <div id=\"marlinPosition\" class=\"w3-tiny\"></div>\r\n            <div id=\"marlinCommands\" class=\"w3-hide\">\r\n            <button id=\"marlinHome\" class=\"w3-button w3-light-grey\">home</button>\r\n            <button id=\"marlinPos\" class=\"w3-button w3-light-grey\">pos?</button>\r\n            <button id=\"marlinRel\" class=\"w3-button w3-light-grey\">rel</button>\r\n            <button id=\"marlinAbs\" class=\"w3-button w3-light-grey\">abs</button>\r\n            <button id=\"marlinCold\" class=\"w3-button w3-light-grey\">cold</button>\r\n            <br>\r\n            <button id=\"marlinXP\" class=\"w3-button w3-light-grey\">x+</button>\r\n            <button id=\"marlinXM\" class=\"w3-button w3-light-grey\">x-</button>\r\n            <button id=\"marlinYP\" class=\"w3-button w3-light-grey\">y+</button>\r\n            <button id=\"marlinYM\" class=\"w3-button w3-light-grey\">y-</button>\r\n            <button id=\"marlinZP\" class=\"w3-button w3-light-grey\">z+</button>\r\n            <button id=\"marlinZM\" class=\"w3-button w3-light-grey\">z-</button>\r\n            <button id=\"marlinEP\" class=\"w3-button w3-light-grey\">e+</button>\r\n            <button id=\"marlinEM\" class=\"w3-button w3-light-grey\">e-</button>\r\n            </div>\r\n            `\r\n            this.marlinDivStatus = document.getElementById(\"marlinStatus\");\r\n            this.marlinDivPosition = document.getElementById(\"marlinPosition\");\r\n            this.marlinDivCommands = document.getElementById(\"marlinCommands\");\r\n            this.setStatus(Status.NC);\r\n            const marlinBtnHome = document.getElementById(\"marlinHome\");\r\n            if (marlinBtnHome) {\r\n                marlinBtnHome.onclick = this.onBtnHome.bind(this);\r\n            }\r\n            const marlinBtnPos = document.getElementById(\"marlinPos\");\r\n            if (marlinBtnPos) {\r\n                marlinBtnPos.onclick = this.onBtnPos.bind(this);\r\n            }\r\n            const marlinBtnRel = document.getElementById(\"marlinRel\");\r\n            if (marlinBtnRel) {\r\n                marlinBtnRel.onclick = this.onBtnRel.bind(this);\r\n            }\r\n            const marlinBtnAbs = document.getElementById(\"marlinAbs\");\r\n            if (marlinBtnAbs) {\r\n                marlinBtnAbs.onclick = this.onBtnAbs.bind(this);\r\n            }\r\n            const marlinBtnCold = document.getElementById(\"marlinCold\");\r\n            if (marlinBtnCold) {\r\n                marlinBtnCold.onclick = this.onBtnCold.bind(this);\r\n            }\r\n\r\n            const marlinBtnXP = document.getElementById(\"marlinXP\");\r\n            if (marlinBtnXP) {\r\n                marlinBtnXP.onclick = this.onBtnXP.bind(this);\r\n            }\r\n            const marlinBtnXM = document.getElementById(\"marlinXM\");\r\n            if (marlinBtnXM) {\r\n                marlinBtnXM.onclick = this.onBtnXM.bind(this);\r\n            }\r\n            const marlinBtnYP = document.getElementById(\"marlinYP\");\r\n            if (marlinBtnYP) {\r\n                marlinBtnYP.onclick = this.onBtnYP.bind(this);\r\n            }\r\n            const marlinBtnYM = document.getElementById(\"marlinYM\");\r\n            if (marlinBtnYM) {\r\n                marlinBtnYM.onclick = this.onBtnYM.bind(this);\r\n            }\r\n            const marlinBtnZP = document.getElementById(\"marlinZP\");\r\n            if (marlinBtnZP) {\r\n                marlinBtnZP.onclick = this.onBtnZP.bind(this);\r\n            }\r\n            const marlinBtnZM = document.getElementById(\"marlinZM\");\r\n            if (marlinBtnZM) {\r\n                marlinBtnZM.onclick = this.onBtnZM.bind(this);\r\n            }\r\n            const marlinBtnEP = document.getElementById(\"marlinEP\");\r\n            if (marlinBtnEP) {\r\n                marlinBtnEP.onclick = this.onBtnEP.bind(this);\r\n            }\r\n            const marlinBtnEM = document.getElementById(\"marlinEM\");\r\n            if (marlinBtnEM) {\r\n                marlinBtnEM.onclick = this.onBtnEM.bind(this);\r\n            }\r\n        }\r\n    }\r\n}\r\n","/**\n * k-d Tree JavaScript - V 1.01\n *\n * https://github.com/ubilabs/kd-tree-javascript\n *\n * @author Mircea Pricop <pricop@ubilabs.net>, 2012\n * @author Martin Kleppe <kleppe@ubilabs.net>, 2012\n * @author Ubilabs http://ubilabs.net, 2012\n * @license MIT License <http://www.opensource.org/licenses/mit-license.php>\n */!function(t,n){\"function\"==typeof define&&define.amd?define([\"exports\"],n):n(\"object\"==typeof exports?exports:t)}(this,function(t){function n(t,n,o){this.obj=t,this.left=null,this.right=null,this.parent=o,this.dimension=n}function o(t){this.content=[],this.scoreFunction=t}o.prototype={push:function(t){this.content.push(t),this.bubbleUp(this.content.length-1)},pop:function(){var t=this.content[0],n=this.content.pop();return this.content.length>0&&(this.content[0]=n,this.sinkDown(0)),t},peek:function(){return this.content[0]},remove:function(t){for(var n=this.content.length,o=0;o<n;o++)if(this.content[o]==t){var i=this.content.pop();return void(o!=n-1&&(this.content[o]=i,this.scoreFunction(i)<this.scoreFunction(t)?this.bubbleUp(o):this.sinkDown(o)))}throw new Error(\"Node not found.\")},size:function(){return this.content.length},bubbleUp:function(t){for(var n=this.content[t];t>0;){var o=Math.floor((t+1)/2)-1,i=this.content[o];if(!(this.scoreFunction(n)<this.scoreFunction(i)))break;this.content[o]=n,this.content[t]=i,t=o}},sinkDown:function(t){for(var n=this.content.length,o=this.content[t],i=this.scoreFunction(o);;){var e=2*(t+1),r=e-1,l=null;if(r<n){var u=this.content[r],h=this.scoreFunction(u);h<i&&(l=r)}if(e<n){var s=this.content[e];this.scoreFunction(s)<(null==l?i:h)&&(l=e)}if(null==l)break;this.content[t]=this.content[l],this.content[l]=o,t=l}}},t.kdTree=function(t,i,e){function r(t,o,i){var l,u,h=o%e.length;return 0===t.length?null:1===t.length?new n(t[0],h,i):(t.sort(function(t,n){return t[e[h]]-n[e[h]]}),l=Math.floor(t.length/2),u=new n(t[l],h,i),u.left=r(t.slice(0,l),o+1,u),u.right=r(t.slice(l+1),o+1,u),u)}var l=this;Array.isArray(t)?this.root=r(t,0,null):function(t){function n(t){t.left&&(t.left.parent=t,n(t.left)),t.right&&(t.right.parent=t,n(t.right))}l.root=t,n(l.root)}(t),this.toJSON=function(t){t||(t=this.root);var o=new n(t.obj,t.dimension,null);return t.left&&(o.left=l.toJSON(t.left)),t.right&&(o.right=l.toJSON(t.right)),o},this.insert=function(t){function o(n,i){if(null===n)return i;var r=e[n.dimension];return t[r]<n.obj[r]?o(n.left,n):o(n.right,n)}var i,r,l=o(this.root,null);null!==l?(i=new n(t,(l.dimension+1)%e.length,l),r=e[l.dimension],t[r]<l.obj[r]?l.left=i:l.right=i):this.root=new n(t,0,null)},this.remove=function(t){function n(o){if(null===o)return null;if(o.obj===t)return o;var i=e[o.dimension];return t[i]<o.obj[i]?n(o.left,o):n(o.right,o)}function o(t){function n(t,o){var i,r,l,u,h;return null===t?null:(i=e[o],t.dimension===o?null!==t.left?n(t.left,o):t:(r=t.obj[i],l=n(t.left,o),u=n(t.right,o),h=t,null!==l&&l.obj[i]<r&&(h=l),null!==u&&u.obj[i]<h.obj[i]&&(h=u),h))}var i,r,u;if(null===t.left&&null===t.right)return null===t.parent?void(l.root=null):(u=e[t.parent.dimension],void(t.obj[u]<t.parent.obj[u]?t.parent.left=null:t.parent.right=null));null!==t.right?(r=(i=n(t.right,t.dimension)).obj,o(i),t.obj=r):(r=(i=n(t.left,t.dimension)).obj,o(i),t.right=t.left,t.left=null,t.obj=r)}var i;null!==(i=n(l.root))&&o(i)},this.nearest=function(t,n,r){function u(o){function r(t,o){f.push([t,o]),f.size()>n&&f.pop()}var l,h,s,c,a=e[o.dimension],g=i(t,o.obj),p={};for(c=0;c<e.length;c+=1)c===o.dimension?p[e[c]]=t[e[c]]:p[e[c]]=o.obj[e[c]];h=i(p,o.obj),null!==o.right||null!==o.left?(u(l=null===o.right?o.left:null===o.left?o.right:t[a]<o.obj[a]?o.left:o.right),(f.size()<n||g<f.peek()[1])&&r(o,g),(f.size()<n||Math.abs(h)<f.peek()[1])&&null!==(s=l===o.left?o.right:o.left)&&u(s)):(f.size()<n||g<f.peek()[1])&&r(o,g)}var h,s,f;if(f=new o(function(t){return-t[1]}),r)for(h=0;h<n;h+=1)f.push([null,r]);for(l.root&&u(l.root),s=[],h=0;h<Math.min(n,f.content.length);h+=1)f.content[h][0]&&s.push([f.content[h][0].obj,f.content[h][1]]);return s},this.balanceFactor=function(){function t(n){return null===n?0:Math.max(t(n.left),t(n.right))+1}function n(t){return null===t?0:n(t.left)+n(t.right)+1}return t(l.root)/(Math.log(n(l.root))/Math.log(2))}},t.BinaryHeap=o});\n","import {kdTree} from 'kd-tree-javascript';\r\n\r\nclass BoundingBox {\r\n    minx: number = 99999;\r\n    miny: number = 99999;\r\n    maxx: number = -99999;\r\n    maxy: number = -99999;\r\n    constructor() { }\r\n    update(x: number, y: number) {\r\n        if (x < this.minx) this.minx = x;\r\n        if (y < this.miny) this.miny = y;\r\n        if (x > this.maxx) this.maxx = x;\r\n        if (y > this.maxy) this.maxy = y;\r\n        // console.log(`bb: ${this.miny} ${this.maxy} ${this.center()[1]}`);\r\n    }\r\n    center(zoom: number = 1.0): [x: number, y: number] {\r\n        return [(this.minx + (this.maxx - this.minx) / 2) * zoom, (this.miny + (this.maxy - this.miny) / 2) * zoom];\r\n    }\r\n    zero(zoom: number = 1.0): [x: number, y: number] {\r\n        return [this.minx * zoom, this.miny * zoom];\r\n    }\r\n    size(zoom: number = 1.0): [x: number, y: number] {\r\n        return [(this.maxx - this.minx) * zoom, (this.maxy - this.miny) * zoom];\r\n    }\r\n}\r\nclass PadStyle {\r\n    public form: string;\r\n    public width: number;\r\n    public height: number;\r\n    constructor(form: string, w: number, h: number) {\r\n        this.form = form;\r\n        this.width = w;\r\n        this.height = h;\r\n    }\r\n}\r\nclass Pad {\r\n    posX: number;\r\n    posY: number;\r\n    style: string;\r\n    constructor(style: string, x: number, y: number) {\r\n        this.posX = x;\r\n        this.posY = y;\r\n        this.style = style;\r\n    }\r\n}\r\n\r\nexport class PCB {\r\n    ctx: CanvasRenderingContext2D;\r\n    canvas: HTMLCanvasElement;\r\n    mapStyles: Map<string, PadStyle>;\r\n    mapPads: Map<string, Set<Pad>>;\r\n    fileName: string = \"\";\r\n\r\n    mouseFlag: boolean = false;\r\n    mouseStartX: number = 0;\r\n    mouseStartY: number = 0;\r\n    mouseOffX: number = 0;\r\n    mouseOffY: number = 0;\r\n\r\n    zoom: number = 6.0;\r\n    bb: BoundingBox;\r\n\r\n    tree: any;\r\n    nearest: any = [];\r\n\r\n    constructor(ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement) {\r\n        this.ctx = ctx;\r\n        this.canvas = canvas;\r\n        this.mapStyles = new Map<string, PadStyle>();\r\n        this.mapPads = new Map<string, Set<Pad>>();\r\n        this.bb = new BoundingBox();\r\n    }\r\n\r\n    draw() {\r\n        // theoretisch so...\r\n        // this.ctx.fillStyle = 'orangered';\r\n        this.ctx.fillStyle = 'antiquewhite';\r\n\r\n        // draw zero\r\n        this.ctx.strokeStyle = 'black';\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(-10 + this.mouseOffX, 0 + this.mouseOffY);\r\n        this.ctx.lineTo(10 + this.mouseOffX, 0 + this.mouseOffY);\r\n        this.ctx.moveTo(0 + this.mouseOffX, -10 + this.mouseOffY);\r\n        this.ctx.lineTo(0 + this.mouseOffX, 10 + this.mouseOffY);\r\n        this.ctx.stroke();\r\n\r\n        // draw bb center\r\n        this.ctx.strokeStyle = 'red';\r\n        let center = this.bb.center(this.zoom);\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(center[0] - 10 + this.mouseOffX, center[1] + this.mouseOffY);\r\n        this.ctx.lineTo(center[0] + 10 + this.mouseOffX, center[1] + this.mouseOffY);\r\n        this.ctx.moveTo(center[0] + this.mouseOffX, center[1] - 10 + this.mouseOffY);\r\n        this.ctx.lineTo(center[0] + this.mouseOffX, center[1] + 10 + this.mouseOffY);\r\n        this.ctx.stroke();\r\n        // draw bb\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(this.bb.zero(this.zoom)[0] + this.mouseOffX, this.bb.zero(this.zoom)[1] + this.mouseOffY, this.bb.size(this.zoom)[0], this.bb.size(this.zoom)[1]);\r\n        this.ctx.stroke();\r\n\r\n        for (let padstyle of this.mapPads.keys()) {\r\n\r\n            const sty = this.mapStyles.get(padstyle);\r\n            const padset = this.mapPads.get(padstyle);\r\n            if (sty && padset) {\r\n                const sw = sty.width * this.zoom;\r\n                const sh = sty.height * this.zoom;\r\n                for (let pad of padset.values()) {\r\n                    if (sty.form == 'R' || sty.form == 'O' || sty.form == 'RoundRect') {\r\n                        this.ctx.beginPath();\r\n\r\n                        this.ctx.fillRect(\r\n                            pad.posX * this.zoom - sw / 2.0 + this.mouseOffX,\r\n                            pad.posY * this.zoom - sh / 2.0 + this.mouseOffY,\r\n                            sw, sh);\r\n                        this.ctx.fill();\r\n\r\n                    } else if (sty.form == 'C') {\r\n                        this.ctx.beginPath();\r\n                        this.ctx.ellipse(\r\n                            pad.posX * this.zoom + this.mouseOffX,\r\n                            pad.posY * this.zoom + this.mouseOffY,\r\n                            sw / 2,\r\n                            sw / 2,\r\n                            0, 0, 2 * Math.PI);\r\n                        // this.ctx.arc(\r\n                        //     pad.posX * this.zoom - sw / 2.0 + this.mouseOffX,\r\n                        //     pad.posY * this.zoom - sh / 2.0 + this.mouseOffY,\r\n                        //     sty.width * this.zoom,\r\n                        //     0, 2 * Math.PI);\r\n                        this.ctx.fill();\r\n                    } else {\r\n                        console.log(`draw quatsch ${sty.form}`);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        } // for padstyle\r\n        this.ctx.strokeStyle = 'purple';\r\n        this.ctx.beginPath();\r\n        const csize = 5;\r\n        for(const near of this.nearest) {\r\n            this.ctx.moveTo((near[0].posX-csize) * this.zoom + this.mouseOffX, near[0].posY * this.zoom + this.mouseOffY);\r\n            this.ctx.lineTo((near[0].posX+csize) * this.zoom + this.mouseOffX, near[0].posY * this.zoom + this.mouseOffY);\r\n            this.ctx.moveTo(near[0].posX * this.zoom + this.mouseOffX, (near[0].posY+csize) * this.zoom + this.mouseOffY);\r\n            this.ctx.lineTo(near[0].posX * this.zoom + this.mouseOffX, (near[0].posY-csize) * this.zoom + this.mouseOffY);\r\n\r\n            // console.log(`nearest:${near[0].posX},${near[0].posY}  dist:${Math.sqrt(near[1])}`);\r\n        }\r\n        this.ctx.stroke();\r\n\r\n    }\r\n\r\n    addPadStyle(name: string, form: string, w: number, h: number) {\r\n        this.mapStyles.set(name, new PadStyle(form, w, h));\r\n    }\r\n\r\n    addPad(style: string, x: number, y: number) {\r\n        if (!this.mapPads.has(style)) {\r\n            this.mapPads.set(style, new Set<Pad>());\r\n        }\r\n        let padset = this.mapPads.get(style);\r\n        if (padset) {\r\n            const newpad = new Pad(style, x, y);\r\n            padset.add(newpad);\r\n            this.bb.update(x, y);\r\n        }\r\n    }\r\n\r\n    center() {\r\n        if (this.canvas) {\r\n            this.mouseOffX = -(this.bb.center()[0] * this.zoom) + this.canvas.width / 2;\r\n            this.mouseOffY = -(this.bb.center()[1] * this.zoom) + this.canvas.height / 2;\r\n        }\r\n    }\r\n\r\n    retree() {\r\n        try {\r\n            let pads : Pad[] = [];\r\n            for (let padsets of this.mapPads.values()) {\r\n                for (let pad of padsets) {\r\n                    pads.push(pad);\r\n                }\r\n            }\r\n            \r\n            this.tree = new kdTree(pads, PCB.distance, [\"posX\", \"posY\"]);\r\n            console.log('tree bf:', this.tree.balanceFactor());\r\n    \r\n        } catch(err) { console.error(err); }\r\n    }\r\n\r\n    mouseDown(event: MouseEvent) {\r\n        const trans = this.ctx.getTransform();\r\n        console.log(trans);\r\n        this.mouseStartX = event.clientX * trans.a - this.mouseOffX;\r\n        this.mouseStartY = event.clientY * trans.d - this.mouseOffY;\r\n        this.mouseFlag = true;\r\n    }\r\n    mouseUp(event: MouseEvent) {\r\n        this.mouseFlag = false;\r\n\r\n        const trans = this.ctx.getTransform();\r\n        console.log(trans, event);\r\n        console.log('', this.canvas.height-(event.clientY-this.canvas.offsetTop), this.mouseOffY);\r\n        const mx = (event.clientX * trans.a - this.mouseOffX) / this.zoom;\r\n        const my = (this.canvas.height-(event.clientY - this.canvas.offsetTop) - this.mouseOffY) / this.zoom;\r\n        if(this.tree) {\r\n            this.nearest = this.tree.nearest({ posX: mx, posY: my }, 1);\r\n            for(const near of this.nearest) {\r\n                console.log(`m:${mx},${my} nearest:${near[0].posX},${near[0].posY}  dist:${Math.sqrt(near[1])}`);\r\n            }\r\n        }\r\n    }\r\n    mouseMove(event: MouseEvent) {\r\n        const trans = this.ctx.getTransform();\r\n        if (this.mouseFlag) {\r\n            this.mouseOffX = event.clientX * trans.a - this.mouseStartX;\r\n            this.mouseOffY = event.clientY * trans.d - this.mouseStartY;\r\n        }\r\n    }\r\n    mouseWheel(event: WheelEvent) {\r\n        // console.log(event.deltaY);\r\n        if (event.deltaY > 0) {\r\n            this.zoom *= 1.1;\r\n        } else {\r\n            this.zoom *= 0.9;\r\n        }\r\n    }\r\n\r\n    static distance(a:Pad, b:Pad) {\r\n        return Math.pow(a.posX - b.posX, 2) +  Math.pow(a.posY - b.posY, 2);\r\n    }\r\n}\r\n","import { Grid, Mouse } from 'canvas-coords' // https://github.com/CodeDraken/canvas-coords\r\nimport { Device } from './device';\r\nimport { Marlin } from './deviceMarlin';\r\nimport { PCB } from './pcb';\r\n\r\nconst body: HTMLBodyElement | null = <HTMLBodyElement | null>document.getElementsByTagName('body')[0];\r\nconst uploadButton: HTMLButtonElement | null = <HTMLButtonElement | null>document.getElementById(\"uploadButton\");\r\nconst padsField: HTMLDivElement | null = <HTMLDivElement | null>document.getElementById(\"padsField\");\r\nconst coordsField: HTMLDivElement | null = <HTMLDivElement | null>document.getElementById(\"coordsField\");\r\nconst dropZone: HTMLElement | null = document.getElementById(\"dropZone\");\r\nconst canvas: HTMLCanvasElement | null = <HTMLCanvasElement | null>document.getElementById(\"canvas\");\r\nconst debug: HTMLDivElement | null = <HTMLDivElement | null>document.getElementById(\"debug\");\r\nconst progress: HTMLDivElement | null = <HTMLDivElement | null>document.getElementById(\"progress\");\r\nconst progressbar: HTMLDivElement | null = <HTMLDivElement | null>document.getElementById('progressbar');\r\nconst progressCancel: HTMLButtonElement | null = <HTMLButtonElement | null>document.getElementById('progressCancel');\r\n\r\nconst header = document.getElementsByTagName('header')[0];\r\nconst footer = document.getElementsByTagName('footer')[0];\r\n\r\nlet ctx: CanvasRenderingContext2D | null = null;\r\nlet mouse: Mouse, grid: Grid;\r\nlet pcb: PCB;\r\nlet floatFracts = 1;\r\nlet floatDezis = 1;\r\nlet lastPad = \"\";\r\n\r\nlet cancel = false;\r\n\r\nconst reNumFormat = /^%FSLAX([0-9])([0-9])Y([0-9])([0-9])[*]%/;\r\nconst reMatchPad = /^(%AD)(D[0-9]+)([A-Za-z]+)[,]([-0-9.]+)[X]?([-0-9.]+)?[X]?([-0-9.]+)?/;\r\nconst reMatchPadCoordInit = /^([DG][0-9]+)[*]/;\r\nconst reMatchPadCoord = /^X([-]?)([0-9]+)Y([-]?)([0-9]+)D([0-9]+)[*]/;\r\n\r\nlet device = new Marlin();\r\n\r\nfunction init() {\r\n    if (uploadButton && progressCancel && padsField && coordsField && body && canvas) {\r\n        ctx = canvas.getContext(\"2d\");\r\n\r\n        canvas.addEventListener(\"mousemove\", (event) => {\r\n            if (pcb) pcb.mouseMove(event);\r\n            event.preventDefault();\r\n        }, false);\r\n        canvas.addEventListener(\"mousedown\", (event) => {\r\n            if (pcb) pcb.mouseDown(event);\r\n            event.preventDefault();\r\n        }, false);\r\n        canvas.addEventListener(\"mouseup\", (event) => {\r\n            if (pcb) pcb.mouseUp(event);\r\n            event.preventDefault();\r\n        }, false);\r\n        canvas.addEventListener(\"mouseout\", (event) => {\r\n            if (pcb) pcb.mouseUp(event);\r\n            event.preventDefault();\r\n        }, false);\r\n        canvas.addEventListener(\"wheel\", (event) => {\r\n            if (pcb) pcb.mouseWheel(event);\r\n            event.preventDefault();\r\n        }, false);\r\n\r\n        uploadButton.onclick = () => {\r\n            var uploadFileEle = document.createElement('input');\r\n            uploadFileEle.type = \"file\";\r\n            uploadFileEle.click();\r\n            uploadFileEle.addEventListener(\"change\", (ev: Event) => {\r\n                console.log(ev);\r\n                // check if user had selected a file\r\n                if (uploadFileEle.files && uploadFileEle.files.length > 0) {\r\n                    let file = uploadFileEle.files[0]\r\n                    console.log(file);\r\n                    console.log(`file: ${file.name} size:${file.size}`);\r\n\r\n                    processGerberFile(file);\r\n\r\n                } else {\r\n                    alert('please choose a file')\r\n                    return\r\n                }\r\n            })\r\n            return false;\r\n        }\r\n        progressCancel.onclick = () => {\r\n            cancel = true;\r\n        }\r\n\r\n        body.ondrop = (ev) => {\r\n            ev.preventDefault();\r\n            console.log(ev);\r\n            if (ev.dataTransfer.items) {\r\n                // Use DataTransferItemList interface to access the file(s)\r\n                [...ev.dataTransfer.items].forEach((item, i) => {\r\n                    // If dropped items aren't files, reject them\r\n                    if (item.kind === 'file') {\r\n                        const file = item.getAsFile();\r\n                        if (file) {\r\n                            console.log(`… item[${i}].name = ${file.name}`);\r\n                            processGerberFile(file);\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                // Use DataTransfer interface to access the file(s)\r\n                [...ev.dataTransfer.files].forEach((file, i) => {\r\n                    if (file) {\r\n                        console.log(`… file[${i}].name = ${file.name}`);\r\n                        processGerberFile(file);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        body.ondragover = (ev) => {\r\n            console.log('File(s) in drop zone');\r\n\r\n            // Prevent default behavior (Prevent file from being opened)\r\n            ev.preventDefault();\r\n        }\r\n\r\n        canvas.width = innerWidth;\r\n        canvas.height = innerHeight - header.getBoundingClientRect().height - footer.getBoundingClientRect().height - 7;\r\n\r\n        mouse = new Mouse(ctx, canvas);\r\n        mouse.track();\r\n        grid = new Grid();\r\n\r\n        resize();\r\n\r\n        window.requestAnimationFrame(update);\r\n    }\r\n    else {\r\n        console.error('missing html elements !');\r\n    }\r\n}\r\n\r\nfunction update() {\r\n    if (canvas && ctx) {\r\n        window.requestAnimationFrame(update);\r\n\r\n        ctx.setTransform(\r\n            1, 0,\r\n            0, -1,\r\n            0, canvas.height);\r\n\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        grid.draw(ctx, canvas);\r\n        mouse.draw();\r\n\r\n        // ctx.scale(1,-1); // flip display y\r\n\r\n        if (pcb) {\r\n            pcb.draw();\r\n        }\r\n    }\r\n}\r\n\r\nfunction processGerberFile(file: File) {\r\n    if (uploadButton && padsField && coordsField && body && ctx && progress) { // makes typescript happy...\r\n        file.arrayBuffer().then((buf) => {\r\n            arrayBufferToString(buf, 'UTF-8', (text: string) => {\r\n\r\n                padsField.innerHTML = '';\r\n                coordsField.innerHTML = '';\r\n\r\n                if (dropZone)\r\n                    dropZone.innerText = file.name;\r\n\r\n                processGerberText(text);\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nasync function processGerberText(text: string) {\r\n    if (uploadButton && padsField && coordsField && body && canvas && ctx && progress) { // makes typescript happy...\r\n\r\n        progress.style.display = 'block';\r\n\r\n        pcb = new PCB(ctx, canvas);\r\n\r\n        // console.log(text);\r\n        // translate line ends...\r\n        text = text.replace(/\\r/g, ''); // remove windows trash\r\n        const lines = text.split('\\n');\r\n\r\n        let lineNr = 1;\r\n        for (let line of lines) {\r\n            lineNr++;\r\n\r\n            if (cancel) {\r\n                cancel = false;\r\n                break;\r\n            }\r\n            // console.log(`gerber(${lineNr}/${lines.length}): `);\r\n\r\n            await processGerberLine(line);\r\n\r\n            if (progressbar) {\r\n                progressbar.style.width = `${lineNr * 100 / lines.length}%`;\r\n            }\r\n\r\n        } // for\r\n\r\n        pcb.retree();\r\n\r\n        progress.style.display = 'none';\r\n    }\r\n}\r\n\r\n\r\nasync function processGerberLine(line: string) {\r\n    return new Promise<void>((resolve) => {\r\n        if (uploadButton && padsField && coordsField && body && ctx && progress) { // makes typescript happy...\r\n\r\n            // line = line.replace(/\\n/g,'<br>');\r\n\r\n            // Zahlenformat info line \"%FSLAX34Y34*%\"\r\n            //   %FSLAX25Y25*% Coordinate format specification:\r\n            //   Coordinates format is 2.5:\r\n            //   2 digits in the integer part\r\n            //   5 digits in the fractional part\r\n            const matchNumFormat = reNumFormat.exec(line); //line.match();\r\n            if (matchNumFormat) {\r\n                // console.log(matchNumFormat);\r\n                floatDezis = parseInt(matchNumFormat[1]);\r\n                floatFracts = parseInt(matchNumFormat[2]);\r\n                console.log(`gerber: float digits = ${floatDezis} ${floatFracts}`);\r\n            }\r\n\r\n            // check for pad definitions\r\n            // %ADD21R,0.600000X1.050000*%\r\n            // %ADD10RoundRect,0.120000 X -0.180000\r\n            //               X 0.680000 X -0.180000\r\n            //              X -0.680000 X 0.180000\r\n            //              X -0.680000 X 0.180000\r\n            //               X 0.680000 X 0*%\r\n            const matchPad = reMatchPad.exec(line); // line.match();///);\r\n            // Wenn \"C\" dann gibts nur eine coord\r\n            if (matchPad) {\r\n                // console.log(matchPad);\r\n                padsField.innerHTML += `${matchPad[2]} ${matchPad[3]} ${matchPad[4]} ${matchPad[5]}<br>`;\r\n                if (matchPad[3] == 'RoundRect') {\r\n                    // kicad macro schnulli\r\n                    pcb.addPadStyle(matchPad[2], matchPad[3], Math.abs(parseFloat(matchPad[5])), Math.abs(parseFloat(matchPad[6])));\r\n                    // console.log(`gerber: style ${matchPad[2]},${matchPad[3]}, ${Math.abs(parseFloat(matchPad[5]))}, ${Math.abs(parseFloat(matchPad[6]))}`);\r\n                } else {\r\n                    pcb.addPadStyle(matchPad[2], matchPad[3], parseFloat(matchPad[4]), parseFloat(matchPad[5]));\r\n                    // console.log(`gerber: style ${matchPad[2]},${matchPad[3]}, ${parseFloat(matchPad[4])}, ${parseFloat(matchPad[5])}`);\r\n                }\r\n            }\r\n\r\n            // Dxx* command - should be pad draw\r\n            const matchPadCoordInit = reMatchPadCoordInit.exec(line); //line.match();///);\r\n            if (matchPadCoordInit) {\r\n                // console.log(matchPadCoordInit);\r\n                lastPad = matchPadCoordInit[1];\r\n            }\r\n            // a pad line: \"X379984Y963930D03*\"\r\n            const matchPadCoord = reMatchPadCoord.exec(line); // line.match();///);\r\n            if (matchPadCoord) {\r\n                if (lastPad.startsWith('D')) { // ignore G36 or so commands\r\n                    // if (1) {\r\n                    // ignore and return ...\r\n                    // resolve();\r\n                    // console.log(matchPadCoord);\r\n                    let sx = matchPadCoord[2];\r\n                    let sy = matchPadCoord[4];\r\n                    const len = floatDezis + floatFracts;\r\n                    // fill freak's leading zeros\r\n                    while (sx.length < len) {\r\n                        sx = `0${sx}`;\r\n                    }\r\n                    while (sy.length < len) {\r\n                        sy = `0${sy}`;\r\n                    }\r\n                    // make a freak'n float\r\n                    let fx = 0.0;\r\n                    let fy = 0.0;\r\n                    sx = `${sx.substring(0, floatDezis)}.${sx.substring(floatDezis)}`;\r\n                    sy = `${sy.substring(0, floatDezis)}.${sy.substring(floatDezis)}`;\r\n                    fx = parseFloat(sx);\r\n                    fy = parseFloat(sy);\r\n                    if (matchPadCoord[1] == '-') {\r\n                        fx = fx * -1.0;\r\n                    }\r\n                    if (matchPadCoord[3] == '-') {\r\n                        fy = fy * -1.0;\r\n                    }\r\n\r\n                    fy = fy;\r\n                    coordsField.innerHTML += `${lastPad}:  x:${fx} y:${fy} <br>`;\r\n\r\n                    pcb.addPad(lastPad, fx, fy);\r\n                    // console.log(`gerber: pad ${lastPad}, ${fx}, ${fy}`);\r\n                } else {\r\n                    console.log(`ignoring ${lastPad}`);\r\n                }\r\n\r\n                // if(lineNr > 1500) {\r\n                //     break; // for testing !!!\r\n                // }\r\n            }\r\n        } // if\r\n        pcb.center();\r\n        setTimeout(resolve, 0); // this enables the progressbar / UI updates !\r\n    });\r\n}\r\n\r\n\r\n// found on se web...\r\n\r\nfunction arrayBufferToString(buffer, encoding, callback) {\r\n    var blob = new Blob([buffer], { type: 'text/plain' });\r\n    var reader = new FileReader();\r\n    reader.onload = (evt) => { callback(evt.target.result); };\r\n    reader.readAsText(blob, encoding);\r\n}\r\n\r\nfunction stringToArrayBuffer(string, encoding, callback) {\r\n    var blob = new Blob([string], { type: 'text/plain;charset=' + encoding });\r\n    var reader = new FileReader();\r\n    reader.onload = (evt) => { callback(evt.target.result); };\r\n    reader.readAsArrayBuffer(blob);\r\n}\r\n\r\nglobalThis.accordionToggler = (id: string) => {\r\n    var elem = document.getElementById(id);\r\n    if (elem) {\r\n        if (elem.className.indexOf(\"w3-show\") == -1 && elem.className.indexOf(\"w3-hide\") == -1) {\r\n            elem.className += \" w3-show\";\r\n        } else if (elem.className.indexOf(\"w3-show\") != -1) {\r\n            elem.className = elem.className.replace(\"w3-show\", \"w3-hide\");\r\n        } else {\r\n            elem.className = elem.className.replace(\"w3-hide\", \"w3-show\");\r\n        }\r\n    } else {\r\n        console.warn('accordionToggler no elem with id:', id);\r\n    }\r\n}\r\n\r\nfunction resize() {\r\n    if (canvas && header && footer && debug) {\r\n        canvas.width = innerWidth;\r\n        canvas.height = innerHeight - header.getBoundingClientRect().height - footer.getBoundingClientRect().height - 7;\r\n        mouse.draw();\r\n        grid.draw(ctx, canvas);\r\n\r\n        debug.style.height = `${canvas.height + header.getBoundingClientRect().height - 16}px`; // 16 is marginTop\r\n    }\r\n}\r\ndocument.addEventListener('DOMContentLoaded', init);\r\n\r\nwindow.addEventListener('resize', (val) => {\r\n    console.log(`resize: ${val}`);\r\n    resize();\r\n})\r\n"],"names":["a","g","t","e","TypeError","c","o","length","s","enumerable","configurable","writable","Object","defineProperty","key","i","arguments","r","n","this","x","y","ctx","canvas","color","font","setPos","bind","prototype","h","value","addEventListener","removeEventListener","getBoundingClientRect","Math","floor","clientX","left","clientY","top","concat","save","fillStyle","width","measureText","v","height","fillText","restore","d","f","b","l","lineWidth","startX","startY","endX","endY","beginPath","strokeStyle","moveTo","lineTo","stroke","j","step","boldNth","boldColor","boldWidth","lines","push","$","createLines","forEach","draw","drawText","Mouse","Grid","$c0e850328e6b509c$exports","$d86f0ae2c7fe36e0$export$8215d14a63d9fb10","deviceCheck","document","getElementById","deviceConnect","deviceDisconnect","deviceDosome","deviceInput","deviceInputForm","deviceInfo","deviceLog","deviceSerial","port","textDecoder","TextDecoderStream","onclick","serialCheck","serialConnect","serialDisconnect","onsubmit","serialInputForm","onSerialConnected","console","log","onSerialDisconnected","navigator","serial","requestPort","serialPortOpen","vid","pid","ports","getInfo","usbProductId","usbVendorId","close","then","error","warn","timeout","async","resolve","reject","serialWrite","available","timestep","maxtime","serialAvail","inputQueue","pop","err","event","preventDefault","serialInputChange","text","result","updatePorts","getPorts","html","innerHTML","btns","getElementsByTagName","btn","ids","id","split","serialConnectDevice","parseInt","className","replace","onconnect","ondisconnect","open","baudRate","val","serialRead","serialError","toString","readable","pipeTo","getReader","serialReadon","done","reader","read","releaseLock","pushedStuff","indexOf","values","inputLast","serialLog","setTimeout","serialCallback","$3e46d46990e31732$var$Status","Status","obj","right","parent","dimension","content","scoreFunction","bubbleUp","sinkDown","peek","remove","Error","size","u","kdTree","Array","isArray","root","sort","slice","toJSON","insert","nearest","p","abs","min","balanceFactor","max","BinaryHeap","define","amd","$8a913147b03fa214$exports","$54033deb9df7af75$var$BoundingBox","minx","miny","maxx","maxy","constructor","update","center","zoom","zero","$54033deb9df7af75$var$PadStyle","form","w","$54033deb9df7af75$var$Pad","style","posX","posY","$54033deb9df7af75$export$bdf465113f979d8f","fileName","mouseFlag","mouseStartX","mouseStartY","mouseOffX","mouseOffY","mapStyles","Map","mapPads","bb","rect","padstyle","keys","sty","get","padset","sw","sh","pad","fillRect","fill","ellipse","PI","near","addPadStyle","name","set","addPad","has","Set","newpad","add","retree","pads","padsets","tree","distance","mouseDown","trans","getTransform","mouseUp","offsetTop","mx","my","sqrt","mouseMove","mouseWheel","deltaY","static","pow","$b4e14b6b8da86996$var$body","$b4e14b6b8da86996$var$uploadButton","$b4e14b6b8da86996$var$padsField","$b4e14b6b8da86996$var$coordsField","$b4e14b6b8da86996$var$dropZone","$b4e14b6b8da86996$var$canvas","$b4e14b6b8da86996$var$debug","$b4e14b6b8da86996$var$progress","$b4e14b6b8da86996$var$progressbar","$b4e14b6b8da86996$var$progressCancel","$b4e14b6b8da86996$var$header","$b4e14b6b8da86996$var$footer","$b4e14b6b8da86996$var$mouse","$b4e14b6b8da86996$var$grid","$b4e14b6b8da86996$var$pcb","$b4e14b6b8da86996$var$ctx","$b4e14b6b8da86996$var$floatFracts","$b4e14b6b8da86996$var$floatDezis","$b4e14b6b8da86996$var$lastPad","$b4e14b6b8da86996$var$cancel","$b4e14b6b8da86996$var$reNumFormat","$b4e14b6b8da86996$var$reMatchPad","$b4e14b6b8da86996$var$reMatchPadCoordInit","$b4e14b6b8da86996$var$reMatchPadCoord","super","marlinDiv","initHtml","setStatus","Ready","marlinDivStatus","marlinDivCommands","onBtnPos","NC","Promise","Busy","serialWriteWait","catch","reason","finally","status","marlinDivPosition","innerText","marlinBtnHome","onBtnHome","marlinBtnPos","$b4e14b6b8da86996$var$update","window","requestAnimationFrame","setTransform","clearRect","$b4e14b6b8da86996$var$processGerberFile","file","arrayBuffer","buf","encoding","callback","blob","display","lineNr","line","$b4e14b6b8da86996$var$processGerberLine","$b4e14b6b8da86996$var$processGerberText","Blob","type","FileReader","onload","evt","target","readAsText","matchNumFormat","exec","matchPad","parseFloat","matchPadCoordInit","matchPadCoord","startsWith","sx","sy","len","fx","fy","substring","$b4e14b6b8da86996$var$resize","innerWidth","innerHeight","globalThis","accordionToggler","elem","getContext","uploadFileEle","createElement","click","ev","files","alert","ondrop","dataTransfer","items","item","kind","getAsFile","ondragover","track"],"version":3,"file":"index.9fda8232.js.map"}