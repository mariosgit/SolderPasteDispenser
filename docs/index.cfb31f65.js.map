{"mappings":"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","sources":["node_modules/canvas-coords/dist/index.js","node_modules/kd-tree-javascript/kdTree-min.js","src/device.ts","src/pcb.ts","src/deviceMarlin.ts","src/parser.ts","src/parserGerber.ts","src/index.ts"],"sourcesContent":["(function () {var a={};function g(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function c(t,e){for(var o=0;o<e.length;o++){var s=e[o];s.enumerable=s.enumerable||!1,s.configurable=!0,\"value\"in s&&(s.writable=!0),Object.defineProperty(t,s.key,s)}}function h(t,e,o){return e&&c(t.prototype,e),o&&c(t,o),t}var i=function(){function t(e,o){var s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"gray\",i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:\"16px Monospace\",r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,n=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;g(this,t),this.x=r,this.y=n,this.ctx=e,this.canvas=o,this.color=s,this.font=i,this.setPos=this.setPos.bind(this)}return h(t,[{key:\"track\",value:function(){var t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],e=this.canvas;return t?e.addEventListener(\"mousemove\",this.setPos):e.removeEventListener(\"mousemove\",this.setPos),this}},{key:\"setPos\",value:function(t){var e=this.canvas.getBoundingClientRect();return this.x=Math.floor(t.clientX-e.left),this.y=Math.floor(t.clientY-e.top),this}},{key:\"draw\",value:function(){var t=this.x,e=this.y,o=this.canvas,s=this.ctx,i=this.font,r=this.color,n=\"X: \".concat(t,\", Y: \").concat(e);s.save(),s.fillStyle=r,s.font=i;var a=t<o.width/2?20:-s.measureText(n).width-20,v=e<o.height/2?25:-18;return s.fillText(n,this.x+a,this.y+v),s.restore(),this}}]),t}();function d(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function f(t,e){for(var i=0;i<e.length;i++){var s=e[i];s.enumerable=s.enumerable||!1,s.configurable=!0,\"value\"in s&&(s.writable=!0),Object.defineProperty(t,s.key,s)}}function e(t,e,i){return e&&f(t.prototype,e),i&&f(t,i),t}var b=function(){function t(e,i,s,r,l,n){d(this,t),this.color=e,this.lineWidth=i,this.startX=s,this.startY=r,this.endX=l,this.endY=n}return e(t,[{key:\"draw\",value:function(t){var e=this.color,i=this.lineWidth,s=this.startX,r=this.startY,l=this.endX,n=this.endY;t.save(),t.beginPath(),t.strokeStyle=e,t.lineWidth=i,t.moveTo(s,r),t.lineTo(l,n),t.stroke(),t.restore()}}]),t}(),j=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"gray\",i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.3,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:10,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:\"DarkGray\",n=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.5,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:\"16px Monospace\";d(this,t),this.color=e,this.lineWidth=i,this.step=s,this.boldNth=r,this.boldColor=l,this.boldWidth=n,this.font=o,this.lines=null}return e(t,[{key:\"createLines\",value:function(t){for(var e=this.color,i=this.lineWidth,s=this.step,r=this.boldNth,l=this.boldColor,n=this.boldWidth,o=[],a=r*s,h=0;h<t.width;h+=s){var v=h%a==0;o.push(v?new b(l,n,h,0,h,t.height):new b(e,i,h,0,h,t.height))}for(var $=0;$<t.height;$+=s){var d=$%a==0;o.push(d?new b(l,n,0,$,t.width,$):new b(e,i,0,$,t.width,$))}this.lines=o}},{key:\"drawText\",value:function(t,e){var i=this.step,s=this.boldNth,r=this.boldColor,l=this.font;t.save(),t.font=l,t.fillStyle=r,t.fillText(\"0\",1,15);for(var n=i*s;n<e.width;n+=i*s)t.fillText(n,n,15);for(var o=i*s;o<e.height;o+=i*s)t.fillText(o,0,o+15);t.restore()}},{key:\"draw\",value:function(t,e){this.lines||this.createLines(e),this.lines.forEach(function(e){return e.draw(t)}),this.drawText(t,e)}}]),t}();a.Mouse=i,a.Grid=j;if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=a}else if(typeof define===\"function\"&&define.amd){define(function(){return a})}})();","/**\n * k-d Tree JavaScript - V 1.01\n *\n * https://github.com/ubilabs/kd-tree-javascript\n *\n * @author Mircea Pricop <pricop@ubilabs.net>, 2012\n * @author Martin Kleppe <kleppe@ubilabs.net>, 2012\n * @author Ubilabs http://ubilabs.net, 2012\n * @license MIT License <http://www.opensource.org/licenses/mit-license.php>\n */!function(t,n){\"function\"==typeof define&&define.amd?define([\"exports\"],n):n(\"object\"==typeof exports?exports:t)}(this,function(t){function n(t,n,o){this.obj=t,this.left=null,this.right=null,this.parent=o,this.dimension=n}function o(t){this.content=[],this.scoreFunction=t}o.prototype={push:function(t){this.content.push(t),this.bubbleUp(this.content.length-1)},pop:function(){var t=this.content[0],n=this.content.pop();return this.content.length>0&&(this.content[0]=n,this.sinkDown(0)),t},peek:function(){return this.content[0]},remove:function(t){for(var n=this.content.length,o=0;o<n;o++)if(this.content[o]==t){var i=this.content.pop();return void(o!=n-1&&(this.content[o]=i,this.scoreFunction(i)<this.scoreFunction(t)?this.bubbleUp(o):this.sinkDown(o)))}throw new Error(\"Node not found.\")},size:function(){return this.content.length},bubbleUp:function(t){for(var n=this.content[t];t>0;){var o=Math.floor((t+1)/2)-1,i=this.content[o];if(!(this.scoreFunction(n)<this.scoreFunction(i)))break;this.content[o]=n,this.content[t]=i,t=o}},sinkDown:function(t){for(var n=this.content.length,o=this.content[t],i=this.scoreFunction(o);;){var e=2*(t+1),r=e-1,l=null;if(r<n){var u=this.content[r],h=this.scoreFunction(u);h<i&&(l=r)}if(e<n){var s=this.content[e];this.scoreFunction(s)<(null==l?i:h)&&(l=e)}if(null==l)break;this.content[t]=this.content[l],this.content[l]=o,t=l}}},t.kdTree=function(t,i,e){function r(t,o,i){var l,u,h=o%e.length;return 0===t.length?null:1===t.length?new n(t[0],h,i):(t.sort(function(t,n){return t[e[h]]-n[e[h]]}),l=Math.floor(t.length/2),u=new n(t[l],h,i),u.left=r(t.slice(0,l),o+1,u),u.right=r(t.slice(l+1),o+1,u),u)}var l=this;Array.isArray(t)?this.root=r(t,0,null):function(t){function n(t){t.left&&(t.left.parent=t,n(t.left)),t.right&&(t.right.parent=t,n(t.right))}l.root=t,n(l.root)}(t),this.toJSON=function(t){t||(t=this.root);var o=new n(t.obj,t.dimension,null);return t.left&&(o.left=l.toJSON(t.left)),t.right&&(o.right=l.toJSON(t.right)),o},this.insert=function(t){function o(n,i){if(null===n)return i;var r=e[n.dimension];return t[r]<n.obj[r]?o(n.left,n):o(n.right,n)}var i,r,l=o(this.root,null);null!==l?(i=new n(t,(l.dimension+1)%e.length,l),r=e[l.dimension],t[r]<l.obj[r]?l.left=i:l.right=i):this.root=new n(t,0,null)},this.remove=function(t){function n(o){if(null===o)return null;if(o.obj===t)return o;var i=e[o.dimension];return t[i]<o.obj[i]?n(o.left,o):n(o.right,o)}function o(t){function n(t,o){var i,r,l,u,h;return null===t?null:(i=e[o],t.dimension===o?null!==t.left?n(t.left,o):t:(r=t.obj[i],l=n(t.left,o),u=n(t.right,o),h=t,null!==l&&l.obj[i]<r&&(h=l),null!==u&&u.obj[i]<h.obj[i]&&(h=u),h))}var i,r,u;if(null===t.left&&null===t.right)return null===t.parent?void(l.root=null):(u=e[t.parent.dimension],void(t.obj[u]<t.parent.obj[u]?t.parent.left=null:t.parent.right=null));null!==t.right?(r=(i=n(t.right,t.dimension)).obj,o(i),t.obj=r):(r=(i=n(t.left,t.dimension)).obj,o(i),t.right=t.left,t.left=null,t.obj=r)}var i;null!==(i=n(l.root))&&o(i)},this.nearest=function(t,n,r){function u(o){function r(t,o){f.push([t,o]),f.size()>n&&f.pop()}var l,h,s,c,a=e[o.dimension],g=i(t,o.obj),p={};for(c=0;c<e.length;c+=1)c===o.dimension?p[e[c]]=t[e[c]]:p[e[c]]=o.obj[e[c]];h=i(p,o.obj),null!==o.right||null!==o.left?(u(l=null===o.right?o.left:null===o.left?o.right:t[a]<o.obj[a]?o.left:o.right),(f.size()<n||g<f.peek()[1])&&r(o,g),(f.size()<n||Math.abs(h)<f.peek()[1])&&null!==(s=l===o.left?o.right:o.left)&&u(s)):(f.size()<n||g<f.peek()[1])&&r(o,g)}var h,s,f;if(f=new o(function(t){return-t[1]}),r)for(h=0;h<n;h+=1)f.push([null,r]);for(l.root&&u(l.root),s=[],h=0;h<Math.min(n,f.content.length);h+=1)f.content[h][0]&&s.push([f.content[h][0].obj,f.content[h][1]]);return s},this.balanceFactor=function(){function t(n){return null===n?0:Math.max(t(n.left),t(n.right))+1}function n(t){return null===t?0:n(t.left)+n(t.right)+1}return t(l.root)/(Math.log(n(l.root))/Math.log(2))}},t.BinaryHeap=o});\n","// todo:\r\n//   move out serial ? Or look for a serial readline implementation ???\r\n// bugs:\r\n//   disconnect - Failed to execute 'close' on 'SerialPort': Cannot cancel a locked stream\r\n\r\nimport { Pad } from \"./pcb\";\r\n\r\n/**\r\n * Device: abstracts access to machine.\r\n * It \"simplifies\" serial port access. At the moment it only ollows \"write and response\" style communication.\r\n * The serial port is opened, then a reader loop is startet, which pushes each new line into the inputQueue.\r\n * Function serialWriteWait is used to issue commands and wait for the device to aknowledge.\r\n */\r\n\r\nexport class Device {\r\n    deviceCheck: HTMLButtonElement | null;\r\n    deviceConnect: HTMLButtonElement | null;\r\n    deviceDisconnect: HTMLButtonElement | null;\r\n    deviceInput: HTMLInputElement | null;\r\n    deviceInputForm: HTMLFormElement | null;\r\n    deviceInfo: HTMLDivElement | null;\r\n    deviceLog: HTMLDivElement | null;\r\n    deviceSerial: HTMLDivElement | null;\r\n    ports: any;\r\n    port: any;\r\n    textDecoder: TextDecoderStream;\r\n    reader: ReadableStreamDefaultReader<string>;\r\n    inputLast: string = '';\r\n\r\n    protected inputQueue: string[] = [];\r\n\r\n    constructor() {\r\n        this.deviceCheck = <HTMLButtonElement | null>document.getElementById(\"deviceCheck\");\r\n        this.deviceConnect = <HTMLButtonElement | null>document.getElementById(\"deviceConnect\");\r\n        this.deviceDisconnect = <HTMLButtonElement | null>document.getElementById(\"deviceDisconnect\");\r\n        this.deviceInput = <HTMLInputElement | null>document.getElementById(\"deviceInput\");\r\n        this.deviceInputForm = <HTMLFormElement | null>document.getElementById(\"deviceInputForm\");\r\n        this.deviceInfo = <HTMLDivElement | null>document.getElementById(\"deviceInfo\");\r\n        this.deviceLog = <HTMLDivElement | null>document.getElementById(\"deviceLog\");\r\n        this.deviceSerial = <HTMLDivElement | null>document.getElementById(\"deviceSerial\");\r\n        this.port = null;\r\n        this.textDecoder = new TextDecoderStream();\r\n        if (this.deviceCheck && this.deviceConnect && this.deviceDisconnect && this.deviceInput && this.deviceInputForm) {\r\n            this.deviceCheck.onclick = this.serialCheck.bind(this);\r\n            this.deviceConnect.onclick = this.serialConnect.bind(this);\r\n            this.deviceDisconnect.onclick = this.serialDisconnect.bind(this);\r\n            // this.deviceDosome.onclick = this.serialDosome.bind(this);\r\n            // this.deviceInput.onchange = this.serialInputChange.bind(this);\r\n            this.deviceInputForm.onsubmit = this.serialInputForm.bind(this);\r\n        }\r\n        this.serialCheck();\r\n    }\r\n\r\n    /**\r\n     * Overwrite! Set the current position to Zero. All further commands will be relative to this position.\r\n     */\r\n    public setZero?(point:[number,number]): void;\r\n        /**\r\n     * Overwrite! Move to position. If one coordinate is undefined, it's ignored\r\n     */\r\n    public moveTo?(x:number|undefined, y:number|undefined, z:number|undefined, e: number | undefined): void\r\n    public moveToAll?(plist: Pad[]);\r\n\r\n    public blob?();\r\n\r\n    /**\r\n     * Overwrite this in derived class to get notification when some device was connected.\r\n     */\r\n    protected onSerialConnected?():void;\r\n    /**\r\n     * Overwrite this in derived class to get notification when some device was disconnected.\r\n     */\r\n    protected onSerialDisconnected?():void;\r\n\r\n    /**\r\n     * Opens a dialog where user can select a device to connect.\r\n     */\r\n    public async serialConnect() {\r\n        // opens dialog where user can select a device\r\n        (<any>navigator).serial.requestPort().then((port) => {\r\n            console.log('serialConnect', port);\r\n            this.serialPortOpen(port);\r\n        }).catch((reason) => {\r\n            // console.warn('serialConnect',reason);\r\n            this.serialError(reason);\r\n        });\r\n    }\r\n\r\n    public async serialConnectDevice(vid: number, pid: number) {\r\n        for (let port of this.ports) {\r\n            console.log(`serialConnectDevice: serial available, ports: `, port.getInfo());\r\n            const { usbProductId, usbVendorId } = port.getInfo();\r\n            if (usbProductId == pid && usbVendorId == vid) {\r\n                this.serialPortOpen(port);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Disconnect from device\r\n     */\r\n    public async serialDisconnect() {\r\n        if (this.port) {\r\n            // this.reader.releaseLock(); // does'nt do it :(\r\n            this.port.close().then(() => {\r\n                this.port = null;\r\n                console.log('port closed');\r\n            }).catch((error) => {\r\n                console.warn(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  Wait until some response or timeout, returns response or 'timeout' or might fail with 'busy' or 'disconnected'\r\n     */\r\n    public async serialWriteWait(value: string, timeout: number = 10000): Promise<string> {\r\n        // clean serial input\r\n        this.inputQueue = [];\r\n        return new Promise<string>(async (resolve, reject) => {\r\n            if (this.port) {\r\n                try {\r\n                    this.serialWrite(value);\r\n                    // wait until some response or timeout\r\n                    let available = false;\r\n                    const timestep = 10;\r\n                    let maxtime = timeout;\r\n                    while (!available) {\r\n                        available = await this.serialAvail(timestep);\r\n                        maxtime = maxtime - timestep;\r\n                        if (maxtime <= 0)\r\n                            break;\r\n                    }\r\n                    console.log(`serialWriteWait avail:${available} time:${timeout - maxtime}`);\r\n\r\n                    console.log(`serialWriteWait check: ${this.inputQueue.length}`);\r\n                    if (this.inputQueue.length > 0) {\r\n                        const inp = <string>this.inputQueue.pop();\r\n                        // console.log(`serialWriteWait resolve: ${inp}`);\r\n                        resolve(inp);\r\n                    } else {\r\n                        // console.log(`serialWriteWait reject: `);\r\n                        reject('timeout');\r\n                    }\r\n                } catch (err) {\r\n                    // console.warn(err);\r\n                    reject('busy');\r\n                }\r\n            } else {\r\n                // console.warn(this.port);\r\n                reject('disconnected');\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * Helper function to write anything to the device.\r\n     * @param event\r\n     */\r\n    public serialInputForm(event: InputEvent) { // fires when return is entered\r\n        if (this.deviceInput) {\r\n            event.preventDefault(); // form will do strange things !\r\n            // console.log(event);\r\n            this.serialInputChange(event);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Helper function to write anything to the device.\r\n     * @param event\r\n     */\r\n    public async serialInputChange(event: InputEvent) { // fires when return is entered\r\n        if (this.deviceInput) {\r\n            if (this.port) {\r\n                let text = this.deviceInput.value;\r\n                if (text.length > 0) {\r\n                    this.serialWrite(text);\r\n                }\r\n            } else {\r\n                console.warn('serialInputChange - no port open');\r\n            }\r\n        }\r\n    }\r\n\r\n    /* ***************** private stuff **************************** */\r\n\r\n    private async serialCheck() {\r\n        let result = false;\r\n        if (\"serial\" in navigator) {\r\n            this.updatePorts();\r\n            (<any>navigator).serial.addEventListener(\"connect\", (event) => {\r\n                // TODO: Automatically open event.target or warn user a port is available.\r\n                console.log('serialCheck:connect', event);\r\n                this.updatePorts();\r\n            });\r\n            (<any>navigator).serial.addEventListener(\"disconnect\", (event) => {\r\n                // TODO: Remove |event.target| from the UI.\r\n                // If the serial port was opened, a stream error would be observed as well.\r\n                console.log('serialCheck:disconnect', event);\r\n            });\r\n            result = true;\r\n        } else {\r\n            // console.warn('No serial API available, try another browser');\r\n            this.serialError(\"This browser does not support the serial port. Connection to device impossible! Use Chrome!\");\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private updatePorts() {\r\n        // lists all recently used ports, could just open one then.\r\n        (<any>navigator).serial.getPorts().then((ports) => {\r\n            console.log('updatePorts:', ports);\r\n            this.ports = ports;\r\n            let html = '';//devices:<br>';\r\n            for (let port of ports) {\r\n                console.log(`serial available, ports: `, port.getInfo());\r\n                const { usbProductId, usbVendorId } = port.getInfo();\r\n                console.log(`updatePorts port pid:${usbProductId} vid:${usbVendorId}`);\r\n                html += `<div class=\"w3-container\"><i class=\"fa-solid fa-microchip\"></i> pid:${usbProductId} vid:${usbVendorId} <button class=\"w3-btn w3-round w3-light-grey w3-tiny\" id=\"${usbVendorId}-${usbProductId}\"><i class=\"fa fa-plug\"></i> connect </button></div>`;\r\n            }\r\n            if (this.deviceInfo) {\r\n                this.deviceInfo.innerHTML = html;\r\n                const btns = this.deviceInfo.getElementsByTagName('button');\r\n                for (const btn of btns) {\r\n                    btn.onclick = () => { const ids = btn.id.split('-'); console.log(ids); this.serialConnectDevice(parseInt(ids[0]), parseInt(ids[1])) };\r\n                }\r\n            }\r\n            if (this.deviceConnect && (this.ports == null || this.ports.length == 0)) {\r\n                // console.log('updatePorts: open dev buttons!!!', this.deviceConnect.className);\r\n                this.deviceConnect.className = this.deviceConnect.className.replace('w3-hide', 'w3-show');\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Opens a givven port. Can be used after queriing ports with updatePorts.\r\n     * @param port\r\n     */\r\n    private serialPortOpen(port: any) {\r\n        port.onconnect = () => {\r\n            console.log(`CONNECTED`);\r\n        };\r\n        port.ondisconnect = () => {\r\n            console.log(`DISCONNECTED`);\r\n            if(this.onSerialDisconnected) {\r\n                this.onSerialDisconnected();\r\n            }\r\n        };\r\n        port.open({ baudRate: 250000 }).then((val) => {\r\n            this.port = port;\r\n            if (this.deviceLog) {\r\n                this.deviceLog.innerHTML = \"connected<br>\";\r\n            }\r\n            console.log('port opened ? ', this.port);\r\n            if(this.onSerialConnected){\r\n                this.onSerialConnected();\r\n            }\r\n\r\n            setTimeout(this.serialRead.bind(this), 0); // start read loop\r\n        }).catch((error) => {\r\n            // console.warn(error);\r\n            this.serialError(error.toString());\r\n        });\r\n    }\r\n\r\n    protected serialError(error: string) {\r\n        console.warn('serialError', error);\r\n        if (this.deviceLog) {\r\n            this.deviceLog.innerHTML = `<span class=\"w3-red\">${error}</span><br>`\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internal, starts the read line loop.\r\n     */\r\n    private async serialRead() {\r\n        if (this.port) {\r\n            const readableStreamClosed = this.port.readable.pipeTo(this.textDecoder.writable);\r\n            this.reader = this.textDecoder.readable.getReader();\r\n            // Listen to data coming from the serial device.\r\n            setTimeout(this.serialReadon.bind(this), 1); // will loop there\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internal, handles the read line loop.\r\n     */\r\n    private async serialReadon() {\r\n        try {\r\n            const { value, done } = await this.reader.read();\r\n            if (done) {\r\n                // Allow the serial port to be closed later. // Does not happen !\r\n                this.reader.releaseLock();\r\n                console.log('serialRead - done');\r\n            } else {\r\n                let pushedStuff = false;\r\n                // value is a string.\r\n                if (value.indexOf('\\n') != -1) {\r\n                    const values = value.split('\\n');\r\n                    // console.log(values);\r\n                    if (values.length <= 1) {\r\n                        console.error('Assertion failed ', values);\r\n                    }; // there is a \\n in it !\r\n                    for (let i = 0; i < values.length - 1; i++) {\r\n                        this.inputLast += values[i];\r\n                        this.inputQueue.push(this.inputLast);\r\n                        this.serialLog(this.inputLast, true);\r\n                        this.inputLast = '';\r\n                        pushedStuff = true;\r\n                    }\r\n                    this.inputLast = values[values.length - 1];\r\n                    // console.log(`serialReadon last: \"${this.inputLast}\"`);\r\n                } else {\r\n                    // no \\n\r\n                    this.inputLast += value;\r\n                    // console.log(`serialReadon last: \"${this.inputLast}\"`);\r\n                }\r\n\r\n                if (pushedStuff) {\r\n                    setTimeout(this.serialCallback.bind(this), 5);\r\n                }\r\n                setTimeout(this.serialReadon.bind(this), 1); // will loop there\r\n            }\r\n        } catch (error) {\r\n            console.warn(error);\r\n            this.serialError(error.toString());\r\n        }\r\n    }\r\n\r\n    private serialCallback() {\r\n        // const elem = document.getElementById('deviceLog');\r\n        // if (elem) {\r\n        //     let latest = this.inputQueue.pop();\r\n        //     while (latest) {\r\n        //         elem.innerHTML += `${latest}<br>`;\r\n        //         latest = this.inputQueue.pop();\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    private async serialWrite(value: string) {\r\n        this.serialLog(value, false);\r\n\r\n        // write...\r\n        let utf8Encode = new TextEncoder();\r\n        const writer = this.port.writable.getWriter();\r\n        await writer.write(utf8Encode.encode(`${value}\\n`));\r\n        writer.releaseLock();\r\n    }\r\n\r\n    /**\r\n     * Waits until data was read or timeout\r\n     * @param timeout\r\n     * @returns\r\n     */\r\n    private serialAvail(timeout: number = 10): Promise<boolean> {\r\n        return new Promise<boolean>((resolve) => {\r\n            if (this.inputQueue.length > 0) {\r\n                resolve(true);\r\n            } else {\r\n                setTimeout(() => {\r\n                    resolve(false);\r\n                }, timeout);\r\n            }\r\n        });\r\n    }\r\n\r\n    private serialLog(text: string, incomming: boolean) {\r\n        if (this.deviceSerial) {\r\n            while (this.deviceSerial.childElementCount > 20) {\r\n                let ch = this.deviceSerial.firstChild;\r\n                if (ch) {\r\n                    this.deviceSerial.removeChild(ch);\r\n                }\r\n            }\r\n            if (incomming) {\r\n                this.deviceSerial.innerHTML += `<div><i class=\"fa-solid fa-arrow-right-to-bracket\"></i> ${text}</div>`\r\n            } else {\r\n                this.deviceSerial.innerHTML += `<div><i class=\"fa-solid fa-arrow-up-right-from-square\"></i> ${text}</div>`;\r\n            }\r\n            globalThis.resize();\r\n        }\r\n    }\r\n}\r\n","import {kdTree} from 'kd-tree-javascript';\r\n\r\nclass BoundingBox {\r\n    minx: number = 99999;\r\n    miny: number = 99999;\r\n    maxx: number = -99999;\r\n    maxy: number = -99999;\r\n    constructor() { }\r\n    updateFromPad(pad:Pad) {\r\n        this.update(pad.posX, pad.posY);\r\n    }\r\n    update(x: number, y: number) {\r\n        if (x < this.minx) this.minx = x;\r\n        if (y < this.miny) this.miny = y;\r\n        if (x > this.maxx) this.maxx = x;\r\n        if (y > this.maxy) this.maxy = y;\r\n        // console.log(`bb: ${this.miny} ${this.maxy} ${this.center()[1]}`);\r\n    }\r\n    center(zoom: number = 1.0): [x: number, y: number] {\r\n        return [(this.minx + (this.maxx - this.minx) / 2) * zoom, (this.miny + (this.maxy - this.miny) / 2) * zoom];\r\n    }\r\n    zero(zoom: number = 1.0): [x: number, y: number] {\r\n        return [this.minx * zoom, this.miny * zoom];\r\n    }\r\n    size(zoom: number = 1.0): [x: number, y: number] {\r\n        return [(this.maxx - this.minx) * zoom, (this.maxy - this.miny) * zoom];\r\n    }\r\n    diagonal(zoom: number = 1.0): number {\r\n        const size = this.size(zoom);\r\n        return Math.sqrt(size[0]*size[0] + size[1]*size[1]);\r\n    }\r\n    /** Check if pad is inside the boundingbox */\r\n    inside(pad: Pad):boolean {\r\n        return (pad.posX >= this.minx && pad.posX <= this.maxx) && (pad.posY >= this.miny && pad.posY <= this.maxy)\r\n    }\r\n}\r\n\r\nexport class PadStyle {\r\n    public form: string;\r\n    public width: number;\r\n    public height: number;\r\n    constructor(form: string, w: number, h: number) {\r\n        this.form = form;\r\n        this.width = w;\r\n        this.height = h;\r\n    }\r\n}\r\n\r\nexport class Pad {\r\n    posX: number;\r\n    posY: number;\r\n    style: string;\r\n    constructor(style: string, x: number, y: number) {\r\n        this.posX = x;\r\n        this.posY = y;\r\n        this.style = style;\r\n    }\r\n    asTuple():[number,number] {\r\n        return [this.posX, this.posY];\r\n    }\r\n}\r\n\r\nexport class PCB {\r\n    ctx: CanvasRenderingContext2D;\r\n    canvas: HTMLCanvasElement;\r\n    mapStyles: Map<string, PadStyle>;\r\n    mapPads: Map<string, Set<Pad>>;\r\n    fileName: string = \"\";\r\n\r\n    mouseFlag: boolean = false;\r\n    mouseStartX: number = 0;\r\n    mouseStartY: number = 0;\r\n    mouseOffX: number = 0;\r\n    mouseOffY: number = 0;\r\n    mouseSelect: boolean;\r\n    mouseSelectX: number;\r\n    mouseSelectY: number;\r\n\r\n    posZero: number[];\r\n\r\n    zoom: number = 5.0;\r\n    bbPcb: BoundingBox;\r\n    bbSelection: BoundingBox;\r\n    bbZero: BoundingBox; // use center as zero\r\n\r\n    tree: kdTree<Pad>;\r\n    nearest:[Pad, number][] = [];\r\n\r\n    constructor(ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement) {\r\n        this.ctx = ctx;\r\n        this.canvas = canvas;\r\n        this.mapStyles = new Map<string, PadStyle>();\r\n        this.mapPads = new Map<string, Set<Pad>>();\r\n        this.bbPcb = new BoundingBox();\r\n        this.bbZero = new BoundingBox();\r\n        this.bbSelection = new BoundingBox();\r\n    }\r\n\r\n    /**\r\n     * Sets the Zero position to the lower left of selection rectangle.\r\n     */\r\n    public setZero():void {\r\n        let result = false;\r\n        // use last selection ???\r\n        this.bbZero = this.bbSelection;\r\n        result = true;\r\n        console.log(`Pcb:setZero: ${this.bbZero.zero()}`);\r\n    }\r\n\r\n    /**\r\n     * @returns Zero position relative to Origin(0,0).\r\n     */\r\n    public getZero():[number,number] {\r\n        return this.bbZero.zero(); // lower left ?? better when .center() ??\r\n    }\r\n\r\n    /**\r\n     * @returns All Pads in selection.\r\n     */\r\n    public getSelected():Pad[] {\r\n        let result:Pad[] = [];\r\n        for(let near of this.nearest) {\r\n            // console.log(near);\r\n            if(near.length > 0) {\r\n                result.push(near[0]);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @returns Lower left of selection as tuple\r\n     */\r\n    public getSelectedZero():[number,number] {\r\n        return this.bbSelection.zero();\r\n    }\r\n\r\n    public zoomToFit(size:[number,number]) {\r\n        let psize = this.bbPcb.size();\r\n        let zw = size[0] / psize[0];\r\n        let zh = size[1] / psize[1];\r\n        this.zoom = ((zw > zh)? zh : zw) * .9;\r\n        console.log(`Pcb:zoomToFit zoom ${this.zoom}`, psize);\r\n        this.center();\r\n    }\r\n\r\n    public center() {\r\n        if (this.canvas) {\r\n            this.mouseOffX = -(this.bbPcb.center()[0] * this.zoom) + this.canvas.width / 2;\r\n            this.mouseOffY = -(this.bbPcb.center()[1] * this.zoom) + this.canvas.height / 2;\r\n        }\r\n    }\r\n\r\n\r\n    addPadStyle(name: string, form: string, w: number, h: number) {\r\n        this.mapStyles.set(name, new PadStyle(form, w, h));\r\n    }\r\n\r\n    addPad(style: string, x: number, y: number) {\r\n        if (!this.mapPads.has(style)) {\r\n            this.mapPads.set(style, new Set<Pad>());\r\n        }\r\n        let padset = this.mapPads.get(style);\r\n        if (padset) {\r\n            const newpad = new Pad(style, x, y);\r\n            padset.add(newpad);\r\n            this.bbPcb.update(x, y);\r\n        }\r\n    }\r\n\r\n    retree() {\r\n        try {\r\n            let pads : Pad[] = [];\r\n            for (let padsets of this.mapPads.values()) {\r\n                for (let pad of padsets) {\r\n                    pads.push(pad);\r\n                }\r\n            }\r\n\r\n            this.tree = new kdTree(pads, PCB.distance, [\"posX\", \"posY\"]);\r\n            console.log('tree bf:', this.tree.balanceFactor());\r\n\r\n        } catch(err) { console.error(err); }\r\n    }\r\n\r\n    mouseDown(event: MouseEvent) {\r\n        // console.event.buttons\r\n        const trans = this.ctx.getTransform();\r\n        if(event.button == 0) { // start select\r\n            const mx = (event.clientX * trans.a - this.mouseOffX) / this.zoom;\r\n            const my = (this.canvas.height-(event.clientY - this.canvas.offsetTop) - this.mouseOffY) / this.zoom;\r\n            this.mouseStartX = mx;\r\n            this.mouseStartY = my;\r\n            this.mouseSelectX = mx;\r\n            this.mouseSelectY = my;\r\n            this.mouseSelect = true;\r\n            console.log(`Pcb:mouseDown: x:${this.mouseStartX} y:${this.mouseStartY}`);\r\n        }\r\n        if(event.button != 0) { // pan around\r\n            this.mouseStartX = event.clientX * trans.a - this.mouseOffX;\r\n            this.mouseStartY = event.clientY * trans.d - this.mouseOffY;\r\n            this.mouseFlag = true;\r\n        }\r\n    }\r\n    mouseUp(event: MouseEvent) {\r\n        const trans = this.ctx.getTransform();\r\n        console.log('pcb:mouseUp event:', event);\r\n        if(event.button != 0) {\r\n            this.mouseFlag = false;\r\n        }\r\n        if(event.button == 0) { // select\r\n            this.mouseSelect = false;\r\n            // console.log(trans, event);\r\n            // console.log('', this.canvas.height-(event.clientY-this.canvas.offsetTop), this.mouseOffY);\r\n            const mx = (event.clientX * trans.a - this.mouseOffX) / this.zoom;\r\n            const my = (this.canvas.height-(event.clientY - this.canvas.offsetTop) - this.mouseOffY) / this.zoom;\r\n            this.mouseSelectX = mx;\r\n            this.mouseSelectY = my;\r\n\r\n            // bb = selected rectangle\r\n            this.bbSelection = new BoundingBox();\r\n            this.bbSelection.update(this.mouseStartX, this.mouseStartY);\r\n            this.bbSelection.update(this.mouseSelectX, this.mouseSelectY);\r\n\r\n            let pad = new Pad('', this.bbSelection.center()[0], this.bbSelection.center()[1]);\r\n            // console.log(`Pcb:mouseUp cx:${pad.posX} cy:${pad.posY} diagonal:${this.bbSelection.diagonal()}`);\r\n\r\n            if(this.tree) {\r\n                let found:[Pad, number][] = [];\r\n                let dist = this.bbSelection.diagonal();\r\n                if(dist < 0.1) { // no drag - only one\r\n                    found = this.tree.nearest(pad, 1, dist);\r\n                    this.nearest = found;\r\n                } else {\r\n                    dist = (dist/2) * (dist/2); // search require square distance ?\r\n                    found = this.tree.nearest(pad, 99999, dist);\r\n                    if(!event.shiftKey) {\r\n                        this.nearest = [];\r\n                    }\r\n                    for(const near of found) {\r\n                        // console.log(`m:${mx},${my} nearest:${near[0].posX},${near[0].posY}  dist:${Math.sqrt(near[1])}`);\r\n                        /// uuuhhh check if inside the box\r\n                        if(this.bbSelection.inside(near[0])) {\r\n                            this.nearest.push(near);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // need a bb for actual selected points to get zero right\r\n                let bbNewSelection = new BoundingBox();\r\n                for(const near of this.nearest) {\r\n                    bbNewSelection.updateFromPad(near[0]);\r\n                }\r\n                this.bbSelection = bbNewSelection;\r\n\r\n                console.log(`Pcb:mouseUp found #${found.length}`);\r\n            }\r\n        }\r\n    }\r\n    mouseMove(event: MouseEvent) {\r\n        // ooohhh do not trust event.button, it's always 0 here !\r\n        // console.log('pcb:mouseMove',event);\r\n        const trans = this.ctx.getTransform();\r\n        if(this.mouseFlag) {\r\n            this.mouseOffX = event.clientX * trans.a - this.mouseStartX;\r\n            this.mouseOffY = event.clientY * trans.d - this.mouseStartY;\r\n        }\r\n        if(this.mouseSelect ) {\r\n            const mx = (event.clientX * trans.a - this.mouseOffX) / this.zoom;\r\n            const my = (this.canvas.height-(event.clientY - this.canvas.offsetTop) - this.mouseOffY) / this.zoom;\r\n            this.mouseSelectX = mx;\r\n            this.mouseSelectY = my;\r\n        }\r\n    }\r\n    mouseWheel(event: WheelEvent) {\r\n        const trans = this.ctx.getTransform();\r\n        // console.log(event.deltaY);\r\n        if (event.deltaY > 0) {\r\n            this.zoom *= 1.1;\r\n            // this.mouseOffX *= 0.9;\r\n            // this.mouseOffY *= 0.9;\r\n        } else {\r\n            this.zoom *= 0.9;\r\n            // this.mouseOffX *= 1.1;\r\n            // this.mouseOffY *= 1.1;\r\n        }\r\n    }\r\n    mouseOut(event: MouseEvent) {\r\n    }\r\n\r\n    static distance(a:Pad, b:Pad) {\r\n        return Math.pow(a.posX - b.posX, 2) +  Math.pow(a.posY - b.posY, 2);\r\n    }\r\n\r\n    public draw() {\r\n        // theoretisch so...\r\n        // this.ctx.fillStyle = 'orangered';\r\n        this.ctx.fillStyle = 'antiquewhite';\r\n\r\n        // draw bb center\r\n        this.ctx.strokeStyle = 'red';\r\n        let center = this.bbPcb.center(this.zoom);\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(center[0] - 10 + this.mouseOffX, center[1] + this.mouseOffY);\r\n        this.ctx.lineTo(center[0] + 10 + this.mouseOffX, center[1] + this.mouseOffY);\r\n        this.ctx.moveTo(center[0] + this.mouseOffX, center[1] - 10 + this.mouseOffY);\r\n        this.ctx.lineTo(center[0] + this.mouseOffX, center[1] + 10 + this.mouseOffY);\r\n        this.ctx.stroke();\r\n        // draw bb\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(this.bbPcb.zero(this.zoom)[0] + this.mouseOffX, this.bbPcb.zero(this.zoom)[1] + this.mouseOffY, this.bbPcb.size(this.zoom)[0], this.bbPcb.size(this.zoom)[1]);\r\n        this.ctx.stroke();\r\n\r\n        for (let padstyle of this.mapPads.keys()) {\r\n\r\n            const sty = this.mapStyles.get(padstyle);\r\n            const padset = this.mapPads.get(padstyle);\r\n            if (sty && padset) {\r\n                const sw = sty.width * this.zoom;\r\n                const sh = sty.height * this.zoom;\r\n                for (let pad of padset.values()) {\r\n                    if (sty.form == 'R' || sty.form == 'O' || sty.form == 'RoundRect') {\r\n                        this.ctx.beginPath();\r\n\r\n                        this.ctx.fillRect(\r\n                            pad.posX * this.zoom - sw / 2.0 + this.mouseOffX,\r\n                            pad.posY * this.zoom - sh / 2.0 + this.mouseOffY,\r\n                            sw, sh);\r\n                        this.ctx.fill();\r\n\r\n                    } else if (sty.form == 'C') {\r\n                        this.ctx.beginPath();\r\n                        this.ctx.ellipse(\r\n                            pad.posX * this.zoom + this.mouseOffX,\r\n                            pad.posY * this.zoom + this.mouseOffY,\r\n                            sw / 2,\r\n                            sw / 2,\r\n                            0, 0, 2 * Math.PI);\r\n                        // this.ctx.arc(\r\n                        //     pad.posX * this.zoom - sw / 2.0 + this.mouseOffX,\r\n                        //     pad.posY * this.zoom - sh / 2.0 + this.mouseOffY,\r\n                        //     sty.width * this.zoom,\r\n                        //     0, 2 * Math.PI);\r\n                        this.ctx.fill();\r\n                    } else {\r\n                        console.log(`draw quatsch ${sty.form}`);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        } // for padstyle\r\n\r\n        // draw selectionCross(es)\r\n        this.ctx.strokeStyle = 'purple';\r\n        this.ctx.beginPath();\r\n        let csize = .5;\r\n        for(const near of this.nearest) {\r\n            this.ctx.moveTo((near[0].posX-csize) * this.zoom + this.mouseOffX, near[0].posY * this.zoom + this.mouseOffY);\r\n            this.ctx.lineTo((near[0].posX+csize) * this.zoom + this.mouseOffX, near[0].posY * this.zoom + this.mouseOffY);\r\n            this.ctx.moveTo(near[0].posX * this.zoom + this.mouseOffX, (near[0].posY+csize) * this.zoom + this.mouseOffY);\r\n            this.ctx.lineTo(near[0].posX * this.zoom + this.mouseOffX, (near[0].posY-csize) * this.zoom + this.mouseOffY);\r\n            // console.log(`nearest:${near[0].posX},${near[0].posY}  dist:${Math.sqrt(near[1])}`);\r\n        }\r\n        this.ctx.stroke();\r\n\r\n        // draw selection lower left = zero kandidate\r\n        let zero = [0,0];\r\n        if(this.bbSelection) {\r\n            csize = 2 * this.zoom;\r\n            zero = this.bbSelection.zero(this.zoom);\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(zero[0] -csize + this.mouseOffX, zero[1] + this.mouseOffY);\r\n            this.ctx.lineTo(zero[0] +csize + this.mouseOffX, zero[1] + this.mouseOffY);\r\n            this.ctx.moveTo(zero[0] + this.mouseOffX,     zero[1]-csize + this.mouseOffY);\r\n            this.ctx.lineTo(zero[0] + this.mouseOffX,     zero[1]+csize + this.mouseOffY);\r\n            this.ctx.stroke();\r\n        }\r\n\r\n        // draw origin\r\n        this.ctx.strokeStyle = 'black';\r\n        zero = this.bbZero.center(this.zoom);\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(-csize + this.mouseOffX, this.mouseOffY);\r\n        this.ctx.lineTo(+csize + this.mouseOffX, this.mouseOffY);\r\n        this.ctx.moveTo(this.mouseOffX,       -csize + this.mouseOffY);\r\n        this.ctx.lineTo(this.mouseOffX,       +csize + this.mouseOffY);\r\n        this.ctx.stroke();\r\n\r\n        // draw zero\r\n        this.ctx.strokeStyle = 'black';\r\n        zero = this.bbZero.zero(this.zoom);\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(zero[0] -csize + this.mouseOffX, zero[1] + this.mouseOffY);\r\n        this.ctx.lineTo(zero[0] +csize + this.mouseOffX, zero[1] + this.mouseOffY);\r\n        this.ctx.moveTo(zero[0] + this.mouseOffX,     zero[1]-csize + this.mouseOffY);\r\n        this.ctx.lineTo(zero[0] + this.mouseOffX,     zero[1]+csize + this.mouseOffY);\r\n        this.ctx.stroke();\r\n\r\n\r\n        // draw selectionRectangle\r\n        if(this.mouseSelect) {\r\n            this.ctx.strokeStyle = 'purple';\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(this.mouseStartX  * this.zoom + this.mouseOffX, this.mouseStartY  * this.zoom + this.mouseOffY);\r\n            this.ctx.lineTo(this.mouseSelectX * this.zoom + this.mouseOffX, this.mouseStartY  * this.zoom + this.mouseOffY);\r\n            this.ctx.lineTo(this.mouseSelectX * this.zoom + this.mouseOffX, this.mouseSelectY * this.zoom + this.mouseOffY);\r\n            this.ctx.lineTo(this.mouseStartX  * this.zoom + this.mouseOffX, this.mouseSelectY * this.zoom + this.mouseOffY);\r\n            this.ctx.lineTo(this.mouseStartX  * this.zoom + this.mouseOffX, this.mouseStartY  * this.zoom + this.mouseOffY);\r\n            this.ctx.stroke();\r\n        }\r\n    }\r\n\r\n}\r\n","/**\r\n * Marlin: Device specific implementation.\r\n*/\r\n\r\nimport { kdTree } from \"kd-tree-javascript\";\r\nimport { Device } from \"./device\";\r\nimport { PCB, Pad } from \"./pcb\";\r\n\r\nenum Status {\r\n    Undefined = 1,\r\n    Ready,\r\n    Busy,\r\n    NC\r\n}\r\n\r\nexport class Marlin extends Device {\r\n    marlinDiv: HTMLElement | null;\r\n    marlinDivStatus: HTMLElement | null;\r\n    marlinDivPosition: HTMLElement | null;\r\n    marlinDivCommands: HTMLElement | null;\r\n\r\n    zero: [number, number] = [0, 0];\r\n\r\n    constructor() {\r\n        super();\r\n        this.marlinDiv = document.getElementById(\"Marlin\");\r\n        this.initHtml();\r\n    }\r\n\r\n\r\n    /**\r\n     * Overwrite! Set the current position to Zero. All further commands will be relative to this position.\r\n     */\r\n    public setZero(point: [number, number]): void {\r\n        this.zero = point;\r\n        this.onBtnAbs().then(() => {\r\n            this.serialWriteWait('G92 X0 Y0 Z0').then(() => {\r\n                this.onBtnPos();\r\n            });\r\n        })\r\n    }\r\n    /**\r\n     * Overwrite! Move to position. If one coordinate is undefined, it's ignored\r\n     */\r\n    public moveTo(x: number | undefined, y: number | undefined, z: number | undefined, e: number | undefined): void {\r\n        let cmd = 'G0 ';\r\n        if (x != undefined) cmd += `X${x - this.zero[0]} `;\r\n        if (y != undefined) cmd += `Y${y - this.zero[1]} `;\r\n        if (z != undefined) cmd += `Z${z} `;\r\n        this.serialWriteWait(cmd).then(() => {\r\n            this.onBtnPos();\r\n        });\r\n    }\r\n\r\n    public async moveToAll(plist: Pad[]) {\r\n        console.log('Marlin: moveToAll', plist.length);\r\n        console.log(plist);\r\n\r\n        const tree = new kdTree(plist, PCB.distance, [\"posX\", \"posY\"]);\r\n\r\n\r\n        let foundpad = plist[0];\r\n\r\n        this.onBtnAbs().then(async () => {\r\n            for (let i = 0; i < plist.length; i++) {\r\n                let search = tree.nearest(foundpad, 1);\r\n\r\n                foundpad = search[0][0];\r\n                console.log('Marlin: moveToAll', foundpad);\r\n\r\n                let cmd = 'G0 ';\r\n                cmd += `X${foundpad.posX - this.zero[0]} `;\r\n                cmd += `Y${foundpad.posY - this.zero[1]} `;\r\n                await this.serialWriteWait(cmd);\r\n                tree.remove(foundpad);\r\n            }\r\n        });\r\n    }\r\n\r\n    public blob() {\r\n        this.onBtnAbs().then(() => {\r\n            this.serialWriteWait('M83').then(() => { // extruder relativ\r\n                this.serialWriteWait('G0 Z3').then(() => {\r\n                    this.serialWriteWait('G0 E10').then(() => {\r\n                        this.serialWriteWait('G0 Z0').then(() => {\r\n                            this.serialWriteWait('G0 Z3')\r\n                        })\r\n                    })\r\n                })\r\n            })\r\n        });\r\n    }\r\n\r\n    protected onSerialConnected() {\r\n        console.log('Marlin: onSerialConnected');\r\n        // read over first messages\r\n        // setTimeout(() => {\r\n        //     while(this.inputQueue.length > 0) {\r\n        //         if (this.marlinDivPosition) {\r\n        //             this.marlinDivPosition.innerHTML += `${this.inputQueue.pop()}`;\r\n        //         }\r\n        //     }\r\n        this.setStatus(Status.Ready)\r\n        if (this.marlinDivStatus && this.marlinDivCommands) {\r\n            this.setStatus(Status.Ready);\r\n            this.marlinDivCommands.className = this.marlinDivCommands.className.replace('w3-hide', 'w3-show');\r\n        }\r\n        // }, 1000);\r\n\r\n        // wait 3sec, run commands 'cold extrude','relative positioning','report position'\r\n        setTimeout(() => {\r\n            this.onBtnCold().then(() => {\r\n                this.onBtnRel().then(() => {\r\n                    this.onBtnPos().then(() => {\r\n                        console.log('Marlin: onSerialConnected init sequence finished');\r\n                    });\r\n                });\r\n            });\r\n        }, 3000);\r\n    }\r\n    protected onSerialDisconnected() {\r\n        console.log('Marlin: onSerialDisconnected');\r\n        if (this.marlinDivStatus && this.marlinDivCommands) {\r\n            this.setStatus(Status.NC);\r\n            this.marlinDivCommands.className = this.marlinDivCommands.className.replace('w3-show', 'w3-hide');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Inherited from Device, adds Status message updates.\r\n     * @param value\r\n     * @param timeout\r\n     * @returns\r\n     */\r\n    public async serialWriteWait(value: string, timeout: number = 10000): Promise<string> {\r\n        return new Promise<string>(async (resolve, reject) => {\r\n            this.setStatus(Status.Busy);\r\n            super.serialWriteWait(value, timeout).then((result) => {\r\n                resolve(result);\r\n            }).catch((reason) => {\r\n                reject(reason);\r\n            }).finally(() => {\r\n                this.setStatus(Status.Ready);\r\n            });\r\n        });\r\n    }\r\n\r\n    private setStatus(status: Status) {\r\n        let html = `unknown status ${status}`;\r\n        switch (status) {\r\n            case Status.Ready:\r\n                html = 'Status: <i class=\"fa-solid fa-plug\"></i> ready'; break;\r\n            case Status.Busy:\r\n                html = 'Status: <i class=\"fa-solid fa-plug-circle-bolt\"></i> busy'; break;\r\n            case Status.NC:\r\n                html = 'Status: <i class=\"fa-solid fa-plug-circle-xmark\"></i> not connected'; break;\r\n        }\r\n        if (this.marlinDivStatus) {\r\n            this.marlinDivStatus.innerHTML = html;\r\n        }\r\n    }\r\n\r\n    onBtnHome(): Promise<void> {\r\n        return new Promise<void>((resolve) => {\r\n            this.serialWriteWait('G28').then((value) => {\r\n                console.log(value);\r\n            }).catch((reason) => {\r\n                console.warn(reason)\r\n            }).finally(() => {\r\n                resolve();\r\n            });\r\n        });\r\n\r\n        //// timeout too small for this command, see what happens\r\n        // this.serialWriteWait('G28', 100).then((value) => {\r\n        //     console.log(value);\r\n        // }).catch((reason) => {\r\n        //     console.warn(reason);\r\n        //     // try again (default timeout is 10sec)\r\n        //     this.serialWriteWait('G28').then((value) => {\r\n        //         console.log(value);\r\n        //         this.onBtnPos();\r\n        //     }).catch((reason) => { console.warn(reason) });\r\n        // });\r\n    };\r\n    onBtnPos(): Promise<void> {\r\n        return new Promise<void>((resolve) => {\r\n            this.serialWriteWait('M114').then((value) => {\r\n                // hier kommt eine zeile mit zahlen und eine mit ok\r\n                console.log('onBtnPos',value);\r\n                if (this.marlinDivPosition) {\r\n                    this.marlinDivPosition.innerText = value;\r\n                }\r\n            }).catch((reason) => {\r\n                console.warn(reason);\r\n            }).finally(() => {\r\n                resolve();\r\n            });\r\n        });\r\n    };\r\n    onBtnAbs() {\r\n        return new Promise<void>((resolve) => {\r\n            this.serialWriteWait('G90').then((value) => {\r\n                console.log(value);\r\n            }).catch((reason) => {\r\n                console.warn(reason);\r\n            }).finally(() => {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n    onBtnRel() {\r\n        return new Promise<void>((resolve) => {\r\n            this.serialWriteWait('G91').then((value) => {\r\n                console.log(value);\r\n            }).catch((reason) => {\r\n                console.warn(reason);\r\n            }).finally(() => {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n    onBtnCold() {\r\n        return new Promise<void>((resolve) => {\r\n            this.serialWriteWait('M302 S0').then((value) => {\r\n                console.log(value);\r\n            }).catch((reason) => {\r\n                console.warn(reason);\r\n            }).finally(() => {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    onBtnXP() {\r\n        this.serialWriteWait('G0 X10').then((value) => { this.onBtnPos(); });\r\n    };\r\n    onBtnXM() {\r\n        this.serialWriteWait('G0 X-10').then((value) => { this.onBtnPos(); });\r\n    };\r\n    onBtnYP() {\r\n        this.serialWriteWait('G0 Y10').then((value) => { this.onBtnPos(); });\r\n    };\r\n    onBtnYM() {\r\n        this.serialWriteWait('G0 Y-10').then((value) => { this.onBtnPos(); });\r\n    };\r\n    onBtnZP() {\r\n        this.serialWriteWait('G0 Z10').then((value) => { this.onBtnPos(); });\r\n    };\r\n    onBtnZM() {\r\n        this.serialWriteWait('G0 Z-10').then((value) => { this.onBtnPos(); });\r\n    };\r\n    onBtnEP() {\r\n        this.serialWriteWait('G0 E10').then((value) => { this.onBtnPos(); });\r\n    };\r\n    onBtnEM() {\r\n        this.serialWriteWait('G0 E-10').then((value) => { this.onBtnPos(); });\r\n    };\r\n\r\n    /**\r\n     * Creates some buttons for Marlin specific actions...\r\n     */\r\n    private initHtml() {\r\n        if (this.marlinDiv) {\r\n            this.marlinDiv.innerHTML = `\r\n            <div class=\"w3-border w3-border-dark-grey\">\r\n            <div id=\"marlinStatus\"></div>\r\n            <div id=\"marlinPosition\" class=\"w3-tiny\"></div>\r\n            <div id=\"marlinCommands\" class=\"w3-tiny w3-hide\">\r\n            <p>\r\n            <button id=\"marlinHome\" class=\"w3-button w3-round w3-light-grey\">home</button>\r\n            <button id=\"marlinPos\"  class=\"w3-button w3-round w3-light-grey\">pos?</button>\r\n            <button id=\"marlinRel\"  class=\"w3-button w3-round w3-light-grey\">rel</button>\r\n            <button id=\"marlinAbs\"  class=\"w3-button w3-round w3-light-grey\">abs</button>\r\n            <button id=\"marlinCold\" class=\"w3-button w3-round w3-light-grey\">cold</button>\r\n            </p>\r\n            <p>\r\n            <button id=\"marlinXP\" class=\"w3-button w3-round w3-light-grey\">x+</button>\r\n            <button id=\"marlinXM\" class=\"w3-button w3-round w3-light-grey\">x-</button>\r\n            <button id=\"marlinYP\" class=\"w3-button w3-round w3-light-grey\">y+</button>\r\n            <button id=\"marlinYM\" class=\"w3-button w3-round w3-light-grey\">y-</button>\r\n            <button id=\"marlinZP\" class=\"w3-button w3-round w3-light-grey\">z+</button>\r\n            <button id=\"marlinZM\" class=\"w3-button w3-round w3-light-grey\">z-</button>\r\n            </p>\r\n            <p>\r\n            <button id=\"marlinEP\" class=\"w3-button w3-round w3-light-grey\">e+</button>\r\n            <button id=\"marlinEM\" class=\"w3-button w3-round w3-light-grey\">e-</button>\r\n            </p>\r\n            </div>\r\n            </div>\r\n            `\r\n            this.marlinDivStatus = document.getElementById(\"marlinStatus\");\r\n            this.marlinDivPosition = document.getElementById(\"marlinPosition\");\r\n            this.marlinDivCommands = document.getElementById(\"marlinCommands\");\r\n            this.setStatus(Status.NC);\r\n            const marlinBtnHome = document.getElementById(\"marlinHome\");\r\n            if (marlinBtnHome) {\r\n                marlinBtnHome.onclick = this.onBtnHome.bind(this);\r\n            }\r\n            const marlinBtnPos = document.getElementById(\"marlinPos\");\r\n            if (marlinBtnPos) {\r\n                marlinBtnPos.onclick = this.onBtnPos.bind(this);\r\n            }\r\n            const marlinBtnRel = document.getElementById(\"marlinRel\");\r\n            if (marlinBtnRel) {\r\n                marlinBtnRel.onclick = this.onBtnRel.bind(this);\r\n            }\r\n            const marlinBtnAbs = document.getElementById(\"marlinAbs\");\r\n            if (marlinBtnAbs) {\r\n                marlinBtnAbs.onclick = this.onBtnAbs.bind(this);\r\n            }\r\n            const marlinBtnCold = document.getElementById(\"marlinCold\");\r\n            if (marlinBtnCold) {\r\n                marlinBtnCold.onclick = this.onBtnCold.bind(this);\r\n            }\r\n\r\n            const marlinBtnXP = document.getElementById(\"marlinXP\");\r\n            if (marlinBtnXP) {\r\n                marlinBtnXP.onclick = this.onBtnXP.bind(this);\r\n            }\r\n            const marlinBtnXM = document.getElementById(\"marlinXM\");\r\n            if (marlinBtnXM) {\r\n                marlinBtnXM.onclick = this.onBtnXM.bind(this);\r\n            }\r\n            const marlinBtnYP = document.getElementById(\"marlinYP\");\r\n            if (marlinBtnYP) {\r\n                marlinBtnYP.onclick = this.onBtnYP.bind(this);\r\n            }\r\n            const marlinBtnYM = document.getElementById(\"marlinYM\");\r\n            if (marlinBtnYM) {\r\n                marlinBtnYM.onclick = this.onBtnYM.bind(this);\r\n            }\r\n            const marlinBtnZP = document.getElementById(\"marlinZP\");\r\n            if (marlinBtnZP) {\r\n                marlinBtnZP.onclick = this.onBtnZP.bind(this);\r\n            }\r\n            const marlinBtnZM = document.getElementById(\"marlinZM\");\r\n            if (marlinBtnZM) {\r\n                marlinBtnZM.onclick = this.onBtnZM.bind(this);\r\n            }\r\n            const marlinBtnEP = document.getElementById(\"marlinEP\");\r\n            if (marlinBtnEP) {\r\n                marlinBtnEP.onclick = this.onBtnEP.bind(this);\r\n            }\r\n            const marlinBtnEM = document.getElementById(\"marlinEM\");\r\n            if (marlinBtnEM) {\r\n                marlinBtnEM.onclick = this.onBtnEM.bind(this);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { PCB } from './pcb';\r\n\r\nexport class Parser {\r\n    public processCB: Function;\r\n\r\n    public padsField: HTMLElement|null;\r\n    public coordsField: HTMLElement|null;\r\n\r\n    public pcb: PCB;\r\n    constructor(pcb: PCB) {\r\n        this.pcb = pcb;\r\n    }\r\n\r\n    public parseFile?(file: File):Promise<void>; // virtual !\r\n    public cancel?(): void;\r\n}\r\n","import { Parser } from \"./parser\";\r\nimport { PCB } from \"./pcb\";\r\n\r\nexport class ParserGerber extends Parser {\r\n    reNumFormat = /^%FSLAX([0-9])([0-9])Y([0-9])([0-9])[*]%/;\r\n    reMatchPad = /^(%AD)(D[0-9]+)([A-Za-z]+)[,]([-0-9.]+)[X]?([-0-9.]+)?[X]?([-0-9.]+)?/;\r\n    reMatchPadCoordInit = /^([DG][0-9]+)[*]/;\r\n    reMatchPadCoord = /^X([-]?)([0-9]+)Y([-]?)([0-9]+)D([0-9]+)[*]/;\r\n    _cancel = false;\r\n    floatFracts = 1;\r\n    floatDezis = 1;\r\n    lastPad = \"\";\r\n\r\n    constructor(pcb: PCB) {\r\n        super(pcb);\r\n    }\r\n\r\n    public parseFile(file: File):Promise<void> {\r\n        return new Promise<void>((resolve) => {\r\n            file.arrayBuffer().then((buf) => {\r\n                arrayBufferToString(buf, 'UTF-8', (text: string) => {\r\n                    this.processGerberText(text).finally(() => {\r\n                        resolve();\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    public cancel(): void {\r\n        this._cancel = true;\r\n    }\r\n\r\n    async processGerberText(text: string) {\r\n        // console.log(text);\r\n        // translate line ends...\r\n        text = text.replace(/\\r/g, ''); // remove windows trash\r\n        const lines = text.split('\\n');\r\n\r\n        let lineNr = 1;\r\n        for (let line of lines) {\r\n            lineNr++;\r\n\r\n            if (this._cancel) {\r\n                this._cancel = false;\r\n                break;\r\n            }\r\n            // console.log(`gerber(${lineNr}/${lines.length}): `);\r\n\r\n            await this.processGerberLine(line);\r\n\r\n            if (this.processCB) {\r\n                this.processCB(lineNr * 100 / lines.length);\r\n            }\r\n\r\n        } // for\r\n\r\n        this.pcb.retree();\r\n    }\r\n\r\n\r\n    async processGerberLine(line: string) {\r\n        return new Promise<void>((resolve) => {\r\n                // line = line.replace(/\\n/g,'<br>');\r\n\r\n                // Zahlenformat info line \"%FSLAX34Y34*%\"\r\n                //   %FSLAX25Y25*% Coordinate format specification:\r\n                //   Coordinates format is 2.5:\r\n                //   2 digits in the integer part\r\n                //   5 digits in the fractional part\r\n                const matchNumFormat = this.reNumFormat.exec(line); //line.match();\r\n                if (matchNumFormat) {\r\n                    // console.log(matchNumFormat);\r\n                    this.floatDezis = parseInt(matchNumFormat[1]);\r\n                    this.floatFracts = parseInt(matchNumFormat[2]);\r\n                    console.log(`gerber: float digits = ${this.floatDezis} ${this.floatFracts}`);\r\n                }\r\n\r\n                // check for pad definitions\r\n                // %ADD21R,0.600000X1.050000*%\r\n                // %ADD10RoundRect,0.120000 X -0.180000\r\n                //               X 0.680000 X -0.180000\r\n                //              X -0.680000 X 0.180000\r\n                //              X -0.680000 X 0.180000\r\n                //               X 0.680000 X 0*%\r\n                const matchPad = this.reMatchPad.exec(line); // line.match();///);\r\n                // Wenn \"C\" dann gibts nur eine coord\r\n                if (matchPad) {\r\n                    // console.log(matchPad);\r\n                    if (this.padsField) {\r\n                        this.padsField.innerHTML += `${matchPad[2]} ${matchPad[3]} ${matchPad[4]} ${matchPad[5]}<br>`;\r\n                    }\r\n                    if (matchPad[3] == 'RoundRect') {\r\n                        // kicad macro schnulli\r\n                        this.pcb.addPadStyle(matchPad[2], matchPad[3], Math.abs(parseFloat(matchPad[5])), Math.abs(parseFloat(matchPad[6])));\r\n                        // console.log(`gerber: style ${matchPad[2]},${matchPad[3]}, ${Math.abs(parseFloat(matchPad[5]))}, ${Math.abs(parseFloat(matchPad[6]))}`);\r\n                    } else {\r\n                        this.pcb.addPadStyle(matchPad[2], matchPad[3], parseFloat(matchPad[4]), parseFloat(matchPad[5]));\r\n                        // console.log(`gerber: style ${matchPad[2]},${matchPad[3]}, ${parseFloat(matchPad[4])}, ${parseFloat(matchPad[5])}`);\r\n                    }\r\n                }\r\n\r\n                // Dxx* command - should be pad draw\r\n                const matchPadCoordInit = this.reMatchPadCoordInit.exec(line); //line.match();///);\r\n                if (matchPadCoordInit) {\r\n                    // console.log(matchPadCoordInit);\r\n                    this.lastPad = matchPadCoordInit[1];\r\n                }\r\n                // a pad line: \"X379984Y963930D03*\"\r\n                const matchPadCoord = this.reMatchPadCoord.exec(line); // line.match();///);\r\n                if (matchPadCoord) {\r\n                    if (this.lastPad.startsWith('D')) { // ignore G36 or so commands\r\n                        // if (1) {\r\n                        // ignore and return ...\r\n                        // resolve();\r\n                        // console.log(matchPadCoord);\r\n                        let sx = matchPadCoord[2];\r\n                        let sy = matchPadCoord[4];\r\n                        const len = this.floatDezis + this.floatFracts;\r\n                        // fill freak's leading zeros\r\n                        while (sx.length < len) {\r\n                            sx = `0${sx}`;\r\n                        }\r\n                        while (sy.length < len) {\r\n                            sy = `0${sy}`;\r\n                        }\r\n                        // make a freak'n float\r\n                        let fx = 0.0;\r\n                        let fy = 0.0;\r\n                        sx = `${sx.substring(0, this.floatDezis)}.${sx.substring(this.floatDezis)}`;\r\n                        sy = `${sy.substring(0, this.floatDezis)}.${sy.substring(this.floatDezis)}`;\r\n                        fx = parseFloat(sx);\r\n                        fy = parseFloat(sy);\r\n                        if (matchPadCoord[1] == '-') {\r\n                            fx = fx * -1.0;\r\n                        }\r\n                        if (matchPadCoord[3] == '-') {\r\n                            fy = fy * -1.0;\r\n                        }\r\n\r\n                        fy = fy;\r\n                        if (this.coordsField) {\r\n                            this.coordsField.innerHTML += `${this.lastPad}:  x:${fx} y:${fy} <br>`;\r\n                        }\r\n                        this.pcb.addPad(this.lastPad, fx, fy);\r\n                        // console.log(`gerber: pad ${lastPad}, ${fx}, ${fy}`);\r\n                    } else {\r\n                        console.log(`ignoring ${this.lastPad}`);\r\n                    }\r\n\r\n                    // if(lineNr > 1500) {\r\n                    //     break; // for testing !!!\r\n                    // }\r\n                }\r\n            this.pcb.center();\r\n            setTimeout(resolve, 0); // this enables the progressbar / UI updates !\r\n        });\r\n    }\r\n}\r\n\r\n// found on se web...\r\n\r\nfunction arrayBufferToString(buffer, encoding, callback) {\r\n    var blob = new Blob([buffer], { type: 'text/plain' });\r\n    var reader = new FileReader();\r\n    reader.onload = (evt) => { if(evt.target) callback(evt.target.result); };\r\n    reader.readAsText(blob, encoding);\r\n}\r\n\r\nfunction stringToArrayBuffer(string, encoding, callback) {\r\n    var blob = new Blob([string], { type: 'text/plain;charset=' + encoding });\r\n    var reader = new FileReader();\r\n    reader.onload = (evt) => { if(evt.target) callback(evt.target.result); };\r\n    reader.readAsArrayBuffer(blob);\r\n}\r\n","import { Grid, Mouse } from 'canvas-coords' // https://github.com/CodeDraken/canvas-coords\r\nimport { Device } from './device';\r\nimport { Marlin } from './deviceMarlin';\r\nimport { PCB, Pad, PadStyle } from './pcb';\r\nimport { ParserGerber } from './parserGerber';\r\n\r\nconst body: HTMLBodyElement | null = <HTMLBodyElement | null>document.getElementsByTagName('body')[0];\r\nconst messageElem: HTMLDivElement | null = <HTMLDivElement | null>document.getElementById(\"messageElem\");\r\nconst uploadButton: HTMLButtonElement | null = <HTMLButtonElement | null>document.getElementById(\"uploadButton\");\r\nconst padsField: HTMLDivElement | null = <HTMLDivElement | null>document.getElementById(\"padsField\");\r\nconst coords: HTMLDivElement | null = <HTMLDivElement | null>document.getElementById(\"Coords\");\r\nconst coordsField: HTMLDivElement | null = <HTMLDivElement | null>document.getElementById(\"coordsField\");\r\nconst dropZone: HTMLElement | null = document.getElementById(\"dropZone\");\r\nconst canvas: HTMLCanvasElement | null = <HTMLCanvasElement | null>document.getElementById(\"canvas\");\r\nconst debug: HTMLDivElement | null = <HTMLDivElement | null>document.getElementById(\"debug\");\r\nconst progress: HTMLDivElement | null = <HTMLDivElement | null>document.getElementById(\"progress\");\r\nconst progressbar: HTMLDivElement | null = <HTMLDivElement | null>document.getElementById('progressbar');\r\nconst contextMenu: HTMLDivElement | null = <HTMLDivElement | null>document.getElementById('contextMenu');\r\nconst progressCancel: HTMLButtonElement | null = <HTMLButtonElement | null>document.getElementById('progressCancel');\r\n\r\nconst menuSetZero: HTMLButtonElement | null = <HTMLButtonElement | null>document.getElementById(\"menuSetZero\");\r\nconst menuMoveTo: HTMLButtonElement | null = <HTMLButtonElement | null>document.getElementById(\"menuMoveTo\");\r\nconst menuMoveAll: HTMLButtonElement | null = <HTMLButtonElement | null>document.getElementById(\"menuMoveAll\");\r\nconst menuBlob: HTMLButtonElement | null = <HTMLButtonElement | null>document.getElementById(\"menuBlob\");\r\n\r\n\r\nconst main: HTMLDivElement | null = <HTMLDivElement | null>document.getElementById(\"main\");\r\nconst openSidebarButton: HTMLButtonElement | null = <HTMLButtonElement | null>document.getElementById(\"openSidebar\");\r\n\r\nconst header = document.getElementsByTagName('header')[0];\r\nconst footer = document.getElementById('footer');\r\n\r\nlet messageClearTimeout:number|undefined = undefined;\r\nlet ctx: CanvasRenderingContext2D | null = null;\r\nlet mouse: Mouse, grid: Grid;\r\nlet pcb: PCB;\r\n\r\nlet device = new Marlin();\r\n\r\nfunction init() {\r\n    if (uploadButton && menuSetZero && menuMoveTo && menuMoveAll && menuBlob && progressCancel && padsField && coordsField && body && canvas && footer) {\r\n        ctx = canvas.getContext(\"2d\");\r\n\r\n        canvas.addEventListener(\"mousemove\", (event) => {\r\n            if (pcb) pcb.mouseMove(event);\r\n            event.preventDefault();\r\n        }, false);\r\n        canvas.addEventListener(\"mousedown\", (event) => {\r\n            if (pcb) pcb.mouseDown(event);\r\n            event.preventDefault();\r\n        }, false);\r\n        canvas.addEventListener(\"mouseup\", (event) => {\r\n            if (pcb) pcb.mouseUp(event);\r\n            event.preventDefault();\r\n        }, false);\r\n        canvas.addEventListener(\"mouseout\", (event) => {\r\n            if (pcb) pcb.mouseOut(event);\r\n            event.preventDefault();\r\n        }, false);\r\n        canvas.addEventListener(\"wheel\", (event) => {\r\n            if (pcb) pcb.mouseWheel(event);\r\n            event.preventDefault();\r\n        }, false);\r\n\r\n        uploadButton.onclick = () => {\r\n            var uploadFileEle = document.createElement('input');\r\n            uploadFileEle.type = \"file\";\r\n            uploadFileEle.click();\r\n            uploadFileEle.addEventListener(\"change\", (ev: Event) => {\r\n                console.log(ev);\r\n                // check if user had selected a file\r\n                if (uploadFileEle.files && uploadFileEle.files.length > 0) {\r\n                    let file = uploadFileEle.files[0]\r\n                    console.log(file);\r\n                    console.log(`file: ${file.name} size:${file.size}`);\r\n\r\n                    processGerberFile(file);\r\n\r\n                } else {\r\n                    alert('please choose a file')\r\n                    return\r\n                }\r\n            })\r\n            return false;\r\n        }\r\n\r\n        menuSetZero.onclick = (event:MouseEvent) => {\r\n            pcb.setZero();\r\n            device.setZero(pcb.getZero()); // device must substract \"zero\" from all coords\r\n        }\r\n\r\n        menuMoveTo.onclick = (event:MouseEvent) => {\r\n            // console.log(event);\r\n            // find the coords !!!\r\n            // !!! need to be relative to zero !!! uuuhhh\r\n\r\n            // let pads = pcb.getSelected();\r\n            // if (pads.length > 0) {\r\n            //     let pad: Pad = pads[0];\r\n            //     console.log(pad);\r\n            //     device.moveTo(pad.posX, pad.posY, undefined, undefined);\r\n            // }\r\n\r\n            let pos = pcb.getSelectedZero(); // lower left of selection\r\n            device.moveTo(pos[0], pos[1], undefined, undefined);\r\n        }\r\n        menuMoveAll.onclick = (event:MouseEvent) => {\r\n            let plist = pcb.getSelected();\r\n            device.moveToAll(plist);\r\n        }\r\n        menuBlob.onclick = () => {\r\n            device.blob();\r\n        }\r\n\r\n        body.ondrop = (ev) => {\r\n            ev.preventDefault();\r\n            console.log(ev);\r\n            if (ev.dataTransfer && ev.dataTransfer.items) {\r\n                // Use DataTransferItemList interface to access the file(s)\r\n                [...ev.dataTransfer.items].forEach((item, i) => {\r\n                    // If dropped items aren't files, reject them\r\n                    if (item.kind === 'file') {\r\n                        const file = item.getAsFile();\r\n                        if (file) {\r\n                            console.log(`… item[${i}].name = ${file.name}`);\r\n                            processGerberFile(file);\r\n                        }\r\n                    }\r\n                });\r\n            } else if (ev.dataTransfer) {\r\n                // Use DataTransfer interface to access the file(s)\r\n                [...ev.dataTransfer.files].forEach((file, i) => {\r\n                    if (file) {\r\n                        console.log(`… file[${i}].name = ${file.name}`);\r\n                        processGerberFile(file);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        body.ondragover = (ev) => {\r\n            console.log('File(s) in drop zone');\r\n\r\n            // Prevent default behavior (Prevent file from being opened)\r\n            ev.preventDefault();\r\n        }\r\n        body.oncontextmenu = (ev) => {\r\n            // console.log('oncontextmenu',ev);\r\n            ev.preventDefault();\r\n            if (contextMenu) {\r\n                contextMenu.style.left = `${ev.pageX}px`;\r\n                contextMenu.style.top = `${ev.pageY}px`;\r\n                contextMenu.className = contextMenu.className.replace('w3-hide', 'w3-show');\r\n            }\r\n        }\r\n        body.onmouseup = (ev) => {\r\n            if (contextMenu) {\r\n                contextMenu.className = contextMenu.className.replace('w3-show', 'w3-hide');\r\n            }\r\n        }\r\n\r\n\r\n        canvas.width = innerWidth;\r\n        canvas.height = innerHeight - header.getBoundingClientRect().height - footer.getBoundingClientRect().height - 7;\r\n\r\n        if (ctx) {\r\n            pcb = new PCB(ctx, canvas);\r\n\r\n            mouse = new Mouse(ctx, canvas);\r\n            mouse.track();\r\n            grid = new Grid();\r\n            grid.step = 2;\r\n            grid.lineWidth = 0.03;\r\n            grid.boldWidth = 0.05;\r\n            grid.createLines(canvas);\r\n        }\r\n\r\n        globalThis.resize();\r\n\r\n        window.requestAnimationFrame(update);\r\n    }\r\n    else {\r\n        console.error('missing html elements !');\r\n    }\r\n}\r\n\r\nfunction message(text: string) {\r\n    if(messageClearTimeout) {\r\n        window.clearTimeout(messageClearTimeout);\r\n    }\r\n    if(messageElem) {\r\n        messageElem.innerHTML = `${text}`;\r\n        messageClearTimeout = window.setTimeout(messageClear, 10000);\r\n    }\r\n}\r\nfunction messageClear() {\r\n    messageClearTimeout = undefined;\r\n    if(messageElem) {\r\n        messageElem.innerHTML = '';\r\n    }\r\n}\r\n\r\nfunction update() {\r\n    if (canvas && ctx) {\r\n        window.requestAnimationFrame(update);\r\n\r\n        ctx.setTransform(\r\n            pcb ? pcb.zoom : 1, 0,\r\n            0, pcb ? pcb.zoom : 1,\r\n            0, 0);\r\n\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        // grid.draw(ctx, canvas);\r\n        // grid.step = pcb?10.0/pcb.zoom:10.0;\r\n        // grid.createLines(canvas);\r\n        grid.lines.forEach(line => line.draw(ctx))\r\n        mouse.draw();\r\n\r\n\r\n        ctx.setTransform(\r\n            1, 0,\r\n            0, -1,\r\n            0, canvas.height);\r\n\r\n        // ctx.scale(1,-1); // flip display y\r\n\r\n        if (pcb) {\r\n            pcb.draw();\r\n        }\r\n    }\r\n}\r\n\r\nasync function processGerberFile(file: File) {\r\n    if (padsField && coordsField && ctx && canvas && progress && progressbar && progressCancel && dropZone) { // makes typescript happy...\r\n\r\n        pcb = new PCB(ctx, canvas);\r\n        let parser = new ParserGerber(pcb);\r\n\r\n        padsField.innerHTML = '';\r\n        coordsField.innerHTML = '';\r\n        dropZone.innerText = file.name;\r\n        progress.style.display = 'block';\r\n\r\n        parser.padsField = padsField;\r\n        parser.coordsField = coordsField;\r\n        progressCancel.onclick = () => {\r\n            parser.cancel();\r\n        }\r\n        parser.processCB = (value:number) => {\r\n            if (progressbar) {\r\n                progressbar.style.width = `${value}%`;\r\n                // console.log('progress:', value);\r\n            }\r\n        }\r\n        await parser.parseFile(file);\r\n\r\n        pcb.zoomToFit([canvas.width, canvas.height]);\r\n\r\n        progress.style.display = 'none';\r\n    }\r\n}\r\n\r\n\r\nglobalThis.accordionToggler = (id: string) => {\r\n    var elem = document.getElementById(id);\r\n    if (elem) {\r\n        if (elem.className.indexOf(\"w3-show\") == -1 && elem.className.indexOf(\"w3-hide\") == -1) {\r\n            elem.className += \" w3-show\";\r\n        } else if (elem.className.indexOf(\"w3-show\") != -1) {\r\n            elem.className = elem.className.replace(\"w3-show\", \"w3-hide\");\r\n        } else {\r\n            elem.className = elem.className.replace(\"w3-hide\", \"w3-show\");\r\n        }\r\n    } else {\r\n        console.warn('accordionToggler no elem with id:', id);\r\n    }\r\n    globalThis.resize();\r\n}\r\n\r\nglobalThis.openSidebar = () => {\r\n    if (main && debug && openSidebarButton) {\r\n        main.style.marginRight = \"350px\";\r\n        debug.style.width = \"350px\";\r\n        debug.style.display = \"block\";\r\n        openSidebarButton.style.display = 'none';\r\n    }\r\n}\r\n\r\nglobalThis.closeSidebar = () => {\r\n    if (main && debug && openSidebarButton) {\r\n        main.style.marginRight = \"0px\";\r\n        debug.style.display = \"none\";\r\n        openSidebarButton.style.display = \"inline-block\";\r\n    }\r\n}\r\n\r\nglobalThis.zoomToFit = () => {\r\n    if(pcb && canvas) {\r\n        pcb.zoomToFit([canvas.width, canvas.height]);\r\n    }\r\n}\r\n\r\nglobalThis.rotateRight = () => {\r\n    if(pcb && canvas) {\r\n        // pcb.zoomToFit([canvas.width, canvas.height]);\r\n    }\r\n    message('müsste ma einer implementieren, ne');\r\n}\r\n\r\nglobalThis.resize = () => {\r\n    if (canvas && header && footer && debug && coords) {\r\n        canvas.width = innerWidth;\r\n        canvas.height = innerHeight - header.getBoundingClientRect().height - footer.getBoundingClientRect().height;\r\n        mouse.draw();\r\n        grid.draw(ctx, canvas);\r\n\r\n        // height of debug is innerHeight - margin top/bottom more or less - footer.height\r\n        // console.log('resize: margin', debug.getBoundingClientRect().top);\r\n        let dmaxheight = innerHeight - footer.getBoundingClientRect().height; // canvas.height + header.getBoundingClientRect().height - 16;\r\n        // debug.style.height = `${dheight}px`; // 16 is marginTop\r\n        // console.log('resize: inner height', innerHeight);\r\n        // console.log('resize: debug height', dheight);\r\n\r\n        // height of all other elements in debug\r\n        let height = 0;\r\n        for (let child of debug.children) {\r\n            let elem: HTMLElement = <HTMLElement>child;\r\n            // console.log(`resize:   ${child.id} ${elem.clientHeight} ${elem.className}`);\r\n            if(elem.className.indexOf('w3-hide') != -1)\r\n                continue;\r\n            height += elem.clientHeight;\r\n        }\r\n\r\n        // console.log('resize: debug content height', height);\r\n\r\n        // so far so good\r\n\r\n        // if coords is shown, set debug size to max\r\n        // if coords is shown, give it all the rest of the space\r\n        // console.log('resize coords ', coords.className.indexOf('w3-hide'));\r\n        if(coords.className.indexOf('w3-hide') != -1) {\r\n            // console.log('resize coords is NOT visible');\r\n            debug.style.height = `${height+16}px`;\r\n            coords.style.height = `${16}px`; // egal ?\r\n        } else {\r\n            // console.log('resize coords is visible');\r\n            height -= coords.getBoundingClientRect().height; // do not count coords to hight\r\n            debug.style.height = `${dmaxheight}px`;\r\n            coords.style.height = `${dmaxheight - height - 16}px`;\r\n        }\r\n    }\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', init);\r\n\r\nwindow.addEventListener('resize', (val) => {\r\n    // console.log(`resize: ${val}`);\r\n    globalThis.resize();\r\n})\r\n"],"names":["a","g","t","e","TypeError","c","o","length","s","enumerable","configurable","writable","Object","defineProperty","key","i","arguments","r","n","this","x","y","ctx","canvas","color","font","setPos","bind","prototype","h","value","addEventListener","removeEventListener","getBoundingClientRect","Math","floor","clientX","left","clientY","top","concat","save","fillStyle","width","measureText","v","height","fillText","restore","d","f","b","l","lineWidth","startX","startY","endX","endY","beginPath","strokeStyle","moveTo","lineTo","stroke","j","step","boldNth","boldColor","boldWidth","lines","push","$","createLines","forEach","draw","drawText","Mouse","Grid","$c0e850328e6b509c$exports","obj","right","parent","dimension","content","scoreFunction","bubbleUp","pop","sinkDown","peek","remove","Error","size","u","kdTree","Array","isArray","root","sort","slice","toJSON","insert","nearest","p","abs","min","balanceFactor","max","log","BinaryHeap","define","amd","$8a913147b03fa214$exports","$d86f0ae2c7fe36e0$export$8215d14a63d9fb10","inputLast","inputQueue","constructor","deviceCheck","document","getElementById","deviceConnect","deviceDisconnect","deviceInput","deviceInputForm","deviceInfo","deviceLog","deviceSerial","port","textDecoder","TextDecoderStream","onclick","serialCheck","serialConnect","serialDisconnect","onsubmit","serialInputForm","async","serial","requestPort","then","console","serialPortOpen","reason","serialError","vid","pid","ports","getInfo","usbProductId","usbVendorId","close","catch","error","warn","timeout","Promise","resolve","reject","serialWrite","available","timestep","maxtime","serialAvail","err","event","preventDefault","serialInputChange","text","result","navigator","updatePorts","getPorts","html","innerHTML","btns","getElementsByTagName","btn","ids","id","split","serialConnectDevice","parseInt","className","replace","onconnect","ondisconnect","onSerialDisconnected","open","baudRate","val","onSerialConnected","setTimeout","serialRead","toString","readable","pipeTo","getReader","serialReadon","done","reader","read","releaseLock","pushedStuff","indexOf","values","serialLog","serialCallback","utf8Encode","TextEncoder","getWriter","writer","write","encode","$54033deb9df7af75$var$BoundingBox","minx","miny","maxx","maxy","updateFromPad","pad","update","posX","posY","center","zoom","zero","diagonal","sqrt","inside","$54033deb9df7af75$export$138f967feff4fb19","form","w","$54033deb9df7af75$export$4b43d51f29457384","style","asTuple","$54033deb9df7af75$export$bdf465113f979d8f","fileName","mouseFlag","mouseStartX","mouseStartY","mouseOffX","mouseOffY","mapStyles","Map","mapPads","bbPcb","bbZero","bbSelection","setZero","getZero","getSelected","near","getSelectedZero","zoomToFit","psize","zw","zh","name","set","addPad","has","Set","padset","get","newpad","add","pads","padsets","tree","distance","trans","getTransform","button","mx","my","offsetTop","mouseSelectX","mouseSelectY","mouseSelect","found","dist","shiftKey","bbNewSelection","near1","deltaY","pow","rect","keys","padstyle","sty","fillRect","sw","sh","fill","ellipse","PI","csize","$3e46d46990e31732$var$Status","Status","$6401b53bf7af177a$export$7acfa6ed01010e37","pcb","$f25b1b1482b2219b$export$fc5d4ca282e021b1","reNumFormat","reMatchPad","reMatchPadCoordInit","reMatchPadCoord","_cancel","floatFracts","floatDezis","lastPad","super","parseFile","file","arrayBuffer","buf","encoding","callback","blob","processGerberText","finally","Blob","type","FileReader","onload","evt","target","readAsText","cancel","lineNr","line","processGerberLine","processCB","retree","matchNumFormat","exec","matchPad","padsField","addPadStyle","parseFloat","matchPadCoordInit","matchPadCoord","startsWith","sx","sy","len","fx","fy","substring","coordsField","$b4e14b6b8da86996$var$body","$b4e14b6b8da86996$var$messageElem","$b4e14b6b8da86996$var$uploadButton","$b4e14b6b8da86996$var$padsField","$b4e14b6b8da86996$var$coords","$b4e14b6b8da86996$var$coordsField","$b4e14b6b8da86996$var$dropZone","$b4e14b6b8da86996$var$canvas","$b4e14b6b8da86996$var$debug","$b4e14b6b8da86996$var$progress","$b4e14b6b8da86996$var$progressbar","$b4e14b6b8da86996$var$contextMenu","$b4e14b6b8da86996$var$progressCancel","$b4e14b6b8da86996$var$menuSetZero","$b4e14b6b8da86996$var$menuMoveTo","$b4e14b6b8da86996$var$menuMoveAll","$b4e14b6b8da86996$var$menuBlob","$b4e14b6b8da86996$var$main","$b4e14b6b8da86996$var$openSidebarButton","$b4e14b6b8da86996$var$header","$b4e14b6b8da86996$var$footer","$b4e14b6b8da86996$var$messageClearTimeout","$b4e14b6b8da86996$var$mouse","$b4e14b6b8da86996$var$grid","$b4e14b6b8da86996$var$pcb","$b4e14b6b8da86996$var$ctx","$b4e14b6b8da86996$var$device","marlinDiv","initHtml","point","onBtnAbs","serialWriteWait","onBtnPos","z","cmd","undefined","plist","search","foundpad","setStatus","Ready","marlinDivStatus","marlinDivCommands","onBtnCold","onBtnRel","NC","Busy","status","onBtnHome","marlinDivPosition","innerText","$b4e14b6b8da86996$var$messageClear","$b4e14b6b8da86996$var$update","window","requestAnimationFrame","setTransform","clearRect","$b4e14b6b8da86996$var$processGerberFile","parser","display","globalThis","accordionToggler","elem","resize","openSidebar","marginRight","closeSidebar","rotateRight","clearTimeout","innerWidth","innerHeight","dmaxheight","child","children","clientHeight","getContext","mouseMove","mouseDown","mouseUp","mouseOut","mouseWheel","uploadFileEle","createElement","click","ev","files","alert","pos","moveToAll","ondrop","dataTransfer","items","item","kind","getAsFile","ondragover","oncontextmenu","pageX","pageY","onmouseup","track"],"version":3,"file":"index.cfb31f65.js.map"}