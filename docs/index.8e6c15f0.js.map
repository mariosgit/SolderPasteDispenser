{"mappings":"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","sources":["node_modules/canvas-coords/dist/index.js","src/device.ts","src/deviceMarlin.ts","node_modules/kd-tree-javascript/kdTree-min.js","src/pcb.ts","src/parser.ts","src/parserGerber.ts","src/index.ts"],"sourcesContent":["(function () {var a={};function g(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function c(t,e){for(var o=0;o<e.length;o++){var s=e[o];s.enumerable=s.enumerable||!1,s.configurable=!0,\"value\"in s&&(s.writable=!0),Object.defineProperty(t,s.key,s)}}function h(t,e,o){return e&&c(t.prototype,e),o&&c(t,o),t}var i=function(){function t(e,o){var s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"gray\",i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:\"16px Monospace\",r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,n=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;g(this,t),this.x=r,this.y=n,this.ctx=e,this.canvas=o,this.color=s,this.font=i,this.setPos=this.setPos.bind(this)}return h(t,[{key:\"track\",value:function(){var t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],e=this.canvas;return t?e.addEventListener(\"mousemove\",this.setPos):e.removeEventListener(\"mousemove\",this.setPos),this}},{key:\"setPos\",value:function(t){var e=this.canvas.getBoundingClientRect();return this.x=Math.floor(t.clientX-e.left),this.y=Math.floor(t.clientY-e.top),this}},{key:\"draw\",value:function(){var t=this.x,e=this.y,o=this.canvas,s=this.ctx,i=this.font,r=this.color,n=\"X: \".concat(t,\", Y: \").concat(e);s.save(),s.fillStyle=r,s.font=i;var a=t<o.width/2?20:-s.measureText(n).width-20,v=e<o.height/2?25:-18;return s.fillText(n,this.x+a,this.y+v),s.restore(),this}}]),t}();function d(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function f(t,e){for(var i=0;i<e.length;i++){var s=e[i];s.enumerable=s.enumerable||!1,s.configurable=!0,\"value\"in s&&(s.writable=!0),Object.defineProperty(t,s.key,s)}}function e(t,e,i){return e&&f(t.prototype,e),i&&f(t,i),t}var b=function(){function t(e,i,s,r,l,n){d(this,t),this.color=e,this.lineWidth=i,this.startX=s,this.startY=r,this.endX=l,this.endY=n}return e(t,[{key:\"draw\",value:function(t){var e=this.color,i=this.lineWidth,s=this.startX,r=this.startY,l=this.endX,n=this.endY;t.save(),t.beginPath(),t.strokeStyle=e,t.lineWidth=i,t.moveTo(s,r),t.lineTo(l,n),t.stroke(),t.restore()}}]),t}(),j=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"gray\",i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.3,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:10,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:\"DarkGray\",n=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.5,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:\"16px Monospace\";d(this,t),this.color=e,this.lineWidth=i,this.step=s,this.boldNth=r,this.boldColor=l,this.boldWidth=n,this.font=o,this.lines=null}return e(t,[{key:\"createLines\",value:function(t){for(var e=this.color,i=this.lineWidth,s=this.step,r=this.boldNth,l=this.boldColor,n=this.boldWidth,o=[],a=r*s,h=0;h<t.width;h+=s){var v=h%a==0;o.push(v?new b(l,n,h,0,h,t.height):new b(e,i,h,0,h,t.height))}for(var $=0;$<t.height;$+=s){var d=$%a==0;o.push(d?new b(l,n,0,$,t.width,$):new b(e,i,0,$,t.width,$))}this.lines=o}},{key:\"drawText\",value:function(t,e){var i=this.step,s=this.boldNth,r=this.boldColor,l=this.font;t.save(),t.font=l,t.fillStyle=r,t.fillText(\"0\",1,15);for(var n=i*s;n<e.width;n+=i*s)t.fillText(n,n,15);for(var o=i*s;o<e.height;o+=i*s)t.fillText(o,0,o+15);t.restore()}},{key:\"draw\",value:function(t,e){this.lines||this.createLines(e),this.lines.forEach(function(e){return e.draw(t)}),this.drawText(t,e)}}]),t}();a.Mouse=i,a.Grid=j;if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=a}else if(typeof define===\"function\"&&define.amd){define(function(){return a})}})();","// todo:\r\n//   move out serial ? Or look for a serial readline implementation ???\r\n// bugs:\r\n//   disconnect - Failed to execute 'close' on 'SerialPort': Cannot cancel a locked stream\r\n\r\n/**\r\n * Device: abstracts access to machine.\r\n * It \"simplifies\" serial port access. At the moment it only ollows \"write and response\" style communication.\r\n * The serial port is opened, then a reader loop is startet, which pushes each new line into the inputQueue.\r\n * Function serialWriteWait is used to issue commands and wait for the device to aknowledge.\r\n */\r\n\r\nexport class Device {\r\n    deviceCheck: HTMLButtonElement | null;\r\n    deviceConnect: HTMLButtonElement | null;\r\n    deviceDisconnect: HTMLButtonElement | null;\r\n    deviceInput: HTMLInputElement | null;\r\n    deviceInputForm: HTMLFormElement | null;\r\n    deviceInfo: HTMLDivElement | null;\r\n    deviceLog: HTMLDivElement | null;\r\n    deviceSerial: HTMLDivElement | null;\r\n    ports: any;\r\n    port: any;\r\n    textDecoder: TextDecoderStream;\r\n    reader: ReadableStreamDefaultReader<string>;\r\n    inputLast: string = '';\r\n\r\n    protected inputQueue: string[] = [];\r\n\r\n    constructor() {\r\n        this.deviceCheck = <HTMLButtonElement | null>document.getElementById(\"deviceCheck\");\r\n        this.deviceConnect = <HTMLButtonElement | null>document.getElementById(\"deviceConnect\");\r\n        this.deviceDisconnect = <HTMLButtonElement | null>document.getElementById(\"deviceDisconnect\");\r\n        this.deviceInput = <HTMLInputElement | null>document.getElementById(\"deviceInput\");\r\n        this.deviceInputForm = <HTMLFormElement | null>document.getElementById(\"deviceInputForm\");\r\n        this.deviceInfo = <HTMLDivElement | null>document.getElementById(\"deviceInfo\");\r\n        this.deviceLog = <HTMLDivElement | null>document.getElementById(\"deviceLog\");\r\n        this.deviceSerial = <HTMLDivElement | null>document.getElementById(\"deviceSerial\");\r\n        this.port = null;\r\n        this.textDecoder = new TextDecoderStream();\r\n        if (this.deviceCheck && this.deviceConnect && this.deviceDisconnect && this.deviceInput && this.deviceInputForm) {\r\n            this.deviceCheck.onclick = this.serialCheck.bind(this);\r\n            this.deviceConnect.onclick = this.serialConnect.bind(this);\r\n            this.deviceDisconnect.onclick = this.serialDisconnect.bind(this);\r\n            // this.deviceDosome.onclick = this.serialDosome.bind(this);\r\n            // this.deviceInput.onchange = this.serialInputChange.bind(this);\r\n            this.deviceInputForm.onsubmit = this.serialInputForm.bind(this);\r\n        }\r\n        this.serialCheck();\r\n    }\r\n\r\n    /**\r\n     * Overwrite! Set the current position to Zero. All further commands will be relative to this position.\r\n     */\r\n    public setZero?(point:[number,number]): void;\r\n        /**\r\n     * Overwrite! Move to position. If one coordinate is undefined, it's ignored\r\n     */\r\n    public moveTo?(x:number|undefined, y:number|undefined, z:number|undefined, e: number | undefined): void\r\n\r\n    /**\r\n     * Overwrite this in derived class to get notification when some device was connected.\r\n     */\r\n    protected onSerialConnected?():void;\r\n    /**\r\n     * Overwrite this in derived class to get notification when some device was disconnected.\r\n     */\r\n    protected onSerialDisconnected?():void;\r\n\r\n    /**\r\n     * Opens a dialog where user can select a device to connect.\r\n     */\r\n    public async serialConnect() {\r\n        // opens dialog where user can select a device\r\n        (<any>navigator).serial.requestPort().then((port) => {\r\n            console.log('serialConnect', port);\r\n            this.serialPortOpen(port);\r\n        }).catch((reason) => {\r\n            // console.warn('serialConnect',reason);\r\n            this.serialError(reason);\r\n        });\r\n    }\r\n\r\n    public async serialConnectDevice(vid: number, pid: number) {\r\n        for (let port of this.ports) {\r\n            console.log(`serialConnectDevice: serial available, ports: `, port.getInfo());\r\n            const { usbProductId, usbVendorId } = port.getInfo();\r\n            if (usbProductId == pid && usbVendorId == vid) {\r\n                this.serialPortOpen(port);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Disconnect from device\r\n     */\r\n    public async serialDisconnect() {\r\n        if (this.port) {\r\n            // this.reader.releaseLock(); // does'nt do it :(\r\n            this.port.close().then(() => {\r\n                this.port = null;\r\n                console.log('port closed');\r\n            }).catch((error) => {\r\n                console.warn(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  Wait until some response or timeout, returns response or 'timeout' or might fail with 'busy' or 'disconnected'\r\n     */\r\n    public async serialWriteWait(value: string, timeout: number = 10000): Promise<string> {\r\n        // clean serial input\r\n        this.inputQueue = [];\r\n        return new Promise<string>(async (resolve, reject) => {\r\n            if (this.port) {\r\n                try {\r\n                    this.serialWrite(value);\r\n                    // wait until some response or timeout\r\n                    let available = false;\r\n                    const timestep = 10;\r\n                    let maxtime = timeout;\r\n                    while (!available) {\r\n                        available = await this.serialAvail(timestep);\r\n                        maxtime = maxtime - timestep;\r\n                        if (maxtime <= 0)\r\n                            break;\r\n                    }\r\n                    console.log(`serialWriteWait avail:${available} time:${timeout - maxtime}`);\r\n\r\n                    console.log(`serialWriteWait check: ${this.inputQueue.length}`);\r\n                    if (this.inputQueue.length > 0) {\r\n                        const inp = <string>this.inputQueue.pop();\r\n                        // console.log(`serialWriteWait resolve: ${inp}`);\r\n                        resolve(inp);\r\n                    } else {\r\n                        // console.log(`serialWriteWait reject: `);\r\n                        reject('timeout');\r\n                    }\r\n                } catch (err) {\r\n                    console.warn(err);\r\n                    reject('busy');\r\n                }\r\n            } else {\r\n                console.warn(this.port);\r\n                reject('disconnected');\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * Helper function to write anything to the device.\r\n     * @param event\r\n     */\r\n    public serialInputForm(event: InputEvent) { // fires when return is entered\r\n        if (this.deviceInput) {\r\n            event.preventDefault(); // form will do strange things !\r\n            // console.log(event);\r\n            this.serialInputChange(event);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Helper function to write anything to the device.\r\n     * @param event\r\n     */\r\n    public async serialInputChange(event: InputEvent) { // fires when return is entered\r\n        if (this.deviceInput) {\r\n            if (this.port) {\r\n                let text = this.deviceInput.value;\r\n                if (text.length > 0) {\r\n                    this.serialWrite(text);\r\n                }\r\n            } else {\r\n                console.warn('serialInputChange - no port open');\r\n            }\r\n        }\r\n    }\r\n\r\n    /* ***************** private stuff **************************** */\r\n\r\n    private async serialCheck() {\r\n        let result = false;\r\n        if (\"serial\" in navigator) {\r\n            this.updatePorts();\r\n            (<any>navigator).serial.addEventListener(\"connect\", (event) => {\r\n                // TODO: Automatically open event.target or warn user a port is available.\r\n                console.log('serialCheck:connect', event);\r\n                this.updatePorts();\r\n            });\r\n            (<any>navigator).serial.addEventListener(\"disconnect\", (event) => {\r\n                // TODO: Remove |event.target| from the UI.\r\n                // If the serial port was opened, a stream error would be observed as well.\r\n                console.log('serialCheck:disconnect', event);\r\n            });\r\n            result = true;\r\n        } else {\r\n            // console.warn('No serial API available, try another browser');\r\n            this.serialError(\"This browser does not support the serial port. Connection to device impossible! Use Chrome!\");\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private updatePorts() {\r\n        // lists all recently used ports, could just open one then.\r\n        (<any>navigator).serial.getPorts().then((ports) => {\r\n            console.log('updatePorts:', ports);\r\n            this.ports = ports;\r\n            let html = '';//devices:<br>';\r\n            for (let port of ports) {\r\n                console.log(`serial available, ports: `, port.getInfo());\r\n                const { usbProductId, usbVendorId } = port.getInfo();\r\n                console.log(`updatePorts port pid:${usbProductId} vid:${usbVendorId}`);\r\n                html += `<div class=\"w3-container\"><i class=\"fa-solid fa-microchip\"></i> pid:${usbProductId} vid:${usbVendorId} <button class=\"w3-btn w3-round w3-light-grey w3-tiny\" id=\"${usbVendorId}-${usbProductId}\"><i class=\"fa fa-plug\"></i> connect </button></div>`;\r\n            }\r\n            if (this.deviceInfo) {\r\n                this.deviceInfo.innerHTML = html;\r\n                const btns = this.deviceInfo.getElementsByTagName('button');\r\n                for (const btn of btns) {\r\n                    btn.onclick = () => { const ids = btn.id.split('-'); console.log(ids); this.serialConnectDevice(parseInt(ids[0]), parseInt(ids[1])) };\r\n                }\r\n            }\r\n            if (this.deviceConnect && (this.ports == null || this.ports.length == 0)) {\r\n                // console.log('updatePorts: open dev buttons!!!', this.deviceConnect.className);\r\n                this.deviceConnect.className = this.deviceConnect.className.replace('w3-hide', 'w3-show');\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Opens a givven port. Can be used after queriing ports with updatePorts.\r\n     * @param port\r\n     */\r\n    private serialPortOpen(port: any) {\r\n        port.onconnect = () => {\r\n            console.log(`CONNECTED`);\r\n        };\r\n        port.ondisconnect = () => {\r\n            console.log(`DISCONNECTED`);\r\n            if(this.onSerialDisconnected) {\r\n                this.onSerialDisconnected();\r\n            }\r\n        };\r\n        port.open({ baudRate: 250000 }).then((val) => {\r\n            this.port = port;\r\n            if (this.deviceLog) {\r\n                this.deviceLog.innerHTML = \"connected<br>\";\r\n            }\r\n            console.log('port opened ? ', this.port);\r\n            if(this.onSerialConnected){\r\n                this.onSerialConnected();\r\n            }\r\n\r\n            setTimeout(this.serialRead.bind(this), 0); // start read loop\r\n        }).catch((error) => {\r\n            // console.warn(error);\r\n            this.serialError(error.toString());\r\n        });\r\n    }\r\n\r\n    protected serialError(error: string) {\r\n        console.warn('serialError', error);\r\n        if (this.deviceLog) {\r\n            this.deviceLog.innerHTML = `<span class=\"w3-red\">${error}</span><br>`\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internal, starts the read line loop.\r\n     */\r\n    private async serialRead() {\r\n        if (this.port) {\r\n            const readableStreamClosed = this.port.readable.pipeTo(this.textDecoder.writable);\r\n            this.reader = this.textDecoder.readable.getReader();\r\n            // Listen to data coming from the serial device.\r\n            setTimeout(this.serialReadon.bind(this), 1); // will loop there\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internal, handles the read line loop.\r\n     */\r\n    private async serialReadon() {\r\n        try {\r\n            const { value, done } = await this.reader.read();\r\n            if (done) {\r\n                // Allow the serial port to be closed later. // Does not happen !\r\n                this.reader.releaseLock();\r\n                console.log('serialRead - done');\r\n            } else {\r\n                let pushedStuff = false;\r\n                // value is a string.\r\n                if (value.indexOf('\\n') != -1) {\r\n                    const values = value.split('\\n');\r\n                    // console.log(values);\r\n                    if (values.length <= 1) {\r\n                        console.error('Assertion failed ', values);\r\n                    }; // there is a \\n in it !\r\n                    for (let i = 0; i < values.length - 1; i++) {\r\n                        this.inputLast += values[i];\r\n                        this.inputQueue.push(this.inputLast);\r\n                        this.serialLog(this.inputLast, true);\r\n                        this.inputLast = '';\r\n                        pushedStuff = true;\r\n                    }\r\n                    this.inputLast = values[values.length - 1];\r\n                    // console.log(`serialReadon last: \"${this.inputLast}\"`);\r\n                } else {\r\n                    // no \\n\r\n                    this.inputLast += value;\r\n                    // console.log(`serialReadon last: \"${this.inputLast}\"`);\r\n                }\r\n\r\n                if (pushedStuff) {\r\n                    setTimeout(this.serialCallback.bind(this), 5);\r\n                }\r\n                setTimeout(this.serialReadon.bind(this), 1); // will loop there\r\n            }\r\n        } catch (error) {\r\n            console.warn(error);\r\n            this.serialError(error.toString());\r\n        }\r\n    }\r\n\r\n    private serialCallback() {\r\n        // const elem = document.getElementById('deviceLog');\r\n        // if (elem) {\r\n        //     let latest = this.inputQueue.pop();\r\n        //     while (latest) {\r\n        //         elem.innerHTML += `${latest}<br>`;\r\n        //         latest = this.inputQueue.pop();\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    private async serialWrite(value: string) {\r\n        this.serialLog(value, false);\r\n\r\n        // write...\r\n        let utf8Encode = new TextEncoder();\r\n        const writer = this.port.writable.getWriter();\r\n        await writer.write(utf8Encode.encode(`${value}\\n`));\r\n        writer.releaseLock();\r\n    }\r\n\r\n    /**\r\n     * Waits until data was read or timeout\r\n     * @param timeout\r\n     * @returns\r\n     */\r\n    private serialAvail(timeout: number = 10): Promise<boolean> {\r\n        return new Promise<boolean>((resolve) => {\r\n            if (this.inputQueue.length > 0) {\r\n                resolve(true);\r\n            } else {\r\n                setTimeout(() => {\r\n                    resolve(false);\r\n                }, timeout);\r\n            }\r\n        });\r\n    }\r\n\r\n    private serialLog(text: string, incomming: boolean) {\r\n        if (this.deviceSerial) {\r\n            while (this.deviceSerial.childElementCount > 20) {\r\n                let ch = this.deviceSerial.firstChild;\r\n                if (ch) {\r\n                    this.deviceSerial.removeChild(ch);\r\n                }\r\n            }\r\n            if (incomming) {\r\n                this.deviceSerial.innerHTML += `<div><i class=\"fa-solid fa-arrow-right-to-bracket\"></i> ${text}</div>`\r\n            } else {\r\n                this.deviceSerial.innerHTML += `<div><i class=\"fa-solid fa-arrow-up-right-from-square\"></i> ${text}</div>`;\r\n            }\r\n            globalThis.resize();\r\n        }\r\n    }\r\n}\r\n","/**\r\n * Marlin: Device specific implementation.\r\n*/\r\n\r\nimport { Device } from \"./device\";\r\n\r\nenum Status {\r\n    Undefined = 1,\r\n    Ready,\r\n    Busy,\r\n    NC\r\n}\r\n\r\nexport class Marlin extends Device {\r\n    marlinDiv: HTMLElement | null;\r\n    marlinDivStatus: HTMLElement | null;\r\n    marlinDivPosition: HTMLElement | null;\r\n    marlinDivCommands: HTMLElement | null;\r\n\r\n    zero:[number,number] = [0,0];\r\n\r\n    constructor() {\r\n        super();\r\n        this.marlinDiv = document.getElementById(\"Marlin\");\r\n        this.initHtml();\r\n    }\r\n\r\n\r\n    /**\r\n     * Overwrite! Set the current position to Zero. All further commands will be relative to this position.\r\n     */\r\n    public setZero(point:[number,number]): void {\r\n        this.zero = point;\r\n        this.serialWriteWait('G92 X0 Y0 Z0').then(() => {\r\n            this.onBtnPos();\r\n        });\r\n    }\r\n    /**\r\n     * Overwrite! Move to position. If one coordinate is undefined, it's ignored\r\n     */\r\n    public moveTo(x: number | undefined, y: number | undefined, z: number | undefined, e: number | undefined): void {\r\n        let cmd = 'G0 ';\r\n        if(x != undefined) cmd += `X${x-this.zero[0]} `;\r\n        if(y != undefined) cmd += `Y${y-this.zero[1]} `;\r\n        if(z != undefined) cmd += `Z${z} `;\r\n        this.serialWriteWait(cmd).then(() => {\r\n            this.onBtnPos();\r\n        });\r\n    }\r\n\r\n    protected onSerialConnected() {\r\n        console.log('Marlin: onSerialConnected');\r\n        // read over first messages\r\n        // setTimeout(() => {\r\n        //     while(this.inputQueue.length > 0) {\r\n        //         if (this.marlinDivPosition) {\r\n        //             this.marlinDivPosition.innerHTML += `${this.inputQueue.pop()}`;\r\n        //         }\r\n        //     }\r\n        this.setStatus(Status.Ready)\r\n        if (this.marlinDivStatus && this.marlinDivCommands) {\r\n            this.setStatus(Status.Ready);\r\n            this.marlinDivCommands.className = this.marlinDivCommands.className.replace('w3-hide', 'w3-show');\r\n        }\r\n        // }, 1000);\r\n\r\n        // wait 3sec, run commands 'cold extrude','relative positioning','report position'\r\n        setTimeout(() => {\r\n            this.onBtnCold().then(() => {\r\n                this.onBtnRel().then(() => {\r\n                    this.onBtnPos().then(() => {\r\n                        console.log('Marlin: onSerialConnected init sequence finished');\r\n                    });\r\n                });\r\n            });\r\n        }, 3000);\r\n    }\r\n    protected onSerialDisconnected() {\r\n        console.log('Marlin: onSerialDisconnected');\r\n        if (this.marlinDivStatus && this.marlinDivCommands) {\r\n            this.setStatus(Status.NC);\r\n            this.marlinDivCommands.className = this.marlinDivCommands.className.replace('w3-show', 'w3-hide');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Inherited from Device, adds Status message updates.\r\n     * @param value\r\n     * @param timeout\r\n     * @returns\r\n     */\r\n    public async serialWriteWait(value: string, timeout: number = 10000): Promise<string> {\r\n        return new Promise<string>(async (resolve, reject) => {\r\n            this.setStatus(Status.Busy);\r\n            super.serialWriteWait(value, timeout).then((result) => {\r\n                resolve(result);\r\n            }).catch((reason) => {\r\n                reject(reason);\r\n            }).finally(() => {\r\n                this.setStatus(Status.Ready);\r\n            });\r\n        });\r\n    }\r\n\r\n    private setStatus(status: Status) {\r\n        let html = `unknown status ${status}`;\r\n        switch (status) {\r\n            case Status.Ready:\r\n                html = 'Status: <i class=\"fa-solid fa-plug\"></i> ready'; break;\r\n            case Status.Busy:\r\n                html = 'Status: <i class=\"fa-solid fa-plug-circle-bolt\"></i> busy'; break;\r\n            case Status.NC:\r\n                html = 'Status: <i class=\"fa-solid fa-plug-circle-xmark\"></i> not connected'; break;\r\n        }\r\n        if (this.marlinDivStatus) {\r\n            this.marlinDivStatus.innerHTML = html;\r\n        }\r\n    }\r\n\r\n    onBtnHome(): Promise<void> {\r\n        return new Promise<void>((resolve) => {\r\n            this.serialWriteWait('G28').then((value) => {\r\n                console.log(value);\r\n            }).catch((reason) => {\r\n                console.warn(reason)\r\n            }).finally(() => {\r\n                resolve();\r\n            });\r\n        });\r\n\r\n        //// timeout too small for this command, see what happens\r\n        // this.serialWriteWait('G28', 100).then((value) => {\r\n        //     console.log(value);\r\n        // }).catch((reason) => {\r\n        //     console.warn(reason);\r\n        //     // try again (default timeout is 10sec)\r\n        //     this.serialWriteWait('G28').then((value) => {\r\n        //         console.log(value);\r\n        //         this.onBtnPos();\r\n        //     }).catch((reason) => { console.warn(reason) });\r\n        // });\r\n    };\r\n    onBtnPos(): Promise<void> {\r\n        return new Promise<void>((resolve) => {\r\n            this.serialWriteWait('M114').then((value) => {\r\n                console.log(value);\r\n                if (this.marlinDivPosition) {\r\n                    this.marlinDivPosition.innerText = value;\r\n                }\r\n            }).catch((reason) => {\r\n                console.warn(reason);\r\n            }).finally(() => {\r\n                resolve();\r\n            });\r\n        });\r\n    };\r\n    onBtnAbs() {\r\n        return new Promise<void>((resolve) => {\r\n            this.serialWriteWait('G90').then((value) => {\r\n                console.log(value);\r\n            }).catch((reason) => {\r\n                console.warn(reason);\r\n            }).finally(() => {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n    onBtnRel() {\r\n        return new Promise<void>((resolve) => {\r\n            this.serialWriteWait('G91').then((value) => {\r\n                console.log(value);\r\n            }).catch((reason) => {\r\n                console.warn(reason);\r\n            }).finally(() => {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n    onBtnCold() {\r\n        return new Promise<void>((resolve) => {\r\n            this.serialWriteWait('M302 S0').then((value) => {\r\n                console.log(value);\r\n            }).catch((reason) => {\r\n                console.warn(reason);\r\n            }).finally(() => {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    onBtnXP() {\r\n        this.serialWriteWait('G0 X10').then((value) => { this.onBtnPos(); });\r\n    };\r\n    onBtnXM() {\r\n        this.serialWriteWait('G0 X-10').then((value) => { this.onBtnPos(); });\r\n    };\r\n    onBtnYP() {\r\n        this.serialWriteWait('G0 Y10').then((value) => { this.onBtnPos(); });\r\n    };\r\n    onBtnYM() {\r\n        this.serialWriteWait('G0 Y-10').then((value) => { this.onBtnPos(); });\r\n    };\r\n    onBtnZP() {\r\n        this.serialWriteWait('G0 Z10').then((value) => { this.onBtnPos(); });\r\n    };\r\n    onBtnZM() {\r\n        this.serialWriteWait('G0 Z-10').then((value) => { this.onBtnPos(); });\r\n    };\r\n    onBtnEP() {\r\n        this.serialWriteWait('G0 E10').then((value) => { this.onBtnPos(); });\r\n    };\r\n    onBtnEM() {\r\n        this.serialWriteWait('G0 E-10').then((value) => { this.onBtnPos(); });\r\n    };\r\n\r\n    /**\r\n     * Creates some buttons for Marlin specific actions...\r\n     */\r\n    private initHtml() {\r\n        if (this.marlinDiv) {\r\n            this.marlinDiv.innerHTML = `\r\n            <div class=\"w3-border w3-border-dark-grey\">\r\n            <div id=\"marlinStatus\"></div>\r\n            <div id=\"marlinPosition\" class=\"w3-tiny\"></div>\r\n            <div id=\"marlinCommands\" class=\"w3-tiny w3-hide\">\r\n            <p>\r\n            <button id=\"marlinHome\" class=\"w3-button w3-round w3-light-grey\">home</button>\r\n            <button id=\"marlinPos\"  class=\"w3-button w3-round w3-light-grey\">pos?</button>\r\n            <button id=\"marlinRel\"  class=\"w3-button w3-round w3-light-grey\">rel</button>\r\n            <button id=\"marlinAbs\"  class=\"w3-button w3-round w3-light-grey\">abs</button>\r\n            <button id=\"marlinCold\" class=\"w3-button w3-round w3-light-grey\">cold</button>\r\n            </p>\r\n            <p>\r\n            <button id=\"marlinXP\" class=\"w3-button w3-round w3-light-grey\">x+</button>\r\n            <button id=\"marlinXM\" class=\"w3-button w3-round w3-light-grey\">x-</button>\r\n            <button id=\"marlinYP\" class=\"w3-button w3-round w3-light-grey\">y+</button>\r\n            <button id=\"marlinYM\" class=\"w3-button w3-round w3-light-grey\">y-</button>\r\n            <button id=\"marlinZP\" class=\"w3-button w3-round w3-light-grey\">z+</button>\r\n            <button id=\"marlinZM\" class=\"w3-button w3-round w3-light-grey\">z-</button>\r\n            </p>\r\n            <p>\r\n            <button id=\"marlinEP\" class=\"w3-button w3-round w3-light-grey\">e+</button>\r\n            <button id=\"marlinEM\" class=\"w3-button w3-round w3-light-grey\">e-</button>\r\n            </p>\r\n            </div>\r\n            </div>\r\n            `\r\n            this.marlinDivStatus = document.getElementById(\"marlinStatus\");\r\n            this.marlinDivPosition = document.getElementById(\"marlinPosition\");\r\n            this.marlinDivCommands = document.getElementById(\"marlinCommands\");\r\n            this.setStatus(Status.NC);\r\n            const marlinBtnHome = document.getElementById(\"marlinHome\");\r\n            if (marlinBtnHome) {\r\n                marlinBtnHome.onclick = this.onBtnHome.bind(this);\r\n            }\r\n            const marlinBtnPos = document.getElementById(\"marlinPos\");\r\n            if (marlinBtnPos) {\r\n                marlinBtnPos.onclick = this.onBtnPos.bind(this);\r\n            }\r\n            const marlinBtnRel = document.getElementById(\"marlinRel\");\r\n            if (marlinBtnRel) {\r\n                marlinBtnRel.onclick = this.onBtnRel.bind(this);\r\n            }\r\n            const marlinBtnAbs = document.getElementById(\"marlinAbs\");\r\n            if (marlinBtnAbs) {\r\n                marlinBtnAbs.onclick = this.onBtnAbs.bind(this);\r\n            }\r\n            const marlinBtnCold = document.getElementById(\"marlinCold\");\r\n            if (marlinBtnCold) {\r\n                marlinBtnCold.onclick = this.onBtnCold.bind(this);\r\n            }\r\n\r\n            const marlinBtnXP = document.getElementById(\"marlinXP\");\r\n            if (marlinBtnXP) {\r\n                marlinBtnXP.onclick = this.onBtnXP.bind(this);\r\n            }\r\n            const marlinBtnXM = document.getElementById(\"marlinXM\");\r\n            if (marlinBtnXM) {\r\n                marlinBtnXM.onclick = this.onBtnXM.bind(this);\r\n            }\r\n            const marlinBtnYP = document.getElementById(\"marlinYP\");\r\n            if (marlinBtnYP) {\r\n                marlinBtnYP.onclick = this.onBtnYP.bind(this);\r\n            }\r\n            const marlinBtnYM = document.getElementById(\"marlinYM\");\r\n            if (marlinBtnYM) {\r\n                marlinBtnYM.onclick = this.onBtnYM.bind(this);\r\n            }\r\n            const marlinBtnZP = document.getElementById(\"marlinZP\");\r\n            if (marlinBtnZP) {\r\n                marlinBtnZP.onclick = this.onBtnZP.bind(this);\r\n            }\r\n            const marlinBtnZM = document.getElementById(\"marlinZM\");\r\n            if (marlinBtnZM) {\r\n                marlinBtnZM.onclick = this.onBtnZM.bind(this);\r\n            }\r\n            const marlinBtnEP = document.getElementById(\"marlinEP\");\r\n            if (marlinBtnEP) {\r\n                marlinBtnEP.onclick = this.onBtnEP.bind(this);\r\n            }\r\n            const marlinBtnEM = document.getElementById(\"marlinEM\");\r\n            if (marlinBtnEM) {\r\n                marlinBtnEM.onclick = this.onBtnEM.bind(this);\r\n            }\r\n        }\r\n    }\r\n}\r\n","/**\n * k-d Tree JavaScript - V 1.01\n *\n * https://github.com/ubilabs/kd-tree-javascript\n *\n * @author Mircea Pricop <pricop@ubilabs.net>, 2012\n * @author Martin Kleppe <kleppe@ubilabs.net>, 2012\n * @author Ubilabs http://ubilabs.net, 2012\n * @license MIT License <http://www.opensource.org/licenses/mit-license.php>\n */!function(t,n){\"function\"==typeof define&&define.amd?define([\"exports\"],n):n(\"object\"==typeof exports?exports:t)}(this,function(t){function n(t,n,o){this.obj=t,this.left=null,this.right=null,this.parent=o,this.dimension=n}function o(t){this.content=[],this.scoreFunction=t}o.prototype={push:function(t){this.content.push(t),this.bubbleUp(this.content.length-1)},pop:function(){var t=this.content[0],n=this.content.pop();return this.content.length>0&&(this.content[0]=n,this.sinkDown(0)),t},peek:function(){return this.content[0]},remove:function(t){for(var n=this.content.length,o=0;o<n;o++)if(this.content[o]==t){var i=this.content.pop();return void(o!=n-1&&(this.content[o]=i,this.scoreFunction(i)<this.scoreFunction(t)?this.bubbleUp(o):this.sinkDown(o)))}throw new Error(\"Node not found.\")},size:function(){return this.content.length},bubbleUp:function(t){for(var n=this.content[t];t>0;){var o=Math.floor((t+1)/2)-1,i=this.content[o];if(!(this.scoreFunction(n)<this.scoreFunction(i)))break;this.content[o]=n,this.content[t]=i,t=o}},sinkDown:function(t){for(var n=this.content.length,o=this.content[t],i=this.scoreFunction(o);;){var e=2*(t+1),r=e-1,l=null;if(r<n){var u=this.content[r],h=this.scoreFunction(u);h<i&&(l=r)}if(e<n){var s=this.content[e];this.scoreFunction(s)<(null==l?i:h)&&(l=e)}if(null==l)break;this.content[t]=this.content[l],this.content[l]=o,t=l}}},t.kdTree=function(t,i,e){function r(t,o,i){var l,u,h=o%e.length;return 0===t.length?null:1===t.length?new n(t[0],h,i):(t.sort(function(t,n){return t[e[h]]-n[e[h]]}),l=Math.floor(t.length/2),u=new n(t[l],h,i),u.left=r(t.slice(0,l),o+1,u),u.right=r(t.slice(l+1),o+1,u),u)}var l=this;Array.isArray(t)?this.root=r(t,0,null):function(t){function n(t){t.left&&(t.left.parent=t,n(t.left)),t.right&&(t.right.parent=t,n(t.right))}l.root=t,n(l.root)}(t),this.toJSON=function(t){t||(t=this.root);var o=new n(t.obj,t.dimension,null);return t.left&&(o.left=l.toJSON(t.left)),t.right&&(o.right=l.toJSON(t.right)),o},this.insert=function(t){function o(n,i){if(null===n)return i;var r=e[n.dimension];return t[r]<n.obj[r]?o(n.left,n):o(n.right,n)}var i,r,l=o(this.root,null);null!==l?(i=new n(t,(l.dimension+1)%e.length,l),r=e[l.dimension],t[r]<l.obj[r]?l.left=i:l.right=i):this.root=new n(t,0,null)},this.remove=function(t){function n(o){if(null===o)return null;if(o.obj===t)return o;var i=e[o.dimension];return t[i]<o.obj[i]?n(o.left,o):n(o.right,o)}function o(t){function n(t,o){var i,r,l,u,h;return null===t?null:(i=e[o],t.dimension===o?null!==t.left?n(t.left,o):t:(r=t.obj[i],l=n(t.left,o),u=n(t.right,o),h=t,null!==l&&l.obj[i]<r&&(h=l),null!==u&&u.obj[i]<h.obj[i]&&(h=u),h))}var i,r,u;if(null===t.left&&null===t.right)return null===t.parent?void(l.root=null):(u=e[t.parent.dimension],void(t.obj[u]<t.parent.obj[u]?t.parent.left=null:t.parent.right=null));null!==t.right?(r=(i=n(t.right,t.dimension)).obj,o(i),t.obj=r):(r=(i=n(t.left,t.dimension)).obj,o(i),t.right=t.left,t.left=null,t.obj=r)}var i;null!==(i=n(l.root))&&o(i)},this.nearest=function(t,n,r){function u(o){function r(t,o){f.push([t,o]),f.size()>n&&f.pop()}var l,h,s,c,a=e[o.dimension],g=i(t,o.obj),p={};for(c=0;c<e.length;c+=1)c===o.dimension?p[e[c]]=t[e[c]]:p[e[c]]=o.obj[e[c]];h=i(p,o.obj),null!==o.right||null!==o.left?(u(l=null===o.right?o.left:null===o.left?o.right:t[a]<o.obj[a]?o.left:o.right),(f.size()<n||g<f.peek()[1])&&r(o,g),(f.size()<n||Math.abs(h)<f.peek()[1])&&null!==(s=l===o.left?o.right:o.left)&&u(s)):(f.size()<n||g<f.peek()[1])&&r(o,g)}var h,s,f;if(f=new o(function(t){return-t[1]}),r)for(h=0;h<n;h+=1)f.push([null,r]);for(l.root&&u(l.root),s=[],h=0;h<Math.min(n,f.content.length);h+=1)f.content[h][0]&&s.push([f.content[h][0].obj,f.content[h][1]]);return s},this.balanceFactor=function(){function t(n){return null===n?0:Math.max(t(n.left),t(n.right))+1}function n(t){return null===t?0:n(t.left)+n(t.right)+1}return t(l.root)/(Math.log(n(l.root))/Math.log(2))}},t.BinaryHeap=o});\n","import {kdTree} from 'kd-tree-javascript';\r\n\r\nclass BoundingBox {\r\n    minx: number = 99999;\r\n    miny: number = 99999;\r\n    maxx: number = -99999;\r\n    maxy: number = -99999;\r\n    constructor() { }\r\n    updateFromPad(pad:Pad) {\r\n        this.update(pad.posX, pad.posY);\r\n    }\r\n    update(x: number, y: number) {\r\n        if (x < this.minx) this.minx = x;\r\n        if (y < this.miny) this.miny = y;\r\n        if (x > this.maxx) this.maxx = x;\r\n        if (y > this.maxy) this.maxy = y;\r\n        // console.log(`bb: ${this.miny} ${this.maxy} ${this.center()[1]}`);\r\n    }\r\n    center(zoom: number = 1.0): [x: number, y: number] {\r\n        return [(this.minx + (this.maxx - this.minx) / 2) * zoom, (this.miny + (this.maxy - this.miny) / 2) * zoom];\r\n    }\r\n    zero(zoom: number = 1.0): [x: number, y: number] {\r\n        return [this.minx * zoom, this.miny * zoom];\r\n    }\r\n    size(zoom: number = 1.0): [x: number, y: number] {\r\n        return [(this.maxx - this.minx) * zoom, (this.maxy - this.miny) * zoom];\r\n    }\r\n    diagonal(zoom: number = 1.0): number {\r\n        const size = this.size(zoom);\r\n        return Math.sqrt(size[0]*size[0] + size[1]*size[1]);\r\n    }\r\n    /** Check if pad is inside the boundingbox */\r\n    inside(pad: Pad):boolean {\r\n        return (pad.posX >= this.minx && pad.posX <= this.maxx) && (pad.posY >= this.miny && pad.posY <= this.maxy)\r\n    }\r\n}\r\n\r\nexport class PadStyle {\r\n    public form: string;\r\n    public width: number;\r\n    public height: number;\r\n    constructor(form: string, w: number, h: number) {\r\n        this.form = form;\r\n        this.width = w;\r\n        this.height = h;\r\n    }\r\n}\r\n\r\nexport class Pad {\r\n    posX: number;\r\n    posY: number;\r\n    style: string;\r\n    constructor(style: string, x: number, y: number) {\r\n        this.posX = x;\r\n        this.posY = y;\r\n        this.style = style;\r\n    }\r\n    asTuple():[number,number] {\r\n        return [this.posX, this.posY];\r\n    }\r\n}\r\n\r\nexport class PCB {\r\n    ctx: CanvasRenderingContext2D;\r\n    canvas: HTMLCanvasElement;\r\n    mapStyles: Map<string, PadStyle>;\r\n    mapPads: Map<string, Set<Pad>>;\r\n    fileName: string = \"\";\r\n\r\n    mouseFlag: boolean = false;\r\n    mouseStartX: number = 0;\r\n    mouseStartY: number = 0;\r\n    mouseOffX: number = 0;\r\n    mouseOffY: number = 0;\r\n    mouseSelect: boolean;\r\n    mouseSelectX: number;\r\n    mouseSelectY: number;\r\n\r\n    posZero: number[];\r\n\r\n    zoom: number = 5.0;\r\n    bbPcb: BoundingBox;\r\n    bbSelection: BoundingBox;\r\n    bbZero: BoundingBox; // use center as zero\r\n\r\n    tree: kdTree<Pad>;\r\n    nearest:[Pad, number][] = [];\r\n\r\n    constructor(ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement) {\r\n        this.ctx = ctx;\r\n        this.canvas = canvas;\r\n        this.mapStyles = new Map<string, PadStyle>();\r\n        this.mapPads = new Map<string, Set<Pad>>();\r\n        this.bbPcb = new BoundingBox();\r\n        this.bbZero = new BoundingBox();\r\n        this.bbSelection = new BoundingBox();\r\n    }\r\n\r\n    /**\r\n     * Sets the Zero position to the lower left of selection rectangle.\r\n     */\r\n    public setZero():void {\r\n        let result = false;\r\n        // use last selection ???\r\n        this.bbZero = this.bbSelection;\r\n        result = true;\r\n        console.log(`Pcb:setZero: ${this.bbZero.zero()}`);\r\n    }\r\n\r\n    /**\r\n     * @returns Zero position relative to Origin(0,0).\r\n     */\r\n    public getZero():[number,number] {\r\n        return this.bbZero.zero(); // lower left ?? better when .center() ??\r\n    }\r\n\r\n    /**\r\n     * @returns All Pads in selection.\r\n     */\r\n    public getSelected():Pad[] {\r\n        let result:Pad[] = [];\r\n        if(this.nearest.length > 0) {\r\n            // console.log(sel[0]);\r\n            if(this.nearest[0].length > 0) {\r\n                result.push(this.nearest[0][0]);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @returns Lower left of selection as tuple\r\n     */\r\n    public getSelectedZero():[number,number] {\r\n        return this.bbSelection.zero();\r\n    }\r\n\r\n    public zoomToFit(size:[number,number]) {\r\n        let psize = this.bbPcb.size();\r\n        let zw = size[0] / psize[0];\r\n        let zh = size[1] / psize[1];\r\n        this.zoom = ((zw > zh)? zh : zw) * .9;\r\n        console.log(`Pcb:zoomToFit zoom ${this.zoom}`, psize);\r\n        this.center();\r\n    }\r\n\r\n    public center() {\r\n        if (this.canvas) {\r\n            this.mouseOffX = -(this.bbPcb.center()[0] * this.zoom) + this.canvas.width / 2;\r\n            this.mouseOffY = -(this.bbPcb.center()[1] * this.zoom) + this.canvas.height / 2;\r\n        }\r\n    }\r\n\r\n\r\n    addPadStyle(name: string, form: string, w: number, h: number) {\r\n        this.mapStyles.set(name, new PadStyle(form, w, h));\r\n    }\r\n\r\n    addPad(style: string, x: number, y: number) {\r\n        if (!this.mapPads.has(style)) {\r\n            this.mapPads.set(style, new Set<Pad>());\r\n        }\r\n        let padset = this.mapPads.get(style);\r\n        if (padset) {\r\n            const newpad = new Pad(style, x, y);\r\n            padset.add(newpad);\r\n            this.bbPcb.update(x, y);\r\n        }\r\n    }\r\n\r\n    retree() {\r\n        try {\r\n            let pads : Pad[] = [];\r\n            for (let padsets of this.mapPads.values()) {\r\n                for (let pad of padsets) {\r\n                    pads.push(pad);\r\n                }\r\n            }\r\n\r\n            this.tree = new kdTree(pads, PCB.distance, [\"posX\", \"posY\"]);\r\n            console.log('tree bf:', this.tree.balanceFactor());\r\n\r\n        } catch(err) { console.error(err); }\r\n    }\r\n\r\n    mouseDown(event: MouseEvent) {\r\n        // console.event.buttons\r\n        const trans = this.ctx.getTransform();\r\n        if(event.button == 0) { // start select\r\n            const mx = (event.clientX * trans.a - this.mouseOffX) / this.zoom;\r\n            const my = (this.canvas.height-(event.clientY - this.canvas.offsetTop) - this.mouseOffY) / this.zoom;\r\n            this.mouseStartX = mx;\r\n            this.mouseStartY = my;\r\n            this.mouseSelectX = mx;\r\n            this.mouseSelectY = my;\r\n            this.mouseSelect = true;\r\n            console.log(`Pcb:mouseDown: x:${this.mouseStartX} y:${this.mouseStartY}`);\r\n        }\r\n        if(event.button != 0) { // pan around\r\n            this.mouseStartX = event.clientX * trans.a - this.mouseOffX;\r\n            this.mouseStartY = event.clientY * trans.d - this.mouseOffY;\r\n            this.mouseFlag = true;\r\n        }\r\n    }\r\n    mouseUp(event: MouseEvent) {\r\n        const trans = this.ctx.getTransform();\r\n        console.log('pcb:mouseUp event:', event);\r\n        if(event.button != 0) {\r\n            this.mouseFlag = false;\r\n        }\r\n        if(event.button == 0) { // select\r\n            this.mouseSelect = false;\r\n            // console.log(trans, event);\r\n            // console.log('', this.canvas.height-(event.clientY-this.canvas.offsetTop), this.mouseOffY);\r\n            const mx = (event.clientX * trans.a - this.mouseOffX) / this.zoom;\r\n            const my = (this.canvas.height-(event.clientY - this.canvas.offsetTop) - this.mouseOffY) / this.zoom;\r\n            this.mouseSelectX = mx;\r\n            this.mouseSelectY = my;\r\n\r\n            // bb = selected rectangle\r\n            this.bbSelection = new BoundingBox();\r\n            this.bbSelection.update(this.mouseStartX, this.mouseStartY);\r\n            this.bbSelection.update(this.mouseSelectX, this.mouseSelectY);\r\n\r\n            let pad = new Pad('', this.bbSelection.center()[0], this.bbSelection.center()[1]);\r\n            console.log(`Pcb:mouseUp cx:${pad.posX} cy:${pad.posY} diagonal:${this.bbSelection.diagonal()}`);\r\n\r\n            if(this.tree) {\r\n                let found:[Pad, number][] = [];\r\n                let dist = this.bbSelection.diagonal();\r\n                if(dist < 0.1) { // no drag - only one\r\n                    found = this.tree.nearest(pad, 1, dist);\r\n                    this.nearest = found;\r\n                } else {\r\n                    dist = (dist/2) * (dist/2); // search require square distance ?\r\n                    found = this.tree.nearest(pad, 99999, dist);\r\n                    if(!event.shiftKey) {\r\n                        this.nearest = [];\r\n                    }\r\n                    for(const near of found) {\r\n                        // console.log(`m:${mx},${my} nearest:${near[0].posX},${near[0].posY}  dist:${Math.sqrt(near[1])}`);\r\n                        /// uuuhhh check if inside the box\r\n                        if(this.bbSelection.inside(near[0])) {\r\n                            this.nearest.push(near);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // need a bb for actual selected points to get zero right\r\n                let bbNewSelection = new BoundingBox();\r\n                for(const near of this.nearest) {\r\n                    bbNewSelection.updateFromPad(near[0]);\r\n                }\r\n                this.bbSelection = bbNewSelection;\r\n\r\n                console.log(`Pcb:mouseUp found #${found.length}`);\r\n            }\r\n        }\r\n    }\r\n    mouseMove(event: MouseEvent) {\r\n        // ooohhh do not trust event.button, it's always 0 here !\r\n        // console.log('pcb:mouseMove',event);\r\n        const trans = this.ctx.getTransform();\r\n        if(this.mouseFlag) {\r\n            this.mouseOffX = event.clientX * trans.a - this.mouseStartX;\r\n            this.mouseOffY = event.clientY * trans.d - this.mouseStartY;\r\n        }\r\n        if(this.mouseSelect ) {\r\n            const mx = (event.clientX * trans.a - this.mouseOffX) / this.zoom;\r\n            const my = (this.canvas.height-(event.clientY - this.canvas.offsetTop) - this.mouseOffY) / this.zoom;\r\n            this.mouseSelectX = mx;\r\n            this.mouseSelectY = my;\r\n        }\r\n    }\r\n    mouseWheel(event: WheelEvent) {\r\n        const trans = this.ctx.getTransform();\r\n        // console.log(event.deltaY);\r\n        if (event.deltaY > 0) {\r\n            this.zoom *= 1.1;\r\n            // this.mouseOffX *= 0.9;\r\n            // this.mouseOffY *= 0.9;\r\n        } else {\r\n            this.zoom *= 0.9;\r\n            // this.mouseOffX *= 1.1;\r\n            // this.mouseOffY *= 1.1;\r\n        }\r\n    }\r\n    mouseOut(event: MouseEvent) {\r\n    }\r\n\r\n    static distance(a:Pad, b:Pad) {\r\n        return Math.pow(a.posX - b.posX, 2) +  Math.pow(a.posY - b.posY, 2);\r\n    }\r\n\r\n    public draw() {\r\n        // theoretisch so...\r\n        // this.ctx.fillStyle = 'orangered';\r\n        this.ctx.fillStyle = 'antiquewhite';\r\n\r\n        // draw bb center\r\n        this.ctx.strokeStyle = 'red';\r\n        let center = this.bbPcb.center(this.zoom);\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(center[0] - 10 + this.mouseOffX, center[1] + this.mouseOffY);\r\n        this.ctx.lineTo(center[0] + 10 + this.mouseOffX, center[1] + this.mouseOffY);\r\n        this.ctx.moveTo(center[0] + this.mouseOffX, center[1] - 10 + this.mouseOffY);\r\n        this.ctx.lineTo(center[0] + this.mouseOffX, center[1] + 10 + this.mouseOffY);\r\n        this.ctx.stroke();\r\n        // draw bb\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(this.bbPcb.zero(this.zoom)[0] + this.mouseOffX, this.bbPcb.zero(this.zoom)[1] + this.mouseOffY, this.bbPcb.size(this.zoom)[0], this.bbPcb.size(this.zoom)[1]);\r\n        this.ctx.stroke();\r\n\r\n        for (let padstyle of this.mapPads.keys()) {\r\n\r\n            const sty = this.mapStyles.get(padstyle);\r\n            const padset = this.mapPads.get(padstyle);\r\n            if (sty && padset) {\r\n                const sw = sty.width * this.zoom;\r\n                const sh = sty.height * this.zoom;\r\n                for (let pad of padset.values()) {\r\n                    if (sty.form == 'R' || sty.form == 'O' || sty.form == 'RoundRect') {\r\n                        this.ctx.beginPath();\r\n\r\n                        this.ctx.fillRect(\r\n                            pad.posX * this.zoom - sw / 2.0 + this.mouseOffX,\r\n                            pad.posY * this.zoom - sh / 2.0 + this.mouseOffY,\r\n                            sw, sh);\r\n                        this.ctx.fill();\r\n\r\n                    } else if (sty.form == 'C') {\r\n                        this.ctx.beginPath();\r\n                        this.ctx.ellipse(\r\n                            pad.posX * this.zoom + this.mouseOffX,\r\n                            pad.posY * this.zoom + this.mouseOffY,\r\n                            sw / 2,\r\n                            sw / 2,\r\n                            0, 0, 2 * Math.PI);\r\n                        // this.ctx.arc(\r\n                        //     pad.posX * this.zoom - sw / 2.0 + this.mouseOffX,\r\n                        //     pad.posY * this.zoom - sh / 2.0 + this.mouseOffY,\r\n                        //     sty.width * this.zoom,\r\n                        //     0, 2 * Math.PI);\r\n                        this.ctx.fill();\r\n                    } else {\r\n                        console.log(`draw quatsch ${sty.form}`);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        } // for padstyle\r\n\r\n        // draw selectionCross(es)\r\n        this.ctx.strokeStyle = 'purple';\r\n        this.ctx.beginPath();\r\n        let csize = .5;\r\n        for(const near of this.nearest) {\r\n            this.ctx.moveTo((near[0].posX-csize) * this.zoom + this.mouseOffX, near[0].posY * this.zoom + this.mouseOffY);\r\n            this.ctx.lineTo((near[0].posX+csize) * this.zoom + this.mouseOffX, near[0].posY * this.zoom + this.mouseOffY);\r\n            this.ctx.moveTo(near[0].posX * this.zoom + this.mouseOffX, (near[0].posY+csize) * this.zoom + this.mouseOffY);\r\n            this.ctx.lineTo(near[0].posX * this.zoom + this.mouseOffX, (near[0].posY-csize) * this.zoom + this.mouseOffY);\r\n            // console.log(`nearest:${near[0].posX},${near[0].posY}  dist:${Math.sqrt(near[1])}`);\r\n        }\r\n        this.ctx.stroke();\r\n\r\n        // draw selection lower left = zero kandidate\r\n        let zero = [0,0];\r\n        if(this.bbSelection) {\r\n            csize = 2 * this.zoom;\r\n            zero = this.bbSelection.zero(this.zoom);\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(zero[0] -csize + this.mouseOffX, zero[1] + this.mouseOffY);\r\n            this.ctx.lineTo(zero[0] +csize + this.mouseOffX, zero[1] + this.mouseOffY);\r\n            this.ctx.moveTo(zero[0] + this.mouseOffX,     zero[1]-csize + this.mouseOffY);\r\n            this.ctx.lineTo(zero[0] + this.mouseOffX,     zero[1]+csize + this.mouseOffY);\r\n            this.ctx.stroke();\r\n        }\r\n\r\n        // draw origin\r\n        this.ctx.strokeStyle = 'black';\r\n        zero = this.bbZero.center(this.zoom);\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(-csize + this.mouseOffX, this.mouseOffY);\r\n        this.ctx.lineTo(+csize + this.mouseOffX, this.mouseOffY);\r\n        this.ctx.moveTo(this.mouseOffX,       -csize + this.mouseOffY);\r\n        this.ctx.lineTo(this.mouseOffX,       +csize + this.mouseOffY);\r\n        this.ctx.stroke();\r\n\r\n        // draw zero\r\n        this.ctx.strokeStyle = 'black';\r\n        zero = this.bbZero.zero(this.zoom);\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(zero[0] -csize + this.mouseOffX, zero[1] + this.mouseOffY);\r\n        this.ctx.lineTo(zero[0] +csize + this.mouseOffX, zero[1] + this.mouseOffY);\r\n        this.ctx.moveTo(zero[0] + this.mouseOffX,     zero[1]-csize + this.mouseOffY);\r\n        this.ctx.lineTo(zero[0] + this.mouseOffX,     zero[1]+csize + this.mouseOffY);\r\n        this.ctx.stroke();\r\n\r\n\r\n        // draw selectionRectangle\r\n        if(this.mouseSelect) {\r\n            this.ctx.strokeStyle = 'purple';\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(this.mouseStartX  * this.zoom + this.mouseOffX, this.mouseStartY  * this.zoom + this.mouseOffY);\r\n            this.ctx.lineTo(this.mouseSelectX * this.zoom + this.mouseOffX, this.mouseStartY  * this.zoom + this.mouseOffY);\r\n            this.ctx.lineTo(this.mouseSelectX * this.zoom + this.mouseOffX, this.mouseSelectY * this.zoom + this.mouseOffY);\r\n            this.ctx.lineTo(this.mouseStartX  * this.zoom + this.mouseOffX, this.mouseSelectY * this.zoom + this.mouseOffY);\r\n            this.ctx.lineTo(this.mouseStartX  * this.zoom + this.mouseOffX, this.mouseStartY  * this.zoom + this.mouseOffY);\r\n            this.ctx.stroke();\r\n        }\r\n    }\r\n\r\n}\r\n","import { PCB } from './pcb';\r\n\r\nexport class Parser {\r\n    public processCB: Function;\r\n\r\n    public padsField: HTMLElement|null;\r\n    public coordsField: HTMLElement|null;\r\n\r\n    public pcb: PCB;\r\n    constructor(pcb: PCB) {\r\n        this.pcb = pcb;\r\n    }\r\n\r\n    public parseFile?(file: File):Promise<void>; // virtual !\r\n    public cancel?(): void;\r\n}\r\n","import { Parser } from \"./parser\";\r\nimport { PCB } from \"./pcb\";\r\n\r\nexport class ParserGerber extends Parser {\r\n    reNumFormat = /^%FSLAX([0-9])([0-9])Y([0-9])([0-9])[*]%/;\r\n    reMatchPad = /^(%AD)(D[0-9]+)([A-Za-z]+)[,]([-0-9.]+)[X]?([-0-9.]+)?[X]?([-0-9.]+)?/;\r\n    reMatchPadCoordInit = /^([DG][0-9]+)[*]/;\r\n    reMatchPadCoord = /^X([-]?)([0-9]+)Y([-]?)([0-9]+)D([0-9]+)[*]/;\r\n    _cancel = false;\r\n    floatFracts = 1;\r\n    floatDezis = 1;\r\n    lastPad = \"\";\r\n\r\n    constructor(pcb: PCB) {\r\n        super(pcb);\r\n    }\r\n\r\n    public parseFile(file: File):Promise<void> {\r\n        return new Promise<void>((resolve) => {\r\n            file.arrayBuffer().then((buf) => {\r\n                arrayBufferToString(buf, 'UTF-8', (text: string) => {\r\n                    this.processGerberText(text).finally(() => {\r\n                        resolve();\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    public cancel(): void {\r\n        this._cancel = true;\r\n    }\r\n\r\n    async processGerberText(text: string) {\r\n        // console.log(text);\r\n        // translate line ends...\r\n        text = text.replace(/\\r/g, ''); // remove windows trash\r\n        const lines = text.split('\\n');\r\n\r\n        let lineNr = 1;\r\n        for (let line of lines) {\r\n            lineNr++;\r\n\r\n            if (this._cancel) {\r\n                this._cancel = false;\r\n                break;\r\n            }\r\n            // console.log(`gerber(${lineNr}/${lines.length}): `);\r\n\r\n            await this.processGerberLine(line);\r\n\r\n            if (this.processCB) {\r\n                this.processCB(lineNr * 100 / lines.length);\r\n            }\r\n\r\n        } // for\r\n\r\n        this.pcb.retree();\r\n    }\r\n\r\n\r\n    async processGerberLine(line: string) {\r\n        return new Promise<void>((resolve) => {\r\n                // line = line.replace(/\\n/g,'<br>');\r\n\r\n                // Zahlenformat info line \"%FSLAX34Y34*%\"\r\n                //   %FSLAX25Y25*% Coordinate format specification:\r\n                //   Coordinates format is 2.5:\r\n                //   2 digits in the integer part\r\n                //   5 digits in the fractional part\r\n                const matchNumFormat = this.reNumFormat.exec(line); //line.match();\r\n                if (matchNumFormat) {\r\n                    // console.log(matchNumFormat);\r\n                    this.floatDezis = parseInt(matchNumFormat[1]);\r\n                    this.floatFracts = parseInt(matchNumFormat[2]);\r\n                    console.log(`gerber: float digits = ${this.floatDezis} ${this.floatFracts}`);\r\n                }\r\n\r\n                // check for pad definitions\r\n                // %ADD21R,0.600000X1.050000*%\r\n                // %ADD10RoundRect,0.120000 X -0.180000\r\n                //               X 0.680000 X -0.180000\r\n                //              X -0.680000 X 0.180000\r\n                //              X -0.680000 X 0.180000\r\n                //               X 0.680000 X 0*%\r\n                const matchPad = this.reMatchPad.exec(line); // line.match();///);\r\n                // Wenn \"C\" dann gibts nur eine coord\r\n                if (matchPad) {\r\n                    // console.log(matchPad);\r\n                    if (this.padsField) {\r\n                        this.padsField.innerHTML += `${matchPad[2]} ${matchPad[3]} ${matchPad[4]} ${matchPad[5]}<br>`;\r\n                    }\r\n                    if (matchPad[3] == 'RoundRect') {\r\n                        // kicad macro schnulli\r\n                        this.pcb.addPadStyle(matchPad[2], matchPad[3], Math.abs(parseFloat(matchPad[5])), Math.abs(parseFloat(matchPad[6])));\r\n                        // console.log(`gerber: style ${matchPad[2]},${matchPad[3]}, ${Math.abs(parseFloat(matchPad[5]))}, ${Math.abs(parseFloat(matchPad[6]))}`);\r\n                    } else {\r\n                        this.pcb.addPadStyle(matchPad[2], matchPad[3], parseFloat(matchPad[4]), parseFloat(matchPad[5]));\r\n                        // console.log(`gerber: style ${matchPad[2]},${matchPad[3]}, ${parseFloat(matchPad[4])}, ${parseFloat(matchPad[5])}`);\r\n                    }\r\n                }\r\n\r\n                // Dxx* command - should be pad draw\r\n                const matchPadCoordInit = this.reMatchPadCoordInit.exec(line); //line.match();///);\r\n                if (matchPadCoordInit) {\r\n                    // console.log(matchPadCoordInit);\r\n                    this.lastPad = matchPadCoordInit[1];\r\n                }\r\n                // a pad line: \"X379984Y963930D03*\"\r\n                const matchPadCoord = this.reMatchPadCoord.exec(line); // line.match();///);\r\n                if (matchPadCoord) {\r\n                    if (this.lastPad.startsWith('D')) { // ignore G36 or so commands\r\n                        // if (1) {\r\n                        // ignore and return ...\r\n                        // resolve();\r\n                        // console.log(matchPadCoord);\r\n                        let sx = matchPadCoord[2];\r\n                        let sy = matchPadCoord[4];\r\n                        const len = this.floatDezis + this.floatFracts;\r\n                        // fill freak's leading zeros\r\n                        while (sx.length < len) {\r\n                            sx = `0${sx}`;\r\n                        }\r\n                        while (sy.length < len) {\r\n                            sy = `0${sy}`;\r\n                        }\r\n                        // make a freak'n float\r\n                        let fx = 0.0;\r\n                        let fy = 0.0;\r\n                        sx = `${sx.substring(0, this.floatDezis)}.${sx.substring(this.floatDezis)}`;\r\n                        sy = `${sy.substring(0, this.floatDezis)}.${sy.substring(this.floatDezis)}`;\r\n                        fx = parseFloat(sx);\r\n                        fy = parseFloat(sy);\r\n                        if (matchPadCoord[1] == '-') {\r\n                            fx = fx * -1.0;\r\n                        }\r\n                        if (matchPadCoord[3] == '-') {\r\n                            fy = fy * -1.0;\r\n                        }\r\n\r\n                        fy = fy;\r\n                        if (this.coordsField) {\r\n                            this.coordsField.innerHTML += `${this.lastPad}:  x:${fx} y:${fy} <br>`;\r\n                        }\r\n                        this.pcb.addPad(this.lastPad, fx, fy);\r\n                        // console.log(`gerber: pad ${lastPad}, ${fx}, ${fy}`);\r\n                    } else {\r\n                        console.log(`ignoring ${this.lastPad}`);\r\n                    }\r\n\r\n                    // if(lineNr > 1500) {\r\n                    //     break; // for testing !!!\r\n                    // }\r\n                }\r\n            this.pcb.center();\r\n            setTimeout(resolve, 0); // this enables the progressbar / UI updates !\r\n        });\r\n    }\r\n}\r\n\r\n// found on se web...\r\n\r\nfunction arrayBufferToString(buffer, encoding, callback) {\r\n    var blob = new Blob([buffer], { type: 'text/plain' });\r\n    var reader = new FileReader();\r\n    reader.onload = (evt) => { if(evt.target) callback(evt.target.result); };\r\n    reader.readAsText(blob, encoding);\r\n}\r\n\r\nfunction stringToArrayBuffer(string, encoding, callback) {\r\n    var blob = new Blob([string], { type: 'text/plain;charset=' + encoding });\r\n    var reader = new FileReader();\r\n    reader.onload = (evt) => { if(evt.target) callback(evt.target.result); };\r\n    reader.readAsArrayBuffer(blob);\r\n}\r\n","import { Grid, Mouse } from 'canvas-coords' // https://github.com/CodeDraken/canvas-coords\r\nimport { Device } from './device';\r\nimport { Marlin } from './deviceMarlin';\r\nimport { PCB, Pad, PadStyle } from './pcb';\r\nimport { ParserGerber } from './parserGerber';\r\n\r\nconst body: HTMLBodyElement | null = <HTMLBodyElement | null>document.getElementsByTagName('body')[0];\r\nconst messageElem: HTMLDivElement | null = <HTMLDivElement | null>document.getElementById(\"messageElem\");\r\nconst uploadButton: HTMLButtonElement | null = <HTMLButtonElement | null>document.getElementById(\"uploadButton\");\r\nconst padsField: HTMLDivElement | null = <HTMLDivElement | null>document.getElementById(\"padsField\");\r\nconst coords: HTMLDivElement | null = <HTMLDivElement | null>document.getElementById(\"Coords\");\r\nconst coordsField: HTMLDivElement | null = <HTMLDivElement | null>document.getElementById(\"coordsField\");\r\nconst dropZone: HTMLElement | null = document.getElementById(\"dropZone\");\r\nconst canvas: HTMLCanvasElement | null = <HTMLCanvasElement | null>document.getElementById(\"canvas\");\r\nconst debug: HTMLDivElement | null = <HTMLDivElement | null>document.getElementById(\"debug\");\r\nconst progress: HTMLDivElement | null = <HTMLDivElement | null>document.getElementById(\"progress\");\r\nconst progressbar: HTMLDivElement | null = <HTMLDivElement | null>document.getElementById('progressbar');\r\nconst contextMenu: HTMLDivElement | null = <HTMLDivElement | null>document.getElementById('contextMenu');\r\nconst progressCancel: HTMLButtonElement | null = <HTMLButtonElement | null>document.getElementById('progressCancel');\r\n\r\nconst menuSetZero: HTMLButtonElement | null = <HTMLButtonElement | null>document.getElementById(\"menuSetZero\");\r\nconst menuMoveTo: HTMLButtonElement | null = <HTMLButtonElement | null>document.getElementById(\"menuMoveTo\");\r\n\r\nconst main: HTMLDivElement | null = <HTMLDivElement | null>document.getElementById(\"main\");\r\nconst openSidebarButton: HTMLButtonElement | null = <HTMLButtonElement | null>document.getElementById(\"openSidebar\");\r\n\r\nconst header = document.getElementsByTagName('header')[0];\r\nconst footer = document.getElementById('footer');\r\n\r\nlet messageClearTimeout:number|undefined = undefined;\r\nlet ctx: CanvasRenderingContext2D | null = null;\r\nlet mouse: Mouse, grid: Grid;\r\nlet pcb: PCB;\r\n\r\nlet device = new Marlin();\r\n\r\nfunction init() {\r\n    if (uploadButton && menuSetZero && menuMoveTo && progressCancel && padsField && coordsField && body && canvas && footer) {\r\n        ctx = canvas.getContext(\"2d\");\r\n\r\n        canvas.addEventListener(\"mousemove\", (event) => {\r\n            if (pcb) pcb.mouseMove(event);\r\n            event.preventDefault();\r\n        }, false);\r\n        canvas.addEventListener(\"mousedown\", (event) => {\r\n            if (pcb) pcb.mouseDown(event);\r\n            event.preventDefault();\r\n        }, false);\r\n        canvas.addEventListener(\"mouseup\", (event) => {\r\n            if (pcb) pcb.mouseUp(event);\r\n            event.preventDefault();\r\n        }, false);\r\n        canvas.addEventListener(\"mouseout\", (event) => {\r\n            if (pcb) pcb.mouseOut(event);\r\n            event.preventDefault();\r\n        }, false);\r\n        canvas.addEventListener(\"wheel\", (event) => {\r\n            if (pcb) pcb.mouseWheel(event);\r\n            event.preventDefault();\r\n        }, false);\r\n\r\n        uploadButton.onclick = () => {\r\n            var uploadFileEle = document.createElement('input');\r\n            uploadFileEle.type = \"file\";\r\n            uploadFileEle.click();\r\n            uploadFileEle.addEventListener(\"change\", (ev: Event) => {\r\n                console.log(ev);\r\n                // check if user had selected a file\r\n                if (uploadFileEle.files && uploadFileEle.files.length > 0) {\r\n                    let file = uploadFileEle.files[0]\r\n                    console.log(file);\r\n                    console.log(`file: ${file.name} size:${file.size}`);\r\n\r\n                    processGerberFile(file);\r\n\r\n                } else {\r\n                    alert('please choose a file')\r\n                    return\r\n                }\r\n            })\r\n            return false;\r\n        }\r\n\r\n        menuSetZero.onclick = (event:MouseEvent) => {\r\n            pcb.setZero();\r\n            device.setZero(pcb.getZero()); // device must substract \"zero\" from all coords\r\n        }\r\n\r\n        menuMoveTo.onclick = (event:MouseEvent) => {\r\n            // console.log(event);\r\n            // find the coords !!!\r\n            // !!! need to be relative to zero !!! uuuhhh\r\n\r\n            // let pads = pcb.getSelected();\r\n            // if (pads.length > 0) {\r\n            //     let pad: Pad = pads[0];\r\n            //     console.log(pad);\r\n            //     device.moveTo(pad.posX, pad.posY, undefined, undefined);\r\n            // }\r\n\r\n            let pos = pcb.getSelectedZero(); // lower left of selection\r\n            device.moveTo(pos[0], pos[1], undefined, undefined);\r\n        }\r\n\r\n        body.ondrop = (ev) => {\r\n            ev.preventDefault();\r\n            console.log(ev);\r\n            if (ev.dataTransfer && ev.dataTransfer.items) {\r\n                // Use DataTransferItemList interface to access the file(s)\r\n                [...ev.dataTransfer.items].forEach((item, i) => {\r\n                    // If dropped items aren't files, reject them\r\n                    if (item.kind === 'file') {\r\n                        const file = item.getAsFile();\r\n                        if (file) {\r\n                            console.log(`… item[${i}].name = ${file.name}`);\r\n                            processGerberFile(file);\r\n                        }\r\n                    }\r\n                });\r\n            } else if (ev.dataTransfer) {\r\n                // Use DataTransfer interface to access the file(s)\r\n                [...ev.dataTransfer.files].forEach((file, i) => {\r\n                    if (file) {\r\n                        console.log(`… file[${i}].name = ${file.name}`);\r\n                        processGerberFile(file);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        body.ondragover = (ev) => {\r\n            console.log('File(s) in drop zone');\r\n\r\n            // Prevent default behavior (Prevent file from being opened)\r\n            ev.preventDefault();\r\n        }\r\n        body.oncontextmenu = (ev) => {\r\n            // console.log('oncontextmenu',ev);\r\n            ev.preventDefault();\r\n            if (contextMenu) {\r\n                contextMenu.style.left = `${ev.pageX}px`;\r\n                contextMenu.style.top = `${ev.pageY}px`;\r\n                contextMenu.className = contextMenu.className.replace('w3-hide', 'w3-show');\r\n            }\r\n        }\r\n        body.onmouseup = (ev) => {\r\n            if (contextMenu) {\r\n                contextMenu.className = contextMenu.className.replace('w3-show', 'w3-hide');\r\n            }\r\n        }\r\n\r\n\r\n        canvas.width = innerWidth;\r\n        canvas.height = innerHeight - header.getBoundingClientRect().height - footer.getBoundingClientRect().height - 7;\r\n\r\n        if (ctx) {\r\n            pcb = new PCB(ctx, canvas);\r\n\r\n            mouse = new Mouse(ctx, canvas);\r\n            mouse.track();\r\n            grid = new Grid();\r\n            grid.step = 2;\r\n            grid.lineWidth = 0.03;\r\n            grid.boldWidth = 0.05;\r\n            grid.createLines(canvas);\r\n        }\r\n\r\n        globalThis.resize();\r\n\r\n        window.requestAnimationFrame(update);\r\n    }\r\n    else {\r\n        console.error('missing html elements !');\r\n    }\r\n}\r\n\r\nfunction message(text: string) {\r\n    if(messageClearTimeout) {\r\n        window.clearTimeout(messageClearTimeout);\r\n    }\r\n    if(messageElem) {\r\n        messageElem.innerHTML = `${text}`;\r\n        messageClearTimeout = window.setTimeout(messageClear, 10000);\r\n    }\r\n}\r\nfunction messageClear() {\r\n    messageClearTimeout = undefined;\r\n    if(messageElem) {\r\n        messageElem.innerHTML = '';\r\n    }\r\n}\r\n\r\nfunction update() {\r\n    if (canvas && ctx) {\r\n        window.requestAnimationFrame(update);\r\n\r\n        ctx.setTransform(\r\n            pcb ? pcb.zoom : 1, 0,\r\n            0, pcb ? pcb.zoom : 1,\r\n            0, 0);\r\n\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        // grid.draw(ctx, canvas);\r\n        // grid.step = pcb?10.0/pcb.zoom:10.0;\r\n        // grid.createLines(canvas);\r\n        grid.lines.forEach(line => line.draw(ctx))\r\n        mouse.draw();\r\n\r\n\r\n        ctx.setTransform(\r\n            1, 0,\r\n            0, -1,\r\n            0, canvas.height);\r\n\r\n        // ctx.scale(1,-1); // flip display y\r\n\r\n        if (pcb) {\r\n            pcb.draw();\r\n        }\r\n    }\r\n}\r\n\r\nasync function processGerberFile(file: File) {\r\n    if (padsField && coordsField && ctx && canvas && progress && progressbar && progressCancel && dropZone) { // makes typescript happy...\r\n\r\n        pcb = new PCB(ctx, canvas);\r\n        let parser = new ParserGerber(pcb);\r\n\r\n        padsField.innerHTML = '';\r\n        coordsField.innerHTML = '';\r\n        dropZone.innerText = file.name;\r\n        progress.style.display = 'block';\r\n\r\n        parser.padsField = padsField;\r\n        parser.coordsField = coordsField;\r\n        progressCancel.onclick = () => {\r\n            parser.cancel();\r\n        }\r\n        parser.processCB = (value:number) => {\r\n            if (progressbar) {\r\n                progressbar.style.width = `${value}%`;\r\n                // console.log('progress:', value);\r\n            }\r\n        }\r\n        await parser.parseFile(file);\r\n\r\n        pcb.zoomToFit([canvas.width, canvas.height]);\r\n\r\n        progress.style.display = 'none';\r\n    }\r\n}\r\n\r\n\r\nglobalThis.accordionToggler = (id: string) => {\r\n    var elem = document.getElementById(id);\r\n    if (elem) {\r\n        if (elem.className.indexOf(\"w3-show\") == -1 && elem.className.indexOf(\"w3-hide\") == -1) {\r\n            elem.className += \" w3-show\";\r\n        } else if (elem.className.indexOf(\"w3-show\") != -1) {\r\n            elem.className = elem.className.replace(\"w3-show\", \"w3-hide\");\r\n        } else {\r\n            elem.className = elem.className.replace(\"w3-hide\", \"w3-show\");\r\n        }\r\n    } else {\r\n        console.warn('accordionToggler no elem with id:', id);\r\n    }\r\n    globalThis.resize();\r\n}\r\n\r\nglobalThis.openSidebar = () => {\r\n    if (main && debug && openSidebarButton) {\r\n        main.style.marginRight = \"350px\";\r\n        debug.style.width = \"350px\";\r\n        debug.style.display = \"block\";\r\n        openSidebarButton.style.display = 'none';\r\n    }\r\n}\r\n\r\nglobalThis.closeSidebar = () => {\r\n    if (main && debug && openSidebarButton) {\r\n        main.style.marginRight = \"0px\";\r\n        debug.style.display = \"none\";\r\n        openSidebarButton.style.display = \"inline-block\";\r\n    }\r\n}\r\n\r\nglobalThis.zoomToFit = () => {\r\n    if(pcb && canvas) {\r\n        pcb.zoomToFit([canvas.width, canvas.height]);\r\n    }\r\n}\r\n\r\nglobalThis.rotateRight = () => {\r\n    if(pcb && canvas) {\r\n        // pcb.zoomToFit([canvas.width, canvas.height]);\r\n    }\r\n    message('müsste ma einer implementieren, ne');\r\n}\r\n\r\nglobalThis.resize = () => {\r\n    if (canvas && header && footer && debug && coords) {\r\n        canvas.width = innerWidth;\r\n        canvas.height = innerHeight - header.getBoundingClientRect().height - footer.getBoundingClientRect().height;\r\n        mouse.draw();\r\n        grid.draw(ctx, canvas);\r\n\r\n        // height of debug is innerHeight - margin top/bottom more or less - footer.height\r\n        // console.log('resize: margin', debug.getBoundingClientRect().top);\r\n        let dmaxheight = innerHeight - footer.getBoundingClientRect().height; // canvas.height + header.getBoundingClientRect().height - 16;\r\n        // debug.style.height = `${dheight}px`; // 16 is marginTop\r\n        // console.log('resize: inner height', innerHeight);\r\n        // console.log('resize: debug height', dheight);\r\n\r\n        // height of all other elements in debug\r\n        let height = 0;\r\n        for (let child of debug.children) {\r\n            let elem: HTMLElement = <HTMLElement>child;\r\n            // console.log(`resize:   ${child.id} ${elem.clientHeight} ${elem.className}`);\r\n            if(elem.className.indexOf('w3-hide') != -1)\r\n                continue;\r\n            height += elem.clientHeight;\r\n        }\r\n\r\n        console.log('resize: debug content height', height);\r\n\r\n        // so far so good\r\n\r\n        // if coords is shown, set debug size to max\r\n        // if coords is shown, give it all the rest of the space\r\n        console.log('resize coords ', coords.className.indexOf('w3-hide'));\r\n        if(coords.className.indexOf('w3-hide') != -1) {\r\n            console.log('resize coords is NOT visible');\r\n            debug.style.height = `${height+16}px`;\r\n            coords.style.height = `${16}px`; // egal ?\r\n        } else {\r\n            console.log('resize coords is visible');\r\n            height -= coords.getBoundingClientRect().height; // do not count coords to hight\r\n            debug.style.height = `${dmaxheight}px`;\r\n            coords.style.height = `${dmaxheight - height - 16}px`;\r\n        }\r\n    }\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', init);\r\n\r\nwindow.addEventListener('resize', (val) => {\r\n    // console.log(`resize: ${val}`);\r\n    globalThis.resize();\r\n})\r\n"],"names":["a","g","t","e","TypeError","c","o","length","s","enumerable","configurable","writable","Object","defineProperty","key","i","arguments","r","n","this","x","y","ctx","canvas","color","font","setPos","bind","prototype","h","value","addEventListener","removeEventListener","getBoundingClientRect","Math","floor","clientX","left","clientY","top","concat","save","fillStyle","width","measureText","v","height","fillText","restore","d","f","b","l","lineWidth","startX","startY","endX","endY","beginPath","strokeStyle","moveTo","lineTo","stroke","j","step","boldNth","boldColor","boldWidth","lines","push","$","createLines","forEach","draw","drawText","Mouse","Grid","$c0e850328e6b509c$exports","$d86f0ae2c7fe36e0$export$8215d14a63d9fb10","deviceCheck","document","getElementById","deviceConnect","deviceDisconnect","deviceInput","deviceInputForm","deviceInfo","deviceLog","deviceSerial","port","textDecoder","TextDecoderStream","onclick","serialCheck","serialConnect","serialDisconnect","onsubmit","serialInputForm","navigator","serial","requestPort","then","console","log","serialPortOpen","reason","serialError","vid","pid","ports","getInfo","usbProductId","usbVendorId","async","close","error","warn","timeout","Promise","resolve","reject","serialWrite","available","timestep","maxtime","serialAvail","inputQueue","pop","err","event","preventDefault","serialInputChange","text","result","updatePorts","getPorts","html","innerHTML","btns","getElementsByTagName","btn","ids","id","split","serialConnectDevice","parseInt","className","replace","onconnect","ondisconnect","onSerialDisconnected","open","baudRate","val","onSerialConnected","setTimeout","serialRead","toString","readable","pipeTo","getReader","serialReadon","done","reader","read","releaseLock","pushedStuff","indexOf","values","inputLast","serialLog","serialCallback","utf8Encode","TextEncoder","$3e46d46990e31732$var$Status","Status","obj","right","parent","dimension","content","scoreFunction","bubbleUp","sinkDown","peek","remove","Error","size","u","kdTree","Array","isArray","root","sort","slice","toJSON","insert","nearest","p","abs","min","balanceFactor","max","BinaryHeap","define","amd","$8a913147b03fa214$exports","$54033deb9df7af75$var$BoundingBox","minx","miny","maxx","maxy","constructor","updateFromPad","pad","update","posX","posY","center","zoom","zero","diagonal","sqrt","inside","$54033deb9df7af75$export$138f967feff4fb19","form","w","$54033deb9df7af75$export$4b43d51f29457384","style","asTuple","$54033deb9df7af75$export$bdf465113f979d8f","fileName","mouseFlag","mouseStartX","mouseStartY","mouseOffX","mouseOffY","mapStyles","Map","mapPads","bbPcb","bbZero","bbSelection","setZero","getZero","getSelected","getSelectedZero","zoomToFit","psize","zw","zh","name","set","addPad","has","Set","padset","get","newpad","add","pads","padsets","tree","distance","trans","getTransform","button","mx","my","offsetTop","mouseSelectX","mouseSelectY","mouseSelect","found","dist","shiftKey","near","bbNewSelection","near1","deltaY","pow","rect","keys","padstyle","sty","fillRect","sw","sh","fill","ellipse","PI","csize","$6401b53bf7af177a$export$7acfa6ed01010e37","pcb","$f25b1b1482b2219b$export$fc5d4ca282e021b1","reNumFormat","reMatchPad","reMatchPadCoordInit","reMatchPadCoord","_cancel","floatFracts","floatDezis","lastPad","super","parseFile","file","arrayBuffer","buf","encoding","callback","blob","processGerberText","finally","Blob","type","FileReader","onload","evt","target","readAsText","cancel","lineNr","line","processGerberLine","processCB","retree","matchNumFormat","exec","matchPad","padsField","addPadStyle","parseFloat","matchPadCoordInit","matchPadCoord","startsWith","sx","sy","len","fx","fy","substring","coordsField","$b4e14b6b8da86996$var$body","$b4e14b6b8da86996$var$messageElem","$b4e14b6b8da86996$var$uploadButton","$b4e14b6b8da86996$var$padsField","$b4e14b6b8da86996$var$coords","$b4e14b6b8da86996$var$coordsField","$b4e14b6b8da86996$var$dropZone","$b4e14b6b8da86996$var$canvas","$b4e14b6b8da86996$var$debug","$b4e14b6b8da86996$var$progress","$b4e14b6b8da86996$var$progressbar","$b4e14b6b8da86996$var$contextMenu","$b4e14b6b8da86996$var$progressCancel","$b4e14b6b8da86996$var$menuSetZero","$b4e14b6b8da86996$var$menuMoveTo","$b4e14b6b8da86996$var$main","$b4e14b6b8da86996$var$openSidebarButton","$b4e14b6b8da86996$var$header","$b4e14b6b8da86996$var$footer","$b4e14b6b8da86996$var$messageClearTimeout","$b4e14b6b8da86996$var$mouse","$b4e14b6b8da86996$var$grid","$b4e14b6b8da86996$var$pcb","$b4e14b6b8da86996$var$ctx","$b4e14b6b8da86996$var$device","marlinDiv","initHtml","point","serialWriteWait","onBtnPos","z","cmd","undefined","setStatus","Ready","marlinDivStatus","marlinDivCommands","onBtnCold","onBtnRel","NC","Busy","status","onBtnHome","catch","marlinDivPosition","innerText","onBtnAbs","$b4e14b6b8da86996$var$messageClear","$b4e14b6b8da86996$var$update","window","requestAnimationFrame","setTransform","clearRect","$b4e14b6b8da86996$var$processGerberFile","parser","display","globalThis","accordionToggler","elem","resize","openSidebar","marginRight","closeSidebar","rotateRight","clearTimeout","innerWidth","innerHeight","dmaxheight","child","children","clientHeight","getContext","mouseMove","mouseDown","mouseUp","mouseOut","mouseWheel","uploadFileEle","createElement","click","ev","files","alert","pos","ondrop","dataTransfer","items","item","kind","getAsFile","ondragover","oncontextmenu","pageX","pageY","onmouseup","track"],"version":3,"file":"index.8e6c15f0.js.map"}